{
  "KSampler": {
    "input": {
      "required": {
        "model": ["MODEL"],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e19
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8,
            "min": 0,
            "max": 100,
            "step": 0.1,
            "round": 0.01
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "positive": ["CONDITIONING"],
        "negative": ["CONDITIONING"],
        "latent_image": ["LATENT"],
        "denoise": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": ["LATENT"],
    "output_is_list": [false],
    "output_name": ["LATENT"],
    "name": "KSampler",
    "display_name": "KSampler",
    "description": "",
    "category": "sampling",
    "output_node": false
  },
  "CheckpointLoaderSimple": {
    "input": {
      "required": {
        "ckpt_name": [
          [
            "Aniverse.safetensors",
            "Desync Image v5.safetensors",
            "MajicMix.safetensors",
            "Realistic Vision.safetensors",
            "darkSushi25D25D_v40.safetensors",
            "darksun_v41.safetensors",
            "era09_v10.safetensors",
            "pasteldiffusedmix.safetensors",
            "richyrichmix_V2Fp16.safetensors"
          ]
        ]
      }
    },
    "output": ["MODEL", "CLIP", "VAE"],
    "output_is_list": [false, false, false],
    "output_name": ["MODEL", "CLIP", "VAE"],
    "name": "CheckpointLoaderSimple",
    "display_name": "Load Checkpoint",
    "description": "",
    "category": "loaders",
    "output_node": false
  },
  "CLIPTextEncode": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "multiline": true
          }
        ],
        "clip": ["CLIP"]
      }
    },
    "output": ["CONDITIONING"],
    "output_is_list": [false],
    "output_name": ["CONDITIONING"],
    "name": "CLIPTextEncode",
    "display_name": "CLIP Text Encode (Prompt)",
    "description": "",
    "category": "conditioning",
    "output_node": false
  },
  "CLIPSetLastLayer": {
    "input": {
      "required": {
        "clip": ["CLIP"],
        "stop_at_clip_layer": [
          "INT",
          {
            "default": -1,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ]
      }
    },
    "output": ["CLIP"],
    "output_is_list": [false],
    "output_name": ["CLIP"],
    "name": "CLIPSetLastLayer",
    "display_name": "CLIP Set Last Layer",
    "description": "",
    "category": "conditioning",
    "output_node": false
  },
  "VAEDecode": {
    "input": {
      "required": {
        "samples": ["LATENT"],
        "vae": ["VAE"]
      }
    },
    "output": ["IMAGE"],
    "output_is_list": [false],
    "output_name": ["IMAGE"],
    "name": "VAEDecode",
    "display_name": "VAE Decode",
    "description": "",
    "category": "latent",
    "output_node": false
  },
  "VAEEncode": {
    "input": {
      "required": {
        "pixels": ["IMAGE"],
        "vae": ["VAE"]
      }
    },
    "output": ["LATENT"],
    "output_is_list": [false],
    "output_name": ["LATENT"],
    "name": "VAEEncode",
    "display_name": "VAE Encode",
    "description": "",
    "category": "latent",
    "output_node": false
  },
  "VAEEncodeForInpaint": {
    "input": {
      "required": {
        "pixels": ["IMAGE"],
        "vae": ["VAE"],
        "mask": ["MASK"],
        "grow_mask_by": [
          "INT",
          {
            "default": 6,
            "min": 0,
            "max": 64,
            "step": 1
          }
        ]
      }
    },
    "output": ["LATENT"],
    "output_is_list": [false],
    "output_name": ["LATENT"],
    "name": "VAEEncodeForInpaint",
    "display_name": "VAE Encode (for Inpainting)",
    "description": "",
    "category": "latent/inpaint",
    "output_node": false
  },
  "VAELoader": {
    "input": {
      "required": {
        "vae_name": [["vae-ft-mse-840000-ema-pruned.safetensors"]]
      }
    },
    "output": ["VAE"],
    "output_is_list": [false],
    "output_name": ["VAE"],
    "name": "VAELoader",
    "display_name": "Load VAE",
    "description": "",
    "category": "loaders",
    "output_node": false
  },
  "EmptyLatentImage": {
    "input": {
      "required": {
        "width": [
          "INT",
          {
            "default": 512,
            "min": 16,
            "max": 8192,
            "step": 8
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 16,
            "max": 8192,
            "step": 8
          }
        ],
        "batch_size": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 4096
          }
        ]
      }
    },
    "output": ["LATENT"],
    "output_is_list": [false],
    "output_name": ["LATENT"],
    "name": "EmptyLatentImage",
    "display_name": "Empty Latent Image",
    "description": "",
    "category": "latent",
    "output_node": false
  },
  "LatentUpscale": {
    "input": {
      "required": {
        "samples": ["LATENT"],
        "upscale_method": [
          ["nearest-exact", "bilinear", "area", "bicubic", "bislerp"]
        ],
        "width": [
          "INT",
          {
            "default": 512,
            "min": 0,
            "max": 8192,
            "step": 8
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 0,
            "max": 8192,
            "step": 8
          }
        ],
        "crop": [["disabled", "center"]]
      }
    },
    "output": ["LATENT"],
    "output_is_list": [false],
    "output_name": ["LATENT"],
    "name": "LatentUpscale",
    "display_name": "Upscale Latent",
    "description": "",
    "category": "latent",
    "output_node": false
  },
  "LatentUpscaleBy": {
    "input": {
      "required": {
        "samples": ["LATENT"],
        "upscale_method": [
          ["nearest-exact", "bilinear", "area", "bicubic", "bislerp"]
        ],
        "scale_by": [
          "FLOAT",
          {
            "default": 1.5,
            "min": 0.01,
            "max": 8,
            "step": 0.01
          }
        ]
      }
    },
    "output": ["LATENT"],
    "output_is_list": [false],
    "output_name": ["LATENT"],
    "name": "LatentUpscaleBy",
    "display_name": "Upscale Latent By",
    "description": "",
    "category": "latent",
    "output_node": false
  },
  "LatentFromBatch": {
    "input": {
      "required": {
        "samples": ["LATENT"],
        "batch_index": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 63
          }
        ],
        "length": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 64
          }
        ]
      }
    },
    "output": ["LATENT"],
    "output_is_list": [false],
    "output_name": ["LATENT"],
    "name": "LatentFromBatch",
    "display_name": "Latent From Batch",
    "description": "",
    "category": "latent/batch",
    "output_node": false
  },
  "RepeatLatentBatch": {
    "input": {
      "required": {
        "samples": ["LATENT"],
        "amount": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 64
          }
        ]
      }
    },
    "output": ["LATENT"],
    "output_is_list": [false],
    "output_name": ["LATENT"],
    "name": "RepeatLatentBatch",
    "display_name": "Repeat Latent Batch",
    "description": "",
    "category": "latent/batch",
    "output_node": false
  },
  "SaveImage": {
    "input": {
      "required": {
        "images": ["IMAGE"],
        "filename_prefix": [
          "STRING",
          {
            "default": "ComfyUI"
          }
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO"
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "SaveImage",
    "display_name": "Save Image",
    "description": "",
    "category": "image",
    "output_node": true
  },
  "PreviewImage": {
    "input": {
      "required": {
        "images": ["IMAGE"]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO"
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "PreviewImage",
    "display_name": "Preview Image",
    "description": "",
    "category": "image",
    "output_node": true
  },
  "LoadImage": {
    "input": {
      "required": {
        "image": [
          ["example.png"],
          {
            "image_upload": true
          }
        ]
      }
    },
    "output": ["IMAGE", "MASK"],
    "output_is_list": [false, false],
    "output_name": ["IMAGE", "MASK"],
    "name": "LoadImage",
    "display_name": "Load Image",
    "description": "",
    "category": "image",
    "output_node": false
  },
  "LoadImageMask": {
    "input": {
      "required": {
        "image": [
          ["example.png"],
          {
            "image_upload": true
          }
        ],
        "channel": [["alpha", "red", "green", "blue"]]
      }
    },
    "output": ["MASK"],
    "output_is_list": [false],
    "output_name": ["MASK"],
    "name": "LoadImageMask",
    "display_name": "Load Image (as Mask)",
    "description": "",
    "category": "mask",
    "output_node": false
  },
  "ImageScale": {
    "input": {
      "required": {
        "image": ["IMAGE"],
        "upscale_method": [
          ["nearest-exact", "bilinear", "area", "bicubic", "lanczos"]
        ],
        "width": [
          "INT",
          {
            "default": 512,
            "min": 0,
            "max": 8192,
            "step": 1
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 0,
            "max": 8192,
            "step": 1
          }
        ],
        "crop": [["disabled", "center"]]
      }
    },
    "output": ["IMAGE"],
    "output_is_list": [false],
    "output_name": ["IMAGE"],
    "name": "ImageScale",
    "display_name": "Upscale Image",
    "description": "",
    "category": "image/upscaling",
    "output_node": false
  },
  "ImageScaleBy": {
    "input": {
      "required": {
        "image": ["IMAGE"],
        "upscale_method": [
          ["nearest-exact", "bilinear", "area", "bicubic", "lanczos"]
        ],
        "scale_by": [
          "FLOAT",
          {
            "default": 1,
            "min": 0.01,
            "max": 8,
            "step": 0.01
          }
        ]
      }
    },
    "output": ["IMAGE"],
    "output_is_list": [false],
    "output_name": ["IMAGE"],
    "name": "ImageScaleBy",
    "display_name": "Upscale Image By",
    "description": "",
    "category": "image/upscaling",
    "output_node": false
  },
  "ImageInvert": {
    "input": {
      "required": {
        "image": ["IMAGE"]
      }
    },
    "output": ["IMAGE"],
    "output_is_list": [false],
    "output_name": ["IMAGE"],
    "name": "ImageInvert",
    "display_name": "Invert Image",
    "description": "",
    "category": "image",
    "output_node": false
  },
  "ImageBatch": {
    "input": {
      "required": {
        "image1": ["IMAGE"],
        "image2": ["IMAGE"]
      }
    },
    "output": ["IMAGE"],
    "output_is_list": [false],
    "output_name": ["IMAGE"],
    "name": "ImageBatch",
    "display_name": "Batch Images",
    "description": "",
    "category": "image",
    "output_node": false
  },
  "ImagePadForOutpaint": {
    "input": {
      "required": {
        "image": ["IMAGE"],
        "left": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 8192,
            "step": 8
          }
        ],
        "top": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 8192,
            "step": 8
          }
        ],
        "right": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 8192,
            "step": 8
          }
        ],
        "bottom": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 8192,
            "step": 8
          }
        ],
        "feathering": [
          "INT",
          {
            "default": 40,
            "min": 0,
            "max": 8192,
            "step": 1
          }
        ]
      }
    },
    "output": ["IMAGE", "MASK"],
    "output_is_list": [false, false],
    "output_name": ["IMAGE", "MASK"],
    "name": "ImagePadForOutpaint",
    "display_name": "Pad Image for Outpainting",
    "description": "",
    "category": "image",
    "output_node": false
  },
  "EmptyImage": {
    "input": {
      "required": {
        "width": [
          "INT",
          {
            "default": 512,
            "min": 1,
            "max": 8192,
            "step": 1
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 1,
            "max": 8192,
            "step": 1
          }
        ],
        "batch_size": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 4096
          }
        ],
        "color": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16777215,
            "step": 1,
            "display": "color"
          }
        ]
      }
    },
    "output": ["IMAGE"],
    "output_is_list": [false],
    "output_name": ["IMAGE"],
    "name": "EmptyImage",
    "display_name": "EmptyImage",
    "description": "",
    "category": "image",
    "output_node": false
  },
  "ConditioningAverage": {
    "input": {
      "required": {
        "conditioning_to": ["CONDITIONING"],
        "conditioning_from": ["CONDITIONING"],
        "conditioning_to_strength": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": ["CONDITIONING"],
    "output_is_list": [false],
    "output_name": ["CONDITIONING"],
    "name": "ConditioningAverage",
    "display_name": "ConditioningAverage",
    "description": "",
    "category": "conditioning",
    "output_node": false
  },
  "ConditioningCombine": {
    "input": {
      "required": {
        "conditioning_1": ["CONDITIONING"],
        "conditioning_2": ["CONDITIONING"]
      }
    },
    "output": ["CONDITIONING"],
    "output_is_list": [false],
    "output_name": ["CONDITIONING"],
    "name": "ConditioningCombine",
    "display_name": "Conditioning (Combine)",
    "description": "",
    "category": "conditioning",
    "output_node": false
  },
  "ConditioningConcat": {
    "input": {
      "required": {
        "conditioning_to": ["CONDITIONING"],
        "conditioning_from": ["CONDITIONING"]
      }
    },
    "output": ["CONDITIONING"],
    "output_is_list": [false],
    "output_name": ["CONDITIONING"],
    "name": "ConditioningConcat",
    "display_name": "Conditioning (Concat)",
    "description": "",
    "category": "conditioning",
    "output_node": false
  },
  "ConditioningSetArea": {
    "input": {
      "required": {
        "conditioning": ["CONDITIONING"],
        "width": [
          "INT",
          {
            "default": 64,
            "min": 64,
            "max": 8192,
            "step": 8
          }
        ],
        "height": [
          "INT",
          {
            "default": 64,
            "min": 64,
            "max": 8192,
            "step": 8
          }
        ],
        "x": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 8192,
            "step": 8
          }
        ],
        "y": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 8192,
            "step": 8
          }
        ],
        "strength": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ]
      }
    },
    "output": ["CONDITIONING"],
    "output_is_list": [false],
    "output_name": ["CONDITIONING"],
    "name": "ConditioningSetArea",
    "display_name": "Conditioning (Set Area)",
    "description": "",
    "category": "conditioning",
    "output_node": false
  },
  "ConditioningSetAreaPercentage": {
    "input": {
      "required": {
        "conditioning": ["CONDITIONING"],
        "width": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "height": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "x": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "y": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "strength": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ]
      }
    },
    "output": ["CONDITIONING"],
    "output_is_list": [false],
    "output_name": ["CONDITIONING"],
    "name": "ConditioningSetAreaPercentage",
    "display_name": "Conditioning (Set Area with Percentage)",
    "description": "",
    "category": "conditioning",
    "output_node": false
  },
  "ConditioningSetMask": {
    "input": {
      "required": {
        "conditioning": ["CONDITIONING"],
        "mask": ["MASK"],
        "strength": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "set_cond_area": [["default", "mask bounds"]]
      }
    },
    "output": ["CONDITIONING"],
    "output_is_list": [false],
    "output_name": ["CONDITIONING"],
    "name": "ConditioningSetMask",
    "display_name": "Conditioning (Set Mask)",
    "description": "",
    "category": "conditioning",
    "output_node": false
  },
  "KSamplerAdvanced": {
    "input": {
      "required": {
        "model": ["MODEL"],
        "add_noise": [["enable", "disable"]],
        "noise_seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e19
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8,
            "min": 0,
            "max": 100,
            "step": 0.1,
            "round": 0.01
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "positive": ["CONDITIONING"],
        "negative": ["CONDITIONING"],
        "latent_image": ["LATENT"],
        "start_at_step": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 10000
          }
        ],
        "end_at_step": [
          "INT",
          {
            "default": 10000,
            "min": 0,
            "max": 10000
          }
        ],
        "return_with_leftover_noise": [["disable", "enable"]]
      }
    },
    "output": ["LATENT"],
    "output_is_list": [false],
    "output_name": ["LATENT"],
    "name": "KSamplerAdvanced",
    "display_name": "KSampler (Advanced)",
    "description": "",
    "category": "sampling",
    "output_node": false
  },
  "SetLatentNoiseMask": {
    "input": {
      "required": {
        "samples": ["LATENT"],
        "mask": ["MASK"]
      }
    },
    "output": ["LATENT"],
    "output_is_list": [false],
    "output_name": ["LATENT"],
    "name": "SetLatentNoiseMask",
    "display_name": "Set Latent Noise Mask",
    "description": "",
    "category": "latent/inpaint",
    "output_node": false
  },
  "LatentComposite": {
    "input": {
      "required": {
        "samples_to": ["LATENT"],
        "samples_from": ["LATENT"],
        "x": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 8192,
            "step": 8
          }
        ],
        "y": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 8192,
            "step": 8
          }
        ],
        "feather": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 8192,
            "step": 8
          }
        ]
      }
    },
    "output": ["LATENT"],
    "output_is_list": [false],
    "output_name": ["LATENT"],
    "name": "LatentComposite",
    "display_name": "Latent Composite",
    "description": "",
    "category": "latent",
    "output_node": false
  },
  "LatentBlend": {
    "input": {
      "required": {
        "samples1": ["LATENT"],
        "samples2": ["LATENT"],
        "blend_factor": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": ["LATENT"],
    "output_is_list": [false],
    "output_name": ["LATENT"],
    "name": "LatentBlend",
    "display_name": "Latent Blend",
    "description": "",
    "category": "_for_testing",
    "output_node": false
  },
  "LatentRotate": {
    "input": {
      "required": {
        "samples": ["LATENT"],
        "rotation": [["none", "90 degrees", "180 degrees", "270 degrees"]]
      }
    },
    "output": ["LATENT"],
    "output_is_list": [false],
    "output_name": ["LATENT"],
    "name": "LatentRotate",
    "display_name": "Rotate Latent",
    "description": "",
    "category": "latent/transform",
    "output_node": false
  },
  "LatentFlip": {
    "input": {
      "required": {
        "samples": ["LATENT"],
        "flip_method": [["x-axis: vertically", "y-axis: horizontally"]]
      }
    },
    "output": ["LATENT"],
    "output_is_list": [false],
    "output_name": ["LATENT"],
    "name": "LatentFlip",
    "display_name": "Flip Latent",
    "description": "",
    "category": "latent/transform",
    "output_node": false
  },
  "LatentCrop": {
    "input": {
      "required": {
        "samples": ["LATENT"],
        "width": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 8192,
            "step": 8
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 8192,
            "step": 8
          }
        ],
        "x": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 8192,
            "step": 8
          }
        ],
        "y": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 8192,
            "step": 8
          }
        ]
      }
    },
    "output": ["LATENT"],
    "output_is_list": [false],
    "output_name": ["LATENT"],
    "name": "LatentCrop",
    "display_name": "Crop Latent",
    "description": "",
    "category": "latent/transform",
    "output_node": false
  },
  "LoraLoader": {
    "input": {
      "required": {
        "model": ["MODEL"],
        "clip": ["CLIP"],
        "lora_name": [
          [
            "Ahri.safetensors",
            "Belle-v1-01.safetensors",
            "BelleV2.safetensors",
            "Blackpink_Fusion.safetensors",
            "Broken_Covenant_Miss_Fortune.safetensors",
            "Coven_Ahri.safetensors",
            "Coven_Zyra.safetensors",
            "Firecracker_Diana.safetensors",
            "GoodHands-beta2.safetensors",
            "HOTD.safetensors",
            "Irelia.safetensors",
            "KDA_Ahri_Prestige_Edition.safetensors",
            "KDA_All_Out_Ahri.safetensors",
            "Lucy_Cyberpunk.safetensors",
            "Miss_Fortune.safetensors",
            "Pool_Party_Miss_Fortune.safetensors",
            "Star_Guardian_Ahri.safetensors",
            "Winterblessed_Diana.safetensors",
            "fc2318a3-8d41-4dd7-8a8d-91410d7b4ee3.safetensors"
          ]
        ],
        "strength_model": [
          "FLOAT",
          {
            "default": 1,
            "min": -20,
            "max": 20,
            "step": 0.01
          }
        ],
        "strength_clip": [
          "FLOAT",
          {
            "default": 1,
            "min": -20,
            "max": 20,
            "step": 0.01
          }
        ]
      }
    },
    "output": ["MODEL", "CLIP"],
    "output_is_list": [false, false],
    "output_name": ["MODEL", "CLIP"],
    "name": "LoraLoader",
    "display_name": "Load LoRA",
    "description": "",
    "category": "loaders",
    "output_node": false
  },
  "CLIPLoader": {
    "input": {
      "required": {
        "clip_name": [[]]
      }
    },
    "output": ["CLIP"],
    "output_is_list": [false],
    "output_name": ["CLIP"],
    "name": "CLIPLoader",
    "display_name": "Load CLIP",
    "description": "",
    "category": "advanced/loaders",
    "output_node": false
  },
  "UNETLoader": {
    "input": {
      "required": {
        "unet_name": [[]]
      }
    },
    "output": ["MODEL"],
    "output_is_list": [false],
    "output_name": ["MODEL"],
    "name": "UNETLoader",
    "display_name": "UNETLoader",
    "description": "",
    "category": "advanced/loaders",
    "output_node": false
  },
  "DualCLIPLoader": {
    "input": {
      "required": {
        "clip_name1": [[]],
        "clip_name2": [[]]
      }
    },
    "output": ["CLIP"],
    "output_is_list": [false],
    "output_name": ["CLIP"],
    "name": "DualCLIPLoader",
    "display_name": "DualCLIPLoader",
    "description": "",
    "category": "advanced/loaders",
    "output_node": false
  },
  "CLIPVisionEncode": {
    "input": {
      "required": {
        "clip_vision": ["CLIP_VISION"],
        "image": ["IMAGE"]
      }
    },
    "output": ["CLIP_VISION_OUTPUT"],
    "output_is_list": [false],
    "output_name": ["CLIP_VISION_OUTPUT"],
    "name": "CLIPVisionEncode",
    "display_name": "CLIP Vision Encode",
    "description": "",
    "category": "conditioning",
    "output_node": false
  },
  "StyleModelApply": {
    "input": {
      "required": {
        "conditioning": ["CONDITIONING"],
        "style_model": ["STYLE_MODEL"],
        "clip_vision_output": ["CLIP_VISION_OUTPUT"]
      }
    },
    "output": ["CONDITIONING"],
    "output_is_list": [false],
    "output_name": ["CONDITIONING"],
    "name": "StyleModelApply",
    "display_name": "Apply Style Model",
    "description": "",
    "category": "conditioning/style_model",
    "output_node": false
  },
  "unCLIPConditioning": {
    "input": {
      "required": {
        "conditioning": ["CONDITIONING"],
        "clip_vision_output": ["CLIP_VISION_OUTPUT"],
        "strength": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "noise_augmentation": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": ["CONDITIONING"],
    "output_is_list": [false],
    "output_name": ["CONDITIONING"],
    "name": "unCLIPConditioning",
    "display_name": "unCLIPConditioning",
    "description": "",
    "category": "conditioning",
    "output_node": false
  },
  "ControlNetApply": {
    "input": {
      "required": {
        "conditioning": ["CONDITIONING"],
        "control_net": ["CONTROL_NET"],
        "image": ["IMAGE"],
        "strength": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ]
      }
    },
    "output": ["CONDITIONING"],
    "output_is_list": [false],
    "output_name": ["CONDITIONING"],
    "name": "ControlNetApply",
    "display_name": "Apply ControlNet",
    "description": "",
    "category": "conditioning",
    "output_node": false
  },
  "ControlNetApplyAdvanced": {
    "input": {
      "required": {
        "positive": ["CONDITIONING"],
        "negative": ["CONDITIONING"],
        "control_net": ["CONTROL_NET"],
        "image": ["IMAGE"],
        "strength": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "start_percent": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "end_percent": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ]
      }
    },
    "output": ["CONDITIONING", "CONDITIONING"],
    "output_is_list": [false, false],
    "output_name": ["positive", "negative"],
    "name": "ControlNetApplyAdvanced",
    "display_name": "Apply ControlNet (Advanced)",
    "description": "",
    "category": "conditioning",
    "output_node": false
  },
  "ControlNetLoader": {
    "input": {
      "required": {
        "control_net_name": [
          [
            "control v10e sdxl opticalpattern.safetensors",
            "control_v11p_sd15_lineart_fp16.safetensors"
          ]
        ]
      }
    },
    "output": ["CONTROL_NET"],
    "output_is_list": [false],
    "output_name": ["CONTROL_NET"],
    "name": "ControlNetLoader",
    "display_name": "Load ControlNet Model",
    "description": "",
    "category": "loaders",
    "output_node": false
  },
  "DiffControlNetLoader": {
    "input": {
      "required": {
        "model": ["MODEL"],
        "control_net_name": [
          [
            "control v10e sdxl opticalpattern.safetensors",
            "control_v11p_sd15_lineart_fp16.safetensors"
          ]
        ]
      }
    },
    "output": ["CONTROL_NET"],
    "output_is_list": [false],
    "output_name": ["CONTROL_NET"],
    "name": "DiffControlNetLoader",
    "display_name": "Load ControlNet Model (diff)",
    "description": "",
    "category": "loaders",
    "output_node": false
  },
  "StyleModelLoader": {
    "input": {
      "required": {
        "style_model_name": [[]]
      }
    },
    "output": ["STYLE_MODEL"],
    "output_is_list": [false],
    "output_name": ["STYLE_MODEL"],
    "name": "StyleModelLoader",
    "display_name": "Load Style Model",
    "description": "",
    "category": "loaders",
    "output_node": false
  },
  "CLIPVisionLoader": {
    "input": {
      "required": {
        "clip_name": [[]]
      }
    },
    "output": ["CLIP_VISION"],
    "output_is_list": [false],
    "output_name": ["CLIP_VISION"],
    "name": "CLIPVisionLoader",
    "display_name": "Load CLIP Vision",
    "description": "",
    "category": "loaders",
    "output_node": false
  },
  "VAEDecodeTiled": {
    "input": {
      "required": {
        "samples": ["LATENT"],
        "vae": ["VAE"],
        "tile_size": [
          "INT",
          {
            "default": 512,
            "min": 320,
            "max": 4096,
            "step": 64
          }
        ]
      }
    },
    "output": ["IMAGE"],
    "output_is_list": [false],
    "output_name": ["IMAGE"],
    "name": "VAEDecodeTiled",
    "display_name": "VAE Decode (Tiled)",
    "description": "",
    "category": "_for_testing",
    "output_node": false
  },
  "VAEEncodeTiled": {
    "input": {
      "required": {
        "pixels": ["IMAGE"],
        "vae": ["VAE"],
        "tile_size": [
          "INT",
          {
            "default": 512,
            "min": 320,
            "max": 4096,
            "step": 64
          }
        ]
      }
    },
    "output": ["LATENT"],
    "output_is_list": [false],
    "output_name": ["LATENT"],
    "name": "VAEEncodeTiled",
    "display_name": "VAE Encode (Tiled)",
    "description": "",
    "category": "_for_testing",
    "output_node": false
  },
  "unCLIPCheckpointLoader": {
    "input": {
      "required": {
        "ckpt_name": [
          [
            "Aniverse.safetensors",
            "Desync Image v5.safetensors",
            "MajicMix.safetensors",
            "Realistic Vision.safetensors",
            "darkSushi25D25D_v40.safetensors",
            "darksun_v41.safetensors",
            "era09_v10.safetensors",
            "pasteldiffusedmix.safetensors",
            "richyrichmix_V2Fp16.safetensors"
          ]
        ]
      }
    },
    "output": ["MODEL", "CLIP", "VAE", "CLIP_VISION"],
    "output_is_list": [false, false, false, false],
    "output_name": ["MODEL", "CLIP", "VAE", "CLIP_VISION"],
    "name": "unCLIPCheckpointLoader",
    "display_name": "unCLIPCheckpointLoader",
    "description": "",
    "category": "loaders",
    "output_node": false
  },
  "GLIGENLoader": {
    "input": {
      "required": {
        "gligen_name": [[]]
      }
    },
    "output": ["GLIGEN"],
    "output_is_list": [false],
    "output_name": ["GLIGEN"],
    "name": "GLIGENLoader",
    "display_name": "GLIGENLoader",
    "description": "",
    "category": "loaders",
    "output_node": false
  },
  "GLIGENTextBoxApply": {
    "input": {
      "required": {
        "conditioning_to": ["CONDITIONING"],
        "clip": ["CLIP"],
        "gligen_textbox_model": ["GLIGEN"],
        "text": [
          "STRING",
          {
            "multiline": true
          }
        ],
        "width": [
          "INT",
          {
            "default": 64,
            "min": 8,
            "max": 8192,
            "step": 8
          }
        ],
        "height": [
          "INT",
          {
            "default": 64,
            "min": 8,
            "max": 8192,
            "step": 8
          }
        ],
        "x": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 8192,
            "step": 8
          }
        ],
        "y": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 8192,
            "step": 8
          }
        ]
      }
    },
    "output": ["CONDITIONING"],
    "output_is_list": [false],
    "output_name": ["CONDITIONING"],
    "name": "GLIGENTextBoxApply",
    "display_name": "GLIGENTextBoxApply",
    "description": "",
    "category": "conditioning/gligen",
    "output_node": false
  },
  "InpaintModelConditioning": {
    "input": {
      "required": {
        "positive": ["CONDITIONING"],
        "negative": ["CONDITIONING"],
        "vae": ["VAE"],
        "pixels": ["IMAGE"],
        "mask": ["MASK"]
      }
    },
    "output": ["CONDITIONING", "CONDITIONING", "LATENT"],
    "output_is_list": [false, false, false],
    "output_name": ["positive", "negative", "latent"],
    "name": "InpaintModelConditioning",
    "display_name": "InpaintModelConditioning",
    "description": "",
    "category": "conditioning/inpaint",
    "output_node": false
  },
  "CheckpointLoader": {
    "input": {
      "required": {
        "config_name": [
          [
            "anything_v3.yaml",
            "v1-inference.yaml",
            "v1-inference_clip_skip_2.yaml",
            "v1-inference_clip_skip_2_fp16.yaml",
            "v1-inference_fp16.yaml",
            "v1-inpainting-inference.yaml",
            "v2-inference-v.yaml",
            "v2-inference-v_fp32.yaml",
            "v2-inference.yaml",
            "v2-inference_fp32.yaml",
            "v2-inpainting-inference.yaml"
          ]
        ],
        "ckpt_name": [
          [
            "Aniverse.safetensors",
            "Desync Image v5.safetensors",
            "MajicMix.safetensors",
            "Realistic Vision.safetensors",
            "darkSushi25D25D_v40.safetensors",
            "darksun_v41.safetensors",
            "era09_v10.safetensors",
            "pasteldiffusedmix.safetensors",
            "richyrichmix_V2Fp16.safetensors"
          ]
        ]
      }
    },
    "output": ["MODEL", "CLIP", "VAE"],
    "output_is_list": [false, false, false],
    "output_name": ["MODEL", "CLIP", "VAE"],
    "name": "CheckpointLoader",
    "display_name": "Load Checkpoint With Config (DEPRECATED)",
    "description": "",
    "category": "advanced/loaders",
    "output_node": false
  },
  "DiffusersLoader": {
    "input": {
      "required": {
        "model_path": [[]]
      }
    },
    "output": ["MODEL", "CLIP", "VAE"],
    "output_is_list": [false, false, false],
    "output_name": ["MODEL", "CLIP", "VAE"],
    "name": "DiffusersLoader",
    "display_name": "DiffusersLoader",
    "description": "",
    "category": "advanced/loaders/deprecated",
    "output_node": false
  },
  "LoadLatent": {
    "input": {
      "required": {
        "latent": [[]]
      }
    },
    "output": ["LATENT"],
    "output_is_list": [false],
    "output_name": ["LATENT"],
    "name": "LoadLatent",
    "display_name": "LoadLatent",
    "description": "",
    "category": "_for_testing",
    "output_node": false
  },
  "SaveLatent": {
    "input": {
      "required": {
        "samples": ["LATENT"],
        "filename_prefix": [
          "STRING",
          {
            "default": "latents/ComfyUI"
          }
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO"
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "SaveLatent",
    "display_name": "SaveLatent",
    "description": "",
    "category": "_for_testing",
    "output_node": true
  },
  "ConditioningZeroOut": {
    "input": {
      "required": {
        "conditioning": ["CONDITIONING"]
      }
    },
    "output": ["CONDITIONING"],
    "output_is_list": [false],
    "output_name": ["CONDITIONING"],
    "name": "ConditioningZeroOut",
    "display_name": "ConditioningZeroOut",
    "description": "",
    "category": "advanced/conditioning",
    "output_node": false
  },
  "ConditioningSetTimestepRange": {
    "input": {
      "required": {
        "conditioning": ["CONDITIONING"],
        "start": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "end": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ]
      }
    },
    "output": ["CONDITIONING"],
    "output_is_list": [false],
    "output_name": ["CONDITIONING"],
    "name": "ConditioningSetTimestepRange",
    "display_name": "ConditioningSetTimestepRange",
    "description": "",
    "category": "advanced/conditioning",
    "output_node": false
  },
  "LoraLoaderModelOnly": {
    "input": {
      "required": {
        "model": ["MODEL"],
        "lora_name": [
          [
            "Ahri.safetensors",
            "Belle-v1-01.safetensors",
            "BelleV2.safetensors",
            "Blackpink_Fusion.safetensors",
            "Broken_Covenant_Miss_Fortune.safetensors",
            "Coven_Ahri.safetensors",
            "Coven_Zyra.safetensors",
            "Firecracker_Diana.safetensors",
            "GoodHands-beta2.safetensors",
            "HOTD.safetensors",
            "Irelia.safetensors",
            "KDA_Ahri_Prestige_Edition.safetensors",
            "KDA_All_Out_Ahri.safetensors",
            "Lucy_Cyberpunk.safetensors",
            "Miss_Fortune.safetensors",
            "Pool_Party_Miss_Fortune.safetensors",
            "Star_Guardian_Ahri.safetensors",
            "Winterblessed_Diana.safetensors",
            "fc2318a3-8d41-4dd7-8a8d-91410d7b4ee3.safetensors"
          ]
        ],
        "strength_model": [
          "FLOAT",
          {
            "default": 1,
            "min": -20,
            "max": 20,
            "step": 0.01
          }
        ]
      }
    },
    "output": ["MODEL"],
    "output_is_list": [false],
    "output_name": ["MODEL"],
    "name": "LoraLoaderModelOnly",
    "display_name": "LoraLoaderModelOnly",
    "description": "",
    "category": "loaders",
    "output_node": false
  },
  "LatentAdd": {
    "input": {
      "required": {
        "samples1": ["LATENT"],
        "samples2": ["LATENT"]
      }
    },
    "output": ["LATENT"],
    "output_is_list": [false],
    "output_name": ["LATENT"],
    "name": "LatentAdd",
    "display_name": "LatentAdd",
    "description": "",
    "category": "latent/advanced",
    "output_node": false
  },
  "LatentSubtract": {
    "input": {
      "required": {
        "samples1": ["LATENT"],
        "samples2": ["LATENT"]
      }
    },
    "output": ["LATENT"],
    "output_is_list": [false],
    "output_name": ["LATENT"],
    "name": "LatentSubtract",
    "display_name": "LatentSubtract",
    "description": "",
    "category": "latent/advanced",
    "output_node": false
  },
  "LatentMultiply": {
    "input": {
      "required": {
        "samples": ["LATENT"],
        "multiplier": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ]
      }
    },
    "output": ["LATENT"],
    "output_is_list": [false],
    "output_name": ["LATENT"],
    "name": "LatentMultiply",
    "display_name": "LatentMultiply",
    "description": "",
    "category": "latent/advanced",
    "output_node": false
  },
  "LatentInterpolate": {
    "input": {
      "required": {
        "samples1": ["LATENT"],
        "samples2": ["LATENT"],
        "ratio": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": ["LATENT"],
    "output_is_list": [false],
    "output_name": ["LATENT"],
    "name": "LatentInterpolate",
    "display_name": "LatentInterpolate",
    "description": "",
    "category": "latent/advanced",
    "output_node": false
  },
  "LatentBatch": {
    "input": {
      "required": {
        "samples1": ["LATENT"],
        "samples2": ["LATENT"]
      }
    },
    "output": ["LATENT"],
    "output_is_list": [false],
    "output_name": ["LATENT"],
    "name": "LatentBatch",
    "display_name": "LatentBatch",
    "description": "",
    "category": "latent/batch",
    "output_node": false
  },
  "HypernetworkLoader": {
    "input": {
      "required": {
        "model": ["MODEL"],
        "hypernetwork_name": [[]],
        "strength": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ]
      }
    },
    "output": ["MODEL"],
    "output_is_list": [false],
    "output_name": ["MODEL"],
    "name": "HypernetworkLoader",
    "display_name": "HypernetworkLoader",
    "description": "",
    "category": "loaders",
    "output_node": false
  },
  "UpscaleModelLoader": {
    "input": {
      "required": {
        "model_name": [["4x-UltraSharp.pth", "RealESRGAN_x4plus.pth"]]
      }
    },
    "output": ["UPSCALE_MODEL"],
    "output_is_list": [false],
    "output_name": ["UPSCALE_MODEL"],
    "name": "UpscaleModelLoader",
    "display_name": "Load Upscale Model",
    "description": "",
    "category": "loaders",
    "output_node": false
  },
  "ImageUpscaleWithModel": {
    "input": {
      "required": {
        "upscale_model": ["UPSCALE_MODEL"],
        "image": ["IMAGE"]
      }
    },
    "output": ["IMAGE"],
    "output_is_list": [false],
    "output_name": ["IMAGE"],
    "name": "ImageUpscaleWithModel",
    "display_name": "Upscale Image (using Model)",
    "description": "",
    "category": "image/upscaling",
    "output_node": false
  },
  "ImageBlend": {
    "input": {
      "required": {
        "image1": ["IMAGE"],
        "image2": ["IMAGE"],
        "blend_factor": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "blend_mode": [
          [
            "normal",
            "multiply",
            "screen",
            "overlay",
            "soft_light",
            "difference"
          ]
        ]
      }
    },
    "output": ["IMAGE"],
    "output_is_list": [false],
    "output_name": ["IMAGE"],
    "name": "ImageBlend",
    "display_name": "ImageBlend",
    "description": "",
    "category": "image/postprocessing",
    "output_node": false
  },
  "ImageBlur": {
    "input": {
      "required": {
        "image": ["IMAGE"],
        "blur_radius": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 31,
            "step": 1
          }
        ],
        "sigma": [
          "FLOAT",
          {
            "default": 1,
            "min": 0.1,
            "max": 10,
            "step": 0.1
          }
        ]
      }
    },
    "output": ["IMAGE"],
    "output_is_list": [false],
    "output_name": ["IMAGE"],
    "name": "ImageBlur",
    "display_name": "ImageBlur",
    "description": "",
    "category": "image/postprocessing",
    "output_node": false
  },
  "ImageQuantize": {
    "input": {
      "required": {
        "image": ["IMAGE"],
        "colors": [
          "INT",
          {
            "default": 256,
            "min": 1,
            "max": 256,
            "step": 1
          }
        ],
        "dither": [
          [
            "none",
            "floyd-steinberg",
            "bayer-2",
            "bayer-4",
            "bayer-8",
            "bayer-16"
          ]
        ]
      }
    },
    "output": ["IMAGE"],
    "output_is_list": [false],
    "output_name": ["IMAGE"],
    "name": "ImageQuantize",
    "display_name": "ImageQuantize",
    "description": "",
    "category": "image/postprocessing",
    "output_node": false
  },
  "ImageSharpen": {
    "input": {
      "required": {
        "image": ["IMAGE"],
        "sharpen_radius": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 31,
            "step": 1
          }
        ],
        "sigma": [
          "FLOAT",
          {
            "default": 1,
            "min": 0.1,
            "max": 10,
            "step": 0.1
          }
        ],
        "alpha": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 5,
            "step": 0.1
          }
        ]
      }
    },
    "output": ["IMAGE"],
    "output_is_list": [false],
    "output_name": ["IMAGE"],
    "name": "ImageSharpen",
    "display_name": "ImageSharpen",
    "description": "",
    "category": "image/postprocessing",
    "output_node": false
  },
  "ImageScaleToTotalPixels": {
    "input": {
      "required": {
        "image": ["IMAGE"],
        "upscale_method": [
          ["nearest-exact", "bilinear", "area", "bicubic", "lanczos"]
        ],
        "megapixels": [
          "FLOAT",
          {
            "default": 1,
            "min": 0.01,
            "max": 16,
            "step": 0.01
          }
        ]
      }
    },
    "output": ["IMAGE"],
    "output_is_list": [false],
    "output_name": ["IMAGE"],
    "name": "ImageScaleToTotalPixels",
    "display_name": "ImageScaleToTotalPixels",
    "description": "",
    "category": "image/upscaling",
    "output_node": false
  },
  "LatentCompositeMasked": {
    "input": {
      "required": {
        "destination": ["LATENT"],
        "source": ["LATENT"],
        "x": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 8192,
            "step": 8
          }
        ],
        "y": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 8192,
            "step": 8
          }
        ],
        "resize_source": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      },
      "optional": {
        "mask": ["MASK"]
      }
    },
    "output": ["LATENT"],
    "output_is_list": [false],
    "output_name": ["LATENT"],
    "name": "LatentCompositeMasked",
    "display_name": "LatentCompositeMasked",
    "description": "",
    "category": "latent",
    "output_node": false
  },
  "ImageCompositeMasked": {
    "input": {
      "required": {
        "destination": ["IMAGE"],
        "source": ["IMAGE"],
        "x": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 8192,
            "step": 1
          }
        ],
        "y": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 8192,
            "step": 1
          }
        ],
        "resize_source": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      },
      "optional": {
        "mask": ["MASK"]
      }
    },
    "output": ["IMAGE"],
    "output_is_list": [false],
    "output_name": ["IMAGE"],
    "name": "ImageCompositeMasked",
    "display_name": "ImageCompositeMasked",
    "description": "",
    "category": "image",
    "output_node": false
  },
  "MaskToImage": {
    "input": {
      "required": {
        "mask": ["MASK"]
      }
    },
    "output": ["IMAGE"],
    "output_is_list": [false],
    "output_name": ["IMAGE"],
    "name": "MaskToImage",
    "display_name": "Convert Mask to Image",
    "description": "",
    "category": "mask",
    "output_node": false
  },
  "ImageToMask": {
    "input": {
      "required": {
        "image": ["IMAGE"],
        "channel": [["red", "green", "blue", "alpha"]]
      }
    },
    "output": ["MASK"],
    "output_is_list": [false],
    "output_name": ["MASK"],
    "name": "ImageToMask",
    "display_name": "Convert Image to Mask",
    "description": "",
    "category": "mask",
    "output_node": false
  },
  "ImageColorToMask": {
    "input": {
      "required": {
        "image": ["IMAGE"],
        "color": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 16777215,
            "step": 1,
            "display": "color"
          }
        ]
      }
    },
    "output": ["MASK"],
    "output_is_list": [false],
    "output_name": ["MASK"],
    "name": "ImageColorToMask",
    "display_name": "ImageColorToMask",
    "description": "",
    "category": "mask",
    "output_node": false
  },
  "SolidMask": {
    "input": {
      "required": {
        "value": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "width": [
          "INT",
          {
            "default": 512,
            "min": 1,
            "max": 8192,
            "step": 1
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 1,
            "max": 8192,
            "step": 1
          }
        ]
      }
    },
    "output": ["MASK"],
    "output_is_list": [false],
    "output_name": ["MASK"],
    "name": "SolidMask",
    "display_name": "SolidMask",
    "description": "",
    "category": "mask",
    "output_node": false
  },
  "InvertMask": {
    "input": {
      "required": {
        "mask": ["MASK"]
      }
    },
    "output": ["MASK"],
    "output_is_list": [false],
    "output_name": ["MASK"],
    "name": "InvertMask",
    "display_name": "InvertMask",
    "description": "",
    "category": "mask",
    "output_node": false
  },
  "CropMask": {
    "input": {
      "required": {
        "mask": ["MASK"],
        "x": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 8192,
            "step": 1
          }
        ],
        "y": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 8192,
            "step": 1
          }
        ],
        "width": [
          "INT",
          {
            "default": 512,
            "min": 1,
            "max": 8192,
            "step": 1
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 1,
            "max": 8192,
            "step": 1
          }
        ]
      }
    },
    "output": ["MASK"],
    "output_is_list": [false],
    "output_name": ["MASK"],
    "name": "CropMask",
    "display_name": "CropMask",
    "description": "",
    "category": "mask",
    "output_node": false
  },
  "MaskComposite": {
    "input": {
      "required": {
        "destination": ["MASK"],
        "source": ["MASK"],
        "x": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 8192,
            "step": 1
          }
        ],
        "y": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 8192,
            "step": 1
          }
        ],
        "operation": [["multiply", "add", "subtract", "and", "or", "xor"]]
      }
    },
    "output": ["MASK"],
    "output_is_list": [false],
    "output_name": ["MASK"],
    "name": "MaskComposite",
    "display_name": "MaskComposite",
    "description": "",
    "category": "mask",
    "output_node": false
  },
  "FeatherMask": {
    "input": {
      "required": {
        "mask": ["MASK"],
        "left": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 8192,
            "step": 1
          }
        ],
        "top": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 8192,
            "step": 1
          }
        ],
        "right": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 8192,
            "step": 1
          }
        ],
        "bottom": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 8192,
            "step": 1
          }
        ]
      }
    },
    "output": ["MASK"],
    "output_is_list": [false],
    "output_name": ["MASK"],
    "name": "FeatherMask",
    "display_name": "FeatherMask",
    "description": "",
    "category": "mask",
    "output_node": false
  },
  "GrowMask": {
    "input": {
      "required": {
        "mask": ["MASK"],
        "expand": [
          "INT",
          {
            "default": 0,
            "min": -8192,
            "max": 8192,
            "step": 1
          }
        ],
        "tapered_corners": [
          "BOOLEAN",
          {
            "default": true
          }
        ]
      }
    },
    "output": ["MASK"],
    "output_is_list": [false],
    "output_name": ["MASK"],
    "name": "GrowMask",
    "display_name": "GrowMask",
    "description": "",
    "category": "mask",
    "output_node": false
  },
  "PorterDuffImageComposite": {
    "input": {
      "required": {
        "source": ["IMAGE"],
        "source_alpha": ["MASK"],
        "destination": ["IMAGE"],
        "destination_alpha": ["MASK"],
        "mode": [
          [
            "ADD",
            "CLEAR",
            "DARKEN",
            "DST",
            "DST_ATOP",
            "DST_IN",
            "DST_OUT",
            "DST_OVER",
            "LIGHTEN",
            "MULTIPLY",
            "OVERLAY",
            "SCREEN",
            "SRC",
            "SRC_ATOP",
            "SRC_IN",
            "SRC_OUT",
            "SRC_OVER",
            "XOR"
          ],
          {
            "default": "DST"
          }
        ]
      }
    },
    "output": ["IMAGE", "MASK"],
    "output_is_list": [false, false],
    "output_name": ["IMAGE", "MASK"],
    "name": "PorterDuffImageComposite",
    "display_name": "Porter-Duff Image Composite",
    "description": "",
    "category": "mask/compositing",
    "output_node": false
  },
  "SplitImageWithAlpha": {
    "input": {
      "required": {
        "image": ["IMAGE"]
      }
    },
    "output": ["IMAGE", "MASK"],
    "output_is_list": [false, false],
    "output_name": ["IMAGE", "MASK"],
    "name": "SplitImageWithAlpha",
    "display_name": "Split Image with Alpha",
    "description": "",
    "category": "mask/compositing",
    "output_node": false
  },
  "JoinImageWithAlpha": {
    "input": {
      "required": {
        "image": ["IMAGE"],
        "alpha": ["MASK"]
      }
    },
    "output": ["IMAGE"],
    "output_is_list": [false],
    "output_name": ["IMAGE"],
    "name": "JoinImageWithAlpha",
    "display_name": "Join Image with Alpha",
    "description": "",
    "category": "mask/compositing",
    "output_node": false
  },
  "RebatchLatents": {
    "input": {
      "required": {
        "latents": ["LATENT"],
        "batch_size": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 4096
          }
        ]
      }
    },
    "output": ["LATENT"],
    "output_is_list": [true],
    "output_name": ["LATENT"],
    "name": "RebatchLatents",
    "display_name": "Rebatch Latents",
    "description": "",
    "category": "latent/batch",
    "output_node": false
  },
  "RebatchImages": {
    "input": {
      "required": {
        "images": ["IMAGE"],
        "batch_size": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 4096
          }
        ]
      }
    },
    "output": ["IMAGE"],
    "output_is_list": [true],
    "output_name": ["IMAGE"],
    "name": "RebatchImages",
    "display_name": "Rebatch Images",
    "description": "",
    "category": "image/batch",
    "output_node": false
  },
  "ModelMergeSimple": {
    "input": {
      "required": {
        "model1": ["MODEL"],
        "model2": ["MODEL"],
        "ratio": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": ["MODEL"],
    "output_is_list": [false],
    "output_name": ["MODEL"],
    "name": "ModelMergeSimple",
    "display_name": "ModelMergeSimple",
    "description": "",
    "category": "advanced/model_merging",
    "output_node": false
  },
  "ModelMergeBlocks": {
    "input": {
      "required": {
        "model1": ["MODEL"],
        "model2": ["MODEL"],
        "input": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "middle": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "out": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": ["MODEL"],
    "output_is_list": [false],
    "output_name": ["MODEL"],
    "name": "ModelMergeBlocks",
    "display_name": "ModelMergeBlocks",
    "description": "",
    "category": "advanced/model_merging",
    "output_node": false
  },
  "ModelMergeSubtract": {
    "input": {
      "required": {
        "model1": ["MODEL"],
        "model2": ["MODEL"],
        "multiplier": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ]
      }
    },
    "output": ["MODEL"],
    "output_is_list": [false],
    "output_name": ["MODEL"],
    "name": "ModelMergeSubtract",
    "display_name": "ModelMergeSubtract",
    "description": "",
    "category": "advanced/model_merging",
    "output_node": false
  },
  "ModelMergeAdd": {
    "input": {
      "required": {
        "model1": ["MODEL"],
        "model2": ["MODEL"]
      }
    },
    "output": ["MODEL"],
    "output_is_list": [false],
    "output_name": ["MODEL"],
    "name": "ModelMergeAdd",
    "display_name": "ModelMergeAdd",
    "description": "",
    "category": "advanced/model_merging",
    "output_node": false
  },
  "CheckpointSave": {
    "input": {
      "required": {
        "model": ["MODEL"],
        "clip": ["CLIP"],
        "vae": ["VAE"],
        "filename_prefix": [
          "STRING",
          {
            "default": "checkpoints/ComfyUI"
          }
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO"
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "CheckpointSave",
    "display_name": "CheckpointSave",
    "description": "",
    "category": "advanced/model_merging",
    "output_node": true
  },
  "CLIPMergeSimple": {
    "input": {
      "required": {
        "clip1": ["CLIP"],
        "clip2": ["CLIP"],
        "ratio": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": ["CLIP"],
    "output_is_list": [false],
    "output_name": ["CLIP"],
    "name": "CLIPMergeSimple",
    "display_name": "CLIPMergeSimple",
    "description": "",
    "category": "advanced/model_merging",
    "output_node": false
  },
  "CLIPSave": {
    "input": {
      "required": {
        "clip": ["CLIP"],
        "filename_prefix": [
          "STRING",
          {
            "default": "clip/ComfyUI"
          }
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO"
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "CLIPSave",
    "display_name": "CLIPSave",
    "description": "",
    "category": "advanced/model_merging",
    "output_node": true
  },
  "VAESave": {
    "input": {
      "required": {
        "vae": ["VAE"],
        "filename_prefix": [
          "STRING",
          {
            "default": "vae/ComfyUI_vae"
          }
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO"
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "VAESave",
    "display_name": "VAESave",
    "description": "",
    "category": "advanced/model_merging",
    "output_node": true
  },
  "TomePatchModel": {
    "input": {
      "required": {
        "model": ["MODEL"],
        "ratio": [
          "FLOAT",
          {
            "default": 0.3,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": ["MODEL"],
    "output_is_list": [false],
    "output_name": ["MODEL"],
    "name": "TomePatchModel",
    "display_name": "TomePatchModel",
    "description": "",
    "category": "_for_testing",
    "output_node": false
  },
  "CLIPTextEncodeSDXLRefiner": {
    "input": {
      "required": {
        "ascore": [
          "FLOAT",
          {
            "default": 6,
            "min": 0,
            "max": 1000,
            "step": 0.01
          }
        ],
        "width": [
          "INT",
          {
            "default": 1024,
            "min": 0,
            "max": 8192
          }
        ],
        "height": [
          "INT",
          {
            "default": 1024,
            "min": 0,
            "max": 8192
          }
        ],
        "text": [
          "STRING",
          {
            "multiline": true
          }
        ],
        "clip": ["CLIP"]
      }
    },
    "output": ["CONDITIONING"],
    "output_is_list": [false],
    "output_name": ["CONDITIONING"],
    "name": "CLIPTextEncodeSDXLRefiner",
    "display_name": "CLIPTextEncodeSDXLRefiner",
    "description": "",
    "category": "advanced/conditioning",
    "output_node": false
  },
  "CLIPTextEncodeSDXL": {
    "input": {
      "required": {
        "width": [
          "INT",
          {
            "default": 1024,
            "min": 0,
            "max": 8192
          }
        ],
        "height": [
          "INT",
          {
            "default": 1024,
            "min": 0,
            "max": 8192
          }
        ],
        "crop_w": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 8192
          }
        ],
        "crop_h": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 8192
          }
        ],
        "target_width": [
          "INT",
          {
            "default": 1024,
            "min": 0,
            "max": 8192
          }
        ],
        "target_height": [
          "INT",
          {
            "default": 1024,
            "min": 0,
            "max": 8192
          }
        ],
        "text_g": [
          "STRING",
          {
            "multiline": true,
            "default": "CLIP_G"
          }
        ],
        "clip": ["CLIP"],
        "text_l": [
          "STRING",
          {
            "multiline": true,
            "default": "CLIP_L"
          }
        ]
      }
    },
    "output": ["CONDITIONING"],
    "output_is_list": [false],
    "output_name": ["CONDITIONING"],
    "name": "CLIPTextEncodeSDXL",
    "display_name": "CLIPTextEncodeSDXL",
    "description": "",
    "category": "advanced/conditioning",
    "output_node": false
  },
  "Canny": {
    "input": {
      "required": {
        "image": ["IMAGE"],
        "low_threshold": [
          "FLOAT",
          {
            "default": 0.4,
            "min": 0.01,
            "max": 0.99,
            "step": 0.01
          }
        ],
        "high_threshold": [
          "FLOAT",
          {
            "default": 0.8,
            "min": 0.01,
            "max": 0.99,
            "step": 0.01
          }
        ]
      }
    },
    "output": ["IMAGE"],
    "output_is_list": [false],
    "output_name": ["IMAGE"],
    "name": "Canny",
    "display_name": "Canny",
    "description": "",
    "category": "image/preprocessors",
    "output_node": false
  },
  "FreeU": {
    "input": {
      "required": {
        "model": ["MODEL"],
        "b1": [
          "FLOAT",
          {
            "default": 1.1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "b2": [
          "FLOAT",
          {
            "default": 1.2,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "s1": [
          "FLOAT",
          {
            "default": 0.9,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "s2": [
          "FLOAT",
          {
            "default": 0.2,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ]
      }
    },
    "output": ["MODEL"],
    "output_is_list": [false],
    "output_name": ["MODEL"],
    "name": "FreeU",
    "display_name": "FreeU",
    "description": "",
    "category": "model_patches",
    "output_node": false
  },
  "FreeU_V2": {
    "input": {
      "required": {
        "model": ["MODEL"],
        "b1": [
          "FLOAT",
          {
            "default": 1.3,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "b2": [
          "FLOAT",
          {
            "default": 1.4,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "s1": [
          "FLOAT",
          {
            "default": 0.9,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "s2": [
          "FLOAT",
          {
            "default": 0.2,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ]
      }
    },
    "output": ["MODEL"],
    "output_is_list": [false],
    "output_name": ["MODEL"],
    "name": "FreeU_V2",
    "display_name": "FreeU_V2",
    "description": "",
    "category": "model_patches",
    "output_node": false
  },
  "SamplerCustom": {
    "input": {
      "required": {
        "model": ["MODEL"],
        "add_noise": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "noise_seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e19
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8,
            "min": 0,
            "max": 100,
            "step": 0.1,
            "round": 0.01
          }
        ],
        "positive": ["CONDITIONING"],
        "negative": ["CONDITIONING"],
        "sampler": ["SAMPLER"],
        "sigmas": ["SIGMAS"],
        "latent_image": ["LATENT"]
      }
    },
    "output": ["LATENT", "LATENT"],
    "output_is_list": [false, false],
    "output_name": ["output", "denoised_output"],
    "name": "SamplerCustom",
    "display_name": "SamplerCustom",
    "description": "",
    "category": "sampling/custom_sampling",
    "output_node": false
  },
  "BasicScheduler": {
    "input": {
      "required": {
        "model": ["MODEL"],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": ["SIGMAS"],
    "output_is_list": [false],
    "output_name": ["SIGMAS"],
    "name": "BasicScheduler",
    "display_name": "BasicScheduler",
    "description": "",
    "category": "sampling/custom_sampling/schedulers",
    "output_node": false
  },
  "KarrasScheduler": {
    "input": {
      "required": {
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "sigma_max": [
          "FLOAT",
          {
            "default": 14.614642,
            "min": 0,
            "max": 1000,
            "step": 0.01,
            "round": false
          }
        ],
        "sigma_min": [
          "FLOAT",
          {
            "default": 0.0291675,
            "min": 0,
            "max": 1000,
            "step": 0.01,
            "round": false
          }
        ],
        "rho": [
          "FLOAT",
          {
            "default": 7,
            "min": 0,
            "max": 100,
            "step": 0.01,
            "round": false
          }
        ]
      }
    },
    "output": ["SIGMAS"],
    "output_is_list": [false],
    "output_name": ["SIGMAS"],
    "name": "KarrasScheduler",
    "display_name": "KarrasScheduler",
    "description": "",
    "category": "sampling/custom_sampling/schedulers",
    "output_node": false
  },
  "ExponentialScheduler": {
    "input": {
      "required": {
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "sigma_max": [
          "FLOAT",
          {
            "default": 14.614642,
            "min": 0,
            "max": 1000,
            "step": 0.01,
            "round": false
          }
        ],
        "sigma_min": [
          "FLOAT",
          {
            "default": 0.0291675,
            "min": 0,
            "max": 1000,
            "step": 0.01,
            "round": false
          }
        ]
      }
    },
    "output": ["SIGMAS"],
    "output_is_list": [false],
    "output_name": ["SIGMAS"],
    "name": "ExponentialScheduler",
    "display_name": "ExponentialScheduler",
    "description": "",
    "category": "sampling/custom_sampling/schedulers",
    "output_node": false
  },
  "PolyexponentialScheduler": {
    "input": {
      "required": {
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "sigma_max": [
          "FLOAT",
          {
            "default": 14.614642,
            "min": 0,
            "max": 1000,
            "step": 0.01,
            "round": false
          }
        ],
        "sigma_min": [
          "FLOAT",
          {
            "default": 0.0291675,
            "min": 0,
            "max": 1000,
            "step": 0.01,
            "round": false
          }
        ],
        "rho": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 100,
            "step": 0.01,
            "round": false
          }
        ]
      }
    },
    "output": ["SIGMAS"],
    "output_is_list": [false],
    "output_name": ["SIGMAS"],
    "name": "PolyexponentialScheduler",
    "display_name": "PolyexponentialScheduler",
    "description": "",
    "category": "sampling/custom_sampling/schedulers",
    "output_node": false
  },
  "VPScheduler": {
    "input": {
      "required": {
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "beta_d": [
          "FLOAT",
          {
            "default": 19.9,
            "min": 0,
            "max": 1000,
            "step": 0.01,
            "round": false
          }
        ],
        "beta_min": [
          "FLOAT",
          {
            "default": 0.1,
            "min": 0,
            "max": 1000,
            "step": 0.01,
            "round": false
          }
        ],
        "eps_s": [
          "FLOAT",
          {
            "default": 0.001,
            "min": 0,
            "max": 1,
            "step": 0.0001,
            "round": false
          }
        ]
      }
    },
    "output": ["SIGMAS"],
    "output_is_list": [false],
    "output_name": ["SIGMAS"],
    "name": "VPScheduler",
    "display_name": "VPScheduler",
    "description": "",
    "category": "sampling/custom_sampling/schedulers",
    "output_node": false
  },
  "SDTurboScheduler": {
    "input": {
      "required": {
        "model": ["MODEL"],
        "steps": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 10
          }
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": ["SIGMAS"],
    "output_is_list": [false],
    "output_name": ["SIGMAS"],
    "name": "SDTurboScheduler",
    "display_name": "SDTurboScheduler",
    "description": "",
    "category": "sampling/custom_sampling/schedulers",
    "output_node": false
  },
  "KSamplerSelect": {
    "input": {
      "required": {
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ]
      }
    },
    "output": ["SAMPLER"],
    "output_is_list": [false],
    "output_name": ["SAMPLER"],
    "name": "KSamplerSelect",
    "display_name": "KSamplerSelect",
    "description": "",
    "category": "sampling/custom_sampling/samplers",
    "output_node": false
  },
  "SamplerDPMPP_2M_SDE": {
    "input": {
      "required": {
        "solver_type": [["midpoint", "heun"]],
        "eta": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 100,
            "step": 0.01,
            "round": false
          }
        ],
        "s_noise": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 100,
            "step": 0.01,
            "round": false
          }
        ],
        "noise_device": [["gpu", "cpu"]]
      }
    },
    "output": ["SAMPLER"],
    "output_is_list": [false],
    "output_name": ["SAMPLER"],
    "name": "SamplerDPMPP_2M_SDE",
    "display_name": "SamplerDPMPP_2M_SDE",
    "description": "",
    "category": "sampling/custom_sampling/samplers",
    "output_node": false
  },
  "SamplerDPMPP_SDE": {
    "input": {
      "required": {
        "eta": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 100,
            "step": 0.01,
            "round": false
          }
        ],
        "s_noise": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 100,
            "step": 0.01,
            "round": false
          }
        ],
        "r": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0,
            "max": 100,
            "step": 0.01,
            "round": false
          }
        ],
        "noise_device": [["gpu", "cpu"]]
      }
    },
    "output": ["SAMPLER"],
    "output_is_list": [false],
    "output_name": ["SAMPLER"],
    "name": "SamplerDPMPP_SDE",
    "display_name": "SamplerDPMPP_SDE",
    "description": "",
    "category": "sampling/custom_sampling/samplers",
    "output_node": false
  },
  "SplitSigmas": {
    "input": {
      "required": {
        "sigmas": ["SIGMAS"],
        "step": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 10000
          }
        ]
      }
    },
    "output": ["SIGMAS", "SIGMAS"],
    "output_is_list": [false, false],
    "output_name": ["SIGMAS", "SIGMAS"],
    "name": "SplitSigmas",
    "display_name": "SplitSigmas",
    "description": "",
    "category": "sampling/custom_sampling/sigmas",
    "output_node": false
  },
  "FlipSigmas": {
    "input": {
      "required": {
        "sigmas": ["SIGMAS"]
      }
    },
    "output": ["SIGMAS"],
    "output_is_list": [false],
    "output_name": ["SIGMAS"],
    "name": "FlipSigmas",
    "display_name": "FlipSigmas",
    "description": "",
    "category": "sampling/custom_sampling/sigmas",
    "output_node": false
  },
  "HyperTile": {
    "input": {
      "required": {
        "model": ["MODEL"],
        "tile_size": [
          "INT",
          {
            "default": 256,
            "min": 1,
            "max": 2048
          }
        ],
        "swap_size": [
          "INT",
          {
            "default": 2,
            "min": 1,
            "max": 128
          }
        ],
        "max_depth": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 10
          }
        ],
        "scale_depth": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": ["MODEL"],
    "output_is_list": [false],
    "output_name": ["MODEL"],
    "name": "HyperTile",
    "display_name": "HyperTile",
    "description": "",
    "category": "model_patches",
    "output_node": false
  },
  "ModelSamplingDiscrete": {
    "input": {
      "required": {
        "model": ["MODEL"],
        "sampling": [["eps", "v_prediction", "lcm"]],
        "zsnr": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": ["MODEL"],
    "output_is_list": [false],
    "output_name": ["MODEL"],
    "name": "ModelSamplingDiscrete",
    "display_name": "ModelSamplingDiscrete",
    "description": "",
    "category": "advanced/model",
    "output_node": false
  },
  "ModelSamplingContinuousEDM": {
    "input": {
      "required": {
        "model": ["MODEL"],
        "sampling": [["v_prediction", "eps"]],
        "sigma_max": [
          "FLOAT",
          {
            "default": 120,
            "min": 0,
            "max": 1000,
            "step": 0.001,
            "round": false
          }
        ],
        "sigma_min": [
          "FLOAT",
          {
            "default": 0.002,
            "min": 0,
            "max": 1000,
            "step": 0.001,
            "round": false
          }
        ]
      }
    },
    "output": ["MODEL"],
    "output_is_list": [false],
    "output_name": ["MODEL"],
    "name": "ModelSamplingContinuousEDM",
    "display_name": "ModelSamplingContinuousEDM",
    "description": "",
    "category": "advanced/model",
    "output_node": false
  },
  "RescaleCFG": {
    "input": {
      "required": {
        "model": ["MODEL"],
        "multiplier": [
          "FLOAT",
          {
            "default": 0.7,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": ["MODEL"],
    "output_is_list": [false],
    "output_name": ["MODEL"],
    "name": "RescaleCFG",
    "display_name": "RescaleCFG",
    "description": "",
    "category": "advanced/model",
    "output_node": false
  },
  "PatchModelAddDownscale": {
    "input": {
      "required": {
        "model": ["MODEL"],
        "block_number": [
          "INT",
          {
            "default": 3,
            "min": 1,
            "max": 32,
            "step": 1
          }
        ],
        "downscale_factor": [
          "FLOAT",
          {
            "default": 2,
            "min": 0.1,
            "max": 9,
            "step": 0.001
          }
        ],
        "start_percent": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "end_percent": [
          "FLOAT",
          {
            "default": 0.35,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "downscale_after_skip": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "downscale_method": [
          ["bicubic", "nearest-exact", "bilinear", "area", "bislerp"]
        ],
        "upscale_method": [
          ["bicubic", "nearest-exact", "bilinear", "area", "bislerp"]
        ]
      }
    },
    "output": ["MODEL"],
    "output_is_list": [false],
    "output_name": ["MODEL"],
    "name": "PatchModelAddDownscale",
    "display_name": "PatchModelAddDownscale (Kohya Deep Shrink)",
    "description": "",
    "category": "_for_testing",
    "output_node": false
  },
  "ImageCrop": {
    "input": {
      "required": {
        "image": ["IMAGE"],
        "width": [
          "INT",
          {
            "default": 512,
            "min": 1,
            "max": 8192,
            "step": 1
          }
        ],
        "height": [
          "INT",
          {
            "default": 512,
            "min": 1,
            "max": 8192,
            "step": 1
          }
        ],
        "x": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 8192,
            "step": 1
          }
        ],
        "y": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 8192,
            "step": 1
          }
        ]
      }
    },
    "output": ["IMAGE"],
    "output_is_list": [false],
    "output_name": ["IMAGE"],
    "name": "ImageCrop",
    "display_name": "ImageCrop",
    "description": "",
    "category": "image/transform",
    "output_node": false
  },
  "RepeatImageBatch": {
    "input": {
      "required": {
        "image": ["IMAGE"],
        "amount": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 64
          }
        ]
      }
    },
    "output": ["IMAGE"],
    "output_is_list": [false],
    "output_name": ["IMAGE"],
    "name": "RepeatImageBatch",
    "display_name": "RepeatImageBatch",
    "description": "",
    "category": "image/batch",
    "output_node": false
  },
  "SaveAnimatedWEBP": {
    "input": {
      "required": {
        "images": ["IMAGE"],
        "filename_prefix": [
          "STRING",
          {
            "default": "ComfyUI"
          }
        ],
        "fps": [
          "FLOAT",
          {
            "default": 6,
            "min": 0.01,
            "max": 1000,
            "step": 0.01
          }
        ],
        "lossless": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "quality": [
          "INT",
          {
            "default": 80,
            "min": 0,
            "max": 100
          }
        ],
        "method": [["default", "fastest", "slowest"]]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO"
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "SaveAnimatedWEBP",
    "display_name": "SaveAnimatedWEBP",
    "description": "",
    "category": "image/animation",
    "output_node": true
  },
  "SaveAnimatedPNG": {
    "input": {
      "required": {
        "images": ["IMAGE"],
        "filename_prefix": [
          "STRING",
          {
            "default": "ComfyUI"
          }
        ],
        "fps": [
          "FLOAT",
          {
            "default": 6,
            "min": 0.01,
            "max": 1000,
            "step": 0.01
          }
        ],
        "compress_level": [
          "INT",
          {
            "default": 4,
            "min": 0,
            "max": 9
          }
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO"
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "SaveAnimatedPNG",
    "display_name": "SaveAnimatedPNG",
    "description": "",
    "category": "image/animation",
    "output_node": true
  },
  "ImageOnlyCheckpointLoader": {
    "input": {
      "required": {
        "ckpt_name": [
          [
            "Aniverse.safetensors",
            "Desync Image v5.safetensors",
            "MajicMix.safetensors",
            "Realistic Vision.safetensors",
            "darkSushi25D25D_v40.safetensors",
            "darksun_v41.safetensors",
            "era09_v10.safetensors",
            "pasteldiffusedmix.safetensors",
            "richyrichmix_V2Fp16.safetensors"
          ]
        ]
      }
    },
    "output": ["MODEL", "CLIP_VISION", "VAE"],
    "output_is_list": [false, false, false],
    "output_name": ["MODEL", "CLIP_VISION", "VAE"],
    "name": "ImageOnlyCheckpointLoader",
    "display_name": "Image Only Checkpoint Loader (img2vid model)",
    "description": "",
    "category": "loaders/video_models",
    "output_node": false
  },
  "SVD_img2vid_Conditioning": {
    "input": {
      "required": {
        "clip_vision": ["CLIP_VISION"],
        "init_image": ["IMAGE"],
        "vae": ["VAE"],
        "width": [
          "INT",
          {
            "default": 1024,
            "min": 16,
            "max": 8192,
            "step": 8
          }
        ],
        "height": [
          "INT",
          {
            "default": 576,
            "min": 16,
            "max": 8192,
            "step": 8
          }
        ],
        "video_frames": [
          "INT",
          {
            "default": 14,
            "min": 1,
            "max": 4096
          }
        ],
        "motion_bucket_id": [
          "INT",
          {
            "default": 127,
            "min": 1,
            "max": 1023
          }
        ],
        "fps": [
          "INT",
          {
            "default": 6,
            "min": 1,
            "max": 1024
          }
        ],
        "augmentation_level": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ]
      }
    },
    "output": ["CONDITIONING", "CONDITIONING", "LATENT"],
    "output_is_list": [false, false, false],
    "output_name": ["positive", "negative", "latent"],
    "name": "SVD_img2vid_Conditioning",
    "display_name": "SVD_img2vid_Conditioning",
    "description": "",
    "category": "conditioning/video_models",
    "output_node": false
  },
  "VideoLinearCFGGuidance": {
    "input": {
      "required": {
        "model": ["MODEL"],
        "min_cfg": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 100,
            "step": 0.5,
            "round": 0.01
          }
        ]
      }
    },
    "output": ["MODEL"],
    "output_is_list": [false],
    "output_name": ["MODEL"],
    "name": "VideoLinearCFGGuidance",
    "display_name": "VideoLinearCFGGuidance",
    "description": "",
    "category": "sampling/video_models",
    "output_node": false
  },
  "ImageOnlyCheckpointSave": {
    "input": {
      "required": {
        "model": ["MODEL"],
        "clip_vision": ["CLIP_VISION"],
        "vae": ["VAE"],
        "filename_prefix": [
          "STRING",
          {
            "default": "checkpoints/ComfyUI"
          }
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO"
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "ImageOnlyCheckpointSave",
    "display_name": "ImageOnlyCheckpointSave",
    "description": "",
    "category": "_for_testing",
    "output_node": true
  },
  "SelfAttentionGuidance": {
    "input": {
      "required": {
        "model": ["MODEL"],
        "scale": [
          "FLOAT",
          {
            "default": 0.5,
            "min": -2,
            "max": 5,
            "step": 0.1
          }
        ],
        "blur_sigma": [
          "FLOAT",
          {
            "default": 2,
            "min": 0,
            "max": 10,
            "step": 0.1
          }
        ]
      }
    },
    "output": ["MODEL"],
    "output_is_list": [false],
    "output_name": ["MODEL"],
    "name": "SelfAttentionGuidance",
    "display_name": "Self-Attention Guidance",
    "description": "",
    "category": "_for_testing",
    "output_node": false
  },
  "PerpNeg": {
    "input": {
      "required": {
        "model": ["MODEL"],
        "empty_conditioning": ["CONDITIONING"],
        "neg_scale": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 100
          }
        ]
      }
    },
    "output": ["MODEL"],
    "output_is_list": [false],
    "output_name": ["MODEL"],
    "name": "PerpNeg",
    "display_name": "Perp-Neg",
    "description": "",
    "category": "_for_testing",
    "output_node": false
  },
  "StableZero123_Conditioning": {
    "input": {
      "required": {
        "clip_vision": ["CLIP_VISION"],
        "init_image": ["IMAGE"],
        "vae": ["VAE"],
        "width": [
          "INT",
          {
            "default": 256,
            "min": 16,
            "max": 8192,
            "step": 8
          }
        ],
        "height": [
          "INT",
          {
            "default": 256,
            "min": 16,
            "max": 8192,
            "step": 8
          }
        ],
        "batch_size": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 4096
          }
        ],
        "elevation": [
          "FLOAT",
          {
            "default": 0,
            "min": -180,
            "max": 180
          }
        ],
        "azimuth": [
          "FLOAT",
          {
            "default": 0,
            "min": -180,
            "max": 180
          }
        ]
      }
    },
    "output": ["CONDITIONING", "CONDITIONING", "LATENT"],
    "output_is_list": [false, false, false],
    "output_name": ["positive", "negative", "latent"],
    "name": "StableZero123_Conditioning",
    "display_name": "StableZero123_Conditioning",
    "description": "",
    "category": "conditioning/3d_models",
    "output_node": false
  },
  "StableZero123_Conditioning_Batched": {
    "input": {
      "required": {
        "clip_vision": ["CLIP_VISION"],
        "init_image": ["IMAGE"],
        "vae": ["VAE"],
        "width": [
          "INT",
          {
            "default": 256,
            "min": 16,
            "max": 8192,
            "step": 8
          }
        ],
        "height": [
          "INT",
          {
            "default": 256,
            "min": 16,
            "max": 8192,
            "step": 8
          }
        ],
        "batch_size": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 4096
          }
        ],
        "elevation": [
          "FLOAT",
          {
            "default": 0,
            "min": -180,
            "max": 180
          }
        ],
        "azimuth": [
          "FLOAT",
          {
            "default": 0,
            "min": -180,
            "max": 180
          }
        ],
        "elevation_batch_increment": [
          "FLOAT",
          {
            "default": 0,
            "min": -180,
            "max": 180
          }
        ],
        "azimuth_batch_increment": [
          "FLOAT",
          {
            "default": 0,
            "min": -180,
            "max": 180
          }
        ]
      }
    },
    "output": ["CONDITIONING", "CONDITIONING", "LATENT"],
    "output_is_list": [false, false, false],
    "output_name": ["positive", "negative", "latent"],
    "name": "StableZero123_Conditioning_Batched",
    "display_name": "StableZero123_Conditioning_Batched",
    "description": "",
    "category": "conditioning/3d_models",
    "output_node": false
  },
  "SD_4XUpscale_Conditioning": {
    "input": {
      "required": {
        "images": ["IMAGE"],
        "positive": ["CONDITIONING"],
        "negative": ["CONDITIONING"],
        "scale_ratio": [
          "FLOAT",
          {
            "default": 4,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "noise_augmentation": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ]
      }
    },
    "output": ["CONDITIONING", "CONDITIONING", "LATENT"],
    "output_is_list": [false, false, false],
    "output_name": ["positive", "negative", "latent"],
    "name": "SD_4XUpscale_Conditioning",
    "display_name": "SD_4XUpscale_Conditioning",
    "description": "",
    "category": "conditioning/upscale_diffusion",
    "output_node": false
  },
  "PhotoMakerLoader": {
    "input": {
      "required": {
        "photomaker_model_name": [[]]
      }
    },
    "output": ["PHOTOMAKER"],
    "output_is_list": [false],
    "output_name": ["PHOTOMAKER"],
    "name": "PhotoMakerLoader",
    "display_name": "PhotoMakerLoader",
    "description": "",
    "category": "_for_testing/photomaker",
    "output_node": false
  },
  "PhotoMakerEncode": {
    "input": {
      "required": {
        "photomaker": ["PHOTOMAKER"],
        "image": ["IMAGE"],
        "clip": ["CLIP"],
        "text": [
          "STRING",
          {
            "multiline": true,
            "default": "photograph of photomaker"
          }
        ]
      }
    },
    "output": ["CONDITIONING"],
    "output_is_list": [false],
    "output_name": ["CONDITIONING"],
    "name": "PhotoMakerEncode",
    "display_name": "PhotoMakerEncode",
    "description": "",
    "category": "_for_testing/photomaker",
    "output_node": false
  },
  "ShowText|pysssss": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "forceInput": true
          }
        ]
      },
      "hidden": {
        "unique_id": "UNIQUE_ID",
        "extra_pnginfo": "EXTRA_PNGINFO"
      }
    },
    "output": ["STRING"],
    "output_is_list": [true],
    "output_name": ["STRING"],
    "name": "ShowText|pysssss",
    "display_name": "Show Text 🐍",
    "description": "",
    "category": "utils",
    "output_node": true
  },
  "ConstrainImage|pysssss": {
    "input": {
      "required": {
        "images": ["IMAGE"],
        "max_width": [
          "INT",
          {
            "default": 1024,
            "min": 0
          }
        ],
        "max_height": [
          "INT",
          {
            "default": 1024,
            "min": 0
          }
        ],
        "min_width": [
          "INT",
          {
            "default": 0,
            "min": 0
          }
        ],
        "min_height": [
          "INT",
          {
            "default": 0,
            "min": 0
          }
        ],
        "crop_if_required": [
          ["yes", "no"],
          {
            "default": "no"
          }
        ]
      }
    },
    "output": ["IMAGE"],
    "output_is_list": [true],
    "output_name": ["IMAGE"],
    "name": "ConstrainImage|pysssss",
    "display_name": "Constrain Image 🐍",
    "description": "",
    "category": "image",
    "output_node": false
  },
  "ReroutePrimitive|pysssss": {
    "input": {
      "required": {
        "value": ["*"]
      }
    },
    "output": ["*"],
    "output_is_list": [false],
    "output_name": ["*"],
    "name": "ReroutePrimitive|pysssss",
    "display_name": "Reroute Primitive 🐍",
    "description": "",
    "category": "utils",
    "output_node": false
  },
  "MathExpression|pysssss": {
    "input": {
      "required": {
        "expression": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": false,
            "pysssss.autocomplete": {
              "words": [
                {
                  "text": "round",
                  "value": "round()",
                  "showValue": false,
                  "hint": "number, dp? = 0",
                  "caretOffset": -1
                },
                {
                  "text": "ceil",
                  "value": "ceil()",
                  "showValue": false,
                  "hint": "number",
                  "caretOffset": -1
                },
                {
                  "text": "floor",
                  "value": "floor()",
                  "showValue": false,
                  "hint": "number",
                  "caretOffset": -1
                },
                {
                  "text": "min",
                  "value": "min()",
                  "showValue": false,
                  "hint": "...numbers",
                  "caretOffset": -1
                },
                {
                  "text": "max",
                  "value": "max()",
                  "showValue": false,
                  "hint": "...numbers",
                  "caretOffset": -1
                },
                {
                  "text": "randomint",
                  "value": "randomint()",
                  "showValue": false,
                  "hint": "min, max",
                  "caretOffset": -1
                },
                {
                  "text": "randomchoice",
                  "value": "randomchoice()",
                  "showValue": false,
                  "hint": "...numbers",
                  "caretOffset": -1
                }
              ],
              "separator": ""
            }
          }
        ]
      },
      "optional": {
        "a": ["INT,FLOAT,IMAGE,LATENT"],
        "b": ["INT,FLOAT,IMAGE,LATENT"],
        "c": ["INT,FLOAT,IMAGE,LATENT"]
      },
      "hidden": {
        "extra_pnginfo": "EXTRA_PNGINFO",
        "prompt": "PROMPT"
      }
    },
    "output": ["INT", "FLOAT"],
    "output_is_list": [false, false],
    "output_name": ["INT", "FLOAT"],
    "name": "MathExpression|pysssss",
    "display_name": "Math Expression 🐍",
    "description": "",
    "category": "utils",
    "output_node": true
  },
  "ConstrainImageforVideo|pysssss": {
    "input": {
      "required": {
        "images": ["IMAGE"],
        "max_width": [
          "INT",
          {
            "default": 1024,
            "min": 0
          }
        ],
        "max_height": [
          "INT",
          {
            "default": 1024,
            "min": 0
          }
        ],
        "min_width": [
          "INT",
          {
            "default": 0,
            "min": 0
          }
        ],
        "min_height": [
          "INT",
          {
            "default": 0,
            "min": 0
          }
        ],
        "crop_if_required": [
          ["yes", "no"],
          {
            "default": "no"
          }
        ]
      }
    },
    "output": ["IMAGE"],
    "output_is_list": [false],
    "output_name": ["IMAGE"],
    "name": "ConstrainImageforVideo|pysssss",
    "display_name": "Constrain Image for Video 🐍",
    "description": "",
    "category": "image",
    "output_node": false
  },
  "LoraLoader|pysssss": {
    "input": {
      "required": {
        "model": ["MODEL"],
        "clip": ["CLIP"],
        "lora_name": [
          [
            {
              "content": "Ahri.safetensors",
              "image": null
            },
            {
              "content": "Belle-v1-01.safetensors",
              "image": null
            },
            {
              "content": "BelleV2.safetensors",
              "image": null
            },
            {
              "content": "Blackpink_Fusion.safetensors",
              "image": null
            },
            {
              "content": "Broken_Covenant_Miss_Fortune.safetensors",
              "image": null
            },
            {
              "content": "Coven_Ahri.safetensors",
              "image": null
            },
            {
              "content": "Coven_Zyra.safetensors",
              "image": null
            },
            {
              "content": "fc2318a3-8d41-4dd7-8a8d-91410d7b4ee3.safetensors",
              "image": null
            },
            {
              "content": "Firecracker_Diana.safetensors",
              "image": null
            },
            {
              "content": "GoodHands-beta2.safetensors",
              "image": null
            },
            {
              "content": "HOTD.safetensors",
              "image": null
            },
            {
              "content": "Irelia.safetensors",
              "image": null
            },
            {
              "content": "KDA_Ahri_Prestige_Edition.safetensors",
              "image": null
            },
            {
              "content": "KDA_All_Out_Ahri.safetensors",
              "image": null
            },
            {
              "content": "Lucy_Cyberpunk.safetensors",
              "image": null
            },
            {
              "content": "Miss_Fortune.safetensors",
              "image": null
            },
            {
              "content": "Pool_Party_Miss_Fortune.safetensors",
              "image": null
            },
            {
              "content": "Star_Guardian_Ahri.safetensors",
              "image": null
            },
            {
              "content": "Winterblessed_Diana.safetensors",
              "image": null
            }
          ]
        ],
        "strength_model": [
          "FLOAT",
          {
            "default": 1,
            "min": -20,
            "max": 20,
            "step": 0.01
          }
        ],
        "strength_clip": [
          "FLOAT",
          {
            "default": 1,
            "min": -20,
            "max": 20,
            "step": 0.01
          }
        ]
      }
    },
    "output": ["MODEL", "CLIP"],
    "output_is_list": [false, false],
    "output_name": ["MODEL", "CLIP"],
    "name": "LoraLoader|pysssss",
    "display_name": "Lora Loader 🐍",
    "description": "",
    "category": "loaders",
    "output_node": false
  },
  "CheckpointLoader|pysssss": {
    "input": {
      "required": {
        "ckpt_name": [
          [
            {
              "content": "Aniverse.safetensors",
              "image": null
            },
            {
              "content": "darksun_v41.safetensors",
              "image": null
            },
            {
              "content": "darkSushi25D25D_v40.safetensors",
              "image": null
            },
            {
              "content": "Desync Image v5.safetensors",
              "image": null
            },
            {
              "content": "era09_v10.safetensors",
              "image": null
            },
            {
              "content": "MajicMix.safetensors",
              "image": null
            },
            {
              "content": "pasteldiffusedmix.safetensors",
              "image": null
            },
            {
              "content": "Realistic Vision.safetensors",
              "image": null
            },
            {
              "content": "richyrichmix_V2Fp16.safetensors",
              "image": null
            }
          ]
        ]
      }
    },
    "output": ["MODEL", "CLIP", "VAE"],
    "output_is_list": [false, false, false],
    "output_name": ["MODEL", "CLIP", "VAE"],
    "name": "CheckpointLoader|pysssss",
    "display_name": "Checkpoint Loader 🐍",
    "description": "",
    "category": "loaders",
    "output_node": false
  },
  "PlaySound|pysssss": {
    "input": {
      "required": {
        "any": ["*", {}],
        "mode": [["always", "on empty queue"], {}],
        "volume": [
          "FLOAT",
          {
            "min": 0,
            "max": 1,
            "step": 0.1,
            "default": 0.5
          }
        ],
        "file": [
          "STRING",
          {
            "default": "notify.mp3"
          }
        ]
      }
    },
    "output": ["*"],
    "output_is_list": [true],
    "output_name": ["*"],
    "name": "PlaySound|pysssss",
    "display_name": "PlaySound 🐍",
    "description": "",
    "category": "utils",
    "output_node": true
  },
  "LoadText|pysssss": {
    "input": {
      "required": {
        "root_dir": [["input", "output", "temp"], {}],
        "file": [
          ["[none]"],
          {
            "pysssss.binding": [
              {
                "source": "root_dir",
                "callback": [
                  {
                    "type": "set",
                    "target": "$this.disabled",
                    "value": true
                  },
                  {
                    "type": "fetch",
                    "url": "/pysssss/text-file/{$source.value}",
                    "then": [
                      {
                        "type": "set",
                        "target": "$this.options.values",
                        "value": "$result"
                      },
                      {
                        "type": "validate-combo"
                      },
                      {
                        "type": "set",
                        "target": "$this.disabled",
                        "value": false
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    },
    "output": ["STRING"],
    "output_is_list": [false],
    "output_name": ["STRING"],
    "name": "LoadText|pysssss",
    "display_name": "Load Text 🐍",
    "description": "",
    "category": "utils",
    "output_node": false
  },
  "SaveText|pysssss": {
    "input": {
      "required": {
        "root_dir": [["input", "output", "temp"], {}],
        "file": [
          "STRING",
          {
            "default": "file.txt"
          }
        ],
        "append": [["append", "overwrite", "new only"], {}],
        "insert": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "new line",
            "label_off": "none",
            "pysssss.binding": [
              {
                "source": "append",
                "callback": [
                  {
                    "type": "if",
                    "condition": [
                      {
                        "left": "$source.value",
                        "op": "eq",
                        "right": "\"append\""
                      }
                    ],
                    "true": [
                      {
                        "type": "set",
                        "target": "$this.disabled",
                        "value": false
                      }
                    ],
                    "false": [
                      {
                        "type": "set",
                        "target": "$this.disabled",
                        "value": true
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ],
        "text": [
          "STRING",
          {
            "forceInput": true,
            "multiline": true
          }
        ]
      }
    },
    "output": ["STRING"],
    "output_is_list": [false],
    "output_name": ["STRING"],
    "name": "SaveText|pysssss",
    "display_name": "Save Text 🐍",
    "description": "",
    "category": "utils",
    "output_node": false
  },
  "Repeater|pysssss": {
    "input": {
      "required": {
        "source": ["*", {}],
        "repeats": [
          "INT",
          {
            "min": 0,
            "max": 5000,
            "default": 2
          }
        ],
        "output": [["single", "multi"], {}],
        "node_mode": [["reuse", "create"], {}]
      }
    },
    "output": ["*"],
    "output_is_list": [true],
    "output_name": ["*"],
    "name": "Repeater|pysssss",
    "display_name": "Repeater 🐍",
    "description": "",
    "category": "utils",
    "output_node": false
  },
  "StringFunction|pysssss": {
    "input": {
      "required": {
        "action": [["append", "replace"], {}],
        "tidy_tags": [["yes", "no"], {}],
        "text_a": [
          "STRING",
          {
            "multiline": true
          }
        ],
        "text_b": [
          "STRING",
          {
            "multiline": true
          }
        ]
      },
      "optional": {
        "text_c": [
          "STRING",
          {
            "multiline": true
          }
        ]
      }
    },
    "output": ["STRING"],
    "output_is_list": [false],
    "output_name": ["STRING"],
    "name": "StringFunction|pysssss",
    "display_name": "String Function 🐍",
    "description": "",
    "category": "utils",
    "output_node": true
  },
  "SAMLoader": {
    "input": {
      "required": {
        "model_name": [["sam_vit_b_01ec64.pth"]],
        "device_mode": [["AUTO", "Prefer GPU", "CPU"]]
      }
    },
    "output": ["SAM_MODEL"],
    "output_is_list": [false],
    "output_name": ["SAM_MODEL"],
    "name": "SAMLoader",
    "display_name": "SAMLoader (Impact)",
    "description": "",
    "category": "ImpactPack",
    "output_node": false
  },
  "CLIPSegDetectorProvider": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "multiline": false
          }
        ],
        "blur": [
          "FLOAT",
          {
            "min": 0,
            "max": 15,
            "step": 0.1,
            "default": 7
          }
        ],
        "threshold": [
          "FLOAT",
          {
            "min": 0,
            "max": 1,
            "step": 0.05,
            "default": 0.4
          }
        ],
        "dilation_factor": [
          "INT",
          {
            "min": 0,
            "max": 10,
            "step": 1,
            "default": 4
          }
        ]
      }
    },
    "output": ["BBOX_DETECTOR"],
    "output_is_list": [false],
    "output_name": ["BBOX_DETECTOR"],
    "name": "CLIPSegDetectorProvider",
    "display_name": "CLIPSegDetectorProvider",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ONNXDetectorProvider": {
    "input": {
      "required": {
        "model_name": [[]]
      }
    },
    "output": ["BBOX_DETECTOR"],
    "output_is_list": [false],
    "output_name": ["BBOX_DETECTOR"],
    "name": "ONNXDetectorProvider",
    "display_name": "ONNXDetectorProvider",
    "description": "",
    "category": "ImpactPack",
    "output_node": false
  },
  "BitwiseAndMaskForEach": {
    "input": {
      "required": {
        "base_segs": ["SEGS"],
        "mask_segs": ["SEGS"]
      }
    },
    "output": ["SEGS"],
    "output_is_list": [false],
    "output_name": ["SEGS"],
    "name": "BitwiseAndMaskForEach",
    "display_name": "Bitwise(SEGS & SEGS)",
    "description": "",
    "category": "ImpactPack/Operation",
    "output_node": false
  },
  "SubtractMaskForEach": {
    "input": {
      "required": {
        "base_segs": ["SEGS"],
        "mask_segs": ["SEGS"]
      }
    },
    "output": ["SEGS"],
    "output_is_list": [false],
    "output_name": ["SEGS"],
    "name": "SubtractMaskForEach",
    "display_name": "Bitwise(SEGS - SEGS)",
    "description": "",
    "category": "ImpactPack/Operation",
    "output_node": false
  },
  "DetailerForEach": {
    "input": {
      "required": {
        "image": ["IMAGE"],
        "segs": ["SEGS"],
        "model": ["MODEL"],
        "clip": ["CLIP"],
        "vae": ["VAE"],
        "guide_size": [
          "FLOAT",
          {
            "default": 384,
            "min": 64,
            "max": 8192,
            "step": 8
          }
        ],
        "guide_size_for": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "bbox",
            "label_off": "crop_region"
          }
        ],
        "max_size": [
          "FLOAT",
          {
            "default": 1024,
            "min": 64,
            "max": 8192,
            "step": 8
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e19
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8,
            "min": 0,
            "max": 100
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "positive": ["CONDITIONING"],
        "negative": ["CONDITIONING"],
        "denoise": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0001,
            "max": 1,
            "step": 0.01
          }
        ],
        "feather": [
          "INT",
          {
            "default": 5,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ],
        "noise_mask": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "force_inpaint": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "wildcard": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": false
          }
        ],
        "cycle": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 10,
            "step": 1
          }
        ]
      },
      "optional": {
        "detailer_hook": ["DETAILER_HOOK"],
        "inpaint_model": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "noise_mask_feather": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ]
      }
    },
    "output": ["IMAGE"],
    "output_is_list": [false],
    "output_name": ["IMAGE"],
    "name": "DetailerForEach",
    "display_name": "Detailer (SEGS)",
    "description": "",
    "category": "ImpactPack/Detailer",
    "output_node": false
  },
  "DetailerForEachDebug": {
    "input": {
      "required": {
        "image": ["IMAGE"],
        "segs": ["SEGS"],
        "model": ["MODEL"],
        "clip": ["CLIP"],
        "vae": ["VAE"],
        "guide_size": [
          "FLOAT",
          {
            "default": 384,
            "min": 64,
            "max": 8192,
            "step": 8
          }
        ],
        "guide_size_for": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "bbox",
            "label_off": "crop_region"
          }
        ],
        "max_size": [
          "FLOAT",
          {
            "default": 1024,
            "min": 64,
            "max": 8192,
            "step": 8
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e19
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8,
            "min": 0,
            "max": 100
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "positive": ["CONDITIONING"],
        "negative": ["CONDITIONING"],
        "denoise": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0001,
            "max": 1,
            "step": 0.01
          }
        ],
        "feather": [
          "INT",
          {
            "default": 5,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ],
        "noise_mask": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "force_inpaint": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "wildcard": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": false
          }
        ],
        "cycle": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 10,
            "step": 1
          }
        ]
      },
      "optional": {
        "detailer_hook": ["DETAILER_HOOK"],
        "inpaint_model": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "noise_mask_feather": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ]
      }
    },
    "output": ["IMAGE", "IMAGE", "IMAGE", "IMAGE", "IMAGE"],
    "output_is_list": [false, true, true, true, true],
    "output_name": [
      "image",
      "cropped",
      "cropped_refined",
      "cropped_refined_alpha",
      "cnet_images"
    ],
    "name": "DetailerForEachDebug",
    "display_name": "DetailerDebug (SEGS)",
    "description": "",
    "category": "ImpactPack/Detailer",
    "output_node": false
  },
  "DetailerForEachPipe": {
    "input": {
      "required": {
        "image": ["IMAGE"],
        "segs": ["SEGS"],
        "guide_size": [
          "FLOAT",
          {
            "default": 384,
            "min": 64,
            "max": 8192,
            "step": 8
          }
        ],
        "guide_size_for": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "bbox",
            "label_off": "crop_region"
          }
        ],
        "max_size": [
          "FLOAT",
          {
            "default": 1024,
            "min": 64,
            "max": 8192,
            "step": 8
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e19
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8,
            "min": 0,
            "max": 100
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0001,
            "max": 1,
            "step": 0.01
          }
        ],
        "feather": [
          "INT",
          {
            "default": 5,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ],
        "noise_mask": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "force_inpaint": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "basic_pipe": ["BASIC_PIPE"],
        "wildcard": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": false
          }
        ],
        "refiner_ratio": [
          "FLOAT",
          {
            "default": 0.2,
            "min": 0,
            "max": 1
          }
        ],
        "cycle": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 10,
            "step": 1
          }
        ]
      },
      "optional": {
        "detailer_hook": ["DETAILER_HOOK"],
        "refiner_basic_pipe_opt": ["BASIC_PIPE"],
        "inpaint_model": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "noise_mask_feather": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ]
      }
    },
    "output": ["IMAGE", "SEGS", "BASIC_PIPE", "IMAGE"],
    "output_is_list": [false, false, false, true],
    "output_name": ["image", "segs", "basic_pipe", "cnet_images"],
    "name": "DetailerForEachPipe",
    "display_name": "Detailer (SEGS/pipe)",
    "description": "",
    "category": "ImpactPack/Detailer",
    "output_node": false
  },
  "DetailerForEachDebugPipe": {
    "input": {
      "required": {
        "image": ["IMAGE"],
        "segs": ["SEGS"],
        "guide_size": [
          "FLOAT",
          {
            "default": 384,
            "min": 64,
            "max": 8192,
            "step": 8
          }
        ],
        "guide_size_for": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "bbox",
            "label_off": "crop_region"
          }
        ],
        "max_size": [
          "FLOAT",
          {
            "default": 1024,
            "min": 64,
            "max": 8192,
            "step": 8
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e19
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8,
            "min": 0,
            "max": 100
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0001,
            "max": 1,
            "step": 0.01
          }
        ],
        "feather": [
          "INT",
          {
            "default": 5,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ],
        "noise_mask": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "force_inpaint": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "basic_pipe": ["BASIC_PIPE"],
        "wildcard": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": false
          }
        ],
        "refiner_ratio": [
          "FLOAT",
          {
            "default": 0.2,
            "min": 0,
            "max": 1
          }
        ],
        "cycle": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 10,
            "step": 1
          }
        ]
      },
      "optional": {
        "detailer_hook": ["DETAILER_HOOK"],
        "refiner_basic_pipe_opt": ["BASIC_PIPE"],
        "inpaint_model": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "noise_mask_feather": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ]
      }
    },
    "output": [
      "IMAGE",
      "SEGS",
      "BASIC_PIPE",
      "IMAGE",
      "IMAGE",
      "IMAGE",
      "IMAGE"
    ],
    "output_is_list": [false, false, false, true, true, true, true],
    "output_name": [
      "image",
      "segs",
      "basic_pipe",
      "cropped",
      "cropped_refined",
      "cropped_refined_alpha",
      "cnet_images"
    ],
    "name": "DetailerForEachDebugPipe",
    "display_name": "DetailerDebug (SEGS/pipe)",
    "description": "",
    "category": "ImpactPack/Detailer",
    "output_node": false
  },
  "DetailerForEachPipeForAnimateDiff": {
    "input": {
      "required": {
        "image_frames": ["IMAGE"],
        "segs": ["SEGS"],
        "guide_size": [
          "FLOAT",
          {
            "default": 384,
            "min": 64,
            "max": 8192,
            "step": 8
          }
        ],
        "guide_size_for": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "bbox",
            "label_off": "crop_region"
          }
        ],
        "max_size": [
          "FLOAT",
          {
            "default": 1024,
            "min": 64,
            "max": 8192,
            "step": 8
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e19
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8,
            "min": 0,
            "max": 100
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0001,
            "max": 1,
            "step": 0.01
          }
        ],
        "feather": [
          "INT",
          {
            "default": 5,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ],
        "basic_pipe": ["BASIC_PIPE"],
        "refiner_ratio": [
          "FLOAT",
          {
            "default": 0.2,
            "min": 0,
            "max": 1
          }
        ]
      },
      "optional": {
        "detailer_hook": ["DETAILER_HOOK"],
        "refiner_basic_pipe_opt": ["BASIC_PIPE"]
      }
    },
    "output": ["IMAGE", "SEGS", "BASIC_PIPE", "IMAGE"],
    "output_is_list": [false, false, false, true],
    "output_name": ["image", "segs", "basic_pipe", "cnet_images"],
    "name": "DetailerForEachPipeForAnimateDiff",
    "display_name": "Detailer For AnimateDiff (SEGS/pipe)",
    "description": "",
    "category": "ImpactPack/Detailer",
    "output_node": false
  },
  "SAMDetectorCombined": {
    "input": {
      "required": {
        "sam_model": ["SAM_MODEL"],
        "segs": ["SEGS"],
        "image": ["IMAGE"],
        "detection_hint": [
          [
            "center-1",
            "horizontal-2",
            "vertical-2",
            "rect-4",
            "diamond-4",
            "mask-area",
            "mask-points",
            "mask-point-bbox",
            "none"
          ]
        ],
        "dilation": [
          "INT",
          {
            "default": 0,
            "min": -512,
            "max": 512,
            "step": 1
          }
        ],
        "threshold": [
          "FLOAT",
          {
            "default": 0.93,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "bbox_expansion": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1000,
            "step": 1
          }
        ],
        "mask_hint_threshold": [
          "FLOAT",
          {
            "default": 0.7,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "mask_hint_use_negative": [["False", "Small", "Outter"]]
      }
    },
    "output": ["MASK"],
    "output_is_list": [false],
    "output_name": ["MASK"],
    "name": "SAMDetectorCombined",
    "display_name": "SAMDetector (combined)",
    "description": "",
    "category": "ImpactPack/Detector",
    "output_node": false
  },
  "SAMDetectorSegmented": {
    "input": {
      "required": {
        "sam_model": ["SAM_MODEL"],
        "segs": ["SEGS"],
        "image": ["IMAGE"],
        "detection_hint": [
          [
            "center-1",
            "horizontal-2",
            "vertical-2",
            "rect-4",
            "diamond-4",
            "mask-area",
            "mask-points",
            "mask-point-bbox",
            "none"
          ]
        ],
        "dilation": [
          "INT",
          {
            "default": 0,
            "min": -512,
            "max": 512,
            "step": 1
          }
        ],
        "threshold": [
          "FLOAT",
          {
            "default": 0.93,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "bbox_expansion": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1000,
            "step": 1
          }
        ],
        "mask_hint_threshold": [
          "FLOAT",
          {
            "default": 0.7,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "mask_hint_use_negative": [["False", "Small", "Outter"]]
      }
    },
    "output": ["MASK", "MASK"],
    "output_is_list": [false, false],
    "output_name": ["combined_mask", "batch_masks"],
    "name": "SAMDetectorSegmented",
    "display_name": "SAMDetector (segmented)",
    "description": "",
    "category": "ImpactPack/Detector",
    "output_node": false
  },
  "FaceDetailer": {
    "input": {
      "required": {
        "image": ["IMAGE"],
        "model": ["MODEL"],
        "clip": ["CLIP"],
        "vae": ["VAE"],
        "guide_size": [
          "FLOAT",
          {
            "default": 384,
            "min": 64,
            "max": 8192,
            "step": 8
          }
        ],
        "guide_size_for": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "bbox",
            "label_off": "crop_region"
          }
        ],
        "max_size": [
          "FLOAT",
          {
            "default": 1024,
            "min": 64,
            "max": 8192,
            "step": 8
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e19
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8,
            "min": 0,
            "max": 100
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "positive": ["CONDITIONING"],
        "negative": ["CONDITIONING"],
        "denoise": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0001,
            "max": 1,
            "step": 0.01
          }
        ],
        "feather": [
          "INT",
          {
            "default": 5,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ],
        "noise_mask": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "force_inpaint": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "bbox_threshold": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "bbox_dilation": [
          "INT",
          {
            "default": 10,
            "min": -512,
            "max": 512,
            "step": 1
          }
        ],
        "bbox_crop_factor": [
          "FLOAT",
          {
            "default": 3,
            "min": 1,
            "max": 10,
            "step": 0.1
          }
        ],
        "sam_detection_hint": [
          [
            "center-1",
            "horizontal-2",
            "vertical-2",
            "rect-4",
            "diamond-4",
            "mask-area",
            "mask-points",
            "mask-point-bbox",
            "none"
          ]
        ],
        "sam_dilation": [
          "INT",
          {
            "default": 0,
            "min": -512,
            "max": 512,
            "step": 1
          }
        ],
        "sam_threshold": [
          "FLOAT",
          {
            "default": 0.93,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "sam_bbox_expansion": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1000,
            "step": 1
          }
        ],
        "sam_mask_hint_threshold": [
          "FLOAT",
          {
            "default": 0.7,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "sam_mask_hint_use_negative": [["False", "Small", "Outter"]],
        "drop_size": [
          "INT",
          {
            "min": 1,
            "max": 8192,
            "step": 1,
            "default": 10
          }
        ],
        "bbox_detector": ["BBOX_DETECTOR"],
        "wildcard": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": false
          }
        ],
        "cycle": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 10,
            "step": 1
          }
        ]
      },
      "optional": {
        "sam_model_opt": ["SAM_MODEL"],
        "segm_detector_opt": ["SEGM_DETECTOR"],
        "detailer_hook": ["DETAILER_HOOK"],
        "inpaint_model": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "noise_mask_feather": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ]
      }
    },
    "output": ["IMAGE", "IMAGE", "IMAGE", "MASK", "DETAILER_PIPE", "IMAGE"],
    "output_is_list": [false, true, true, false, false, true],
    "output_name": [
      "image",
      "cropped_refined",
      "cropped_enhanced_alpha",
      "mask",
      "detailer_pipe",
      "cnet_images"
    ],
    "name": "FaceDetailer",
    "display_name": "FaceDetailer",
    "description": "",
    "category": "ImpactPack/Simple",
    "output_node": false
  },
  "FaceDetailerPipe": {
    "input": {
      "required": {
        "image": ["IMAGE"],
        "detailer_pipe": ["DETAILER_PIPE"],
        "guide_size": [
          "FLOAT",
          {
            "default": 384,
            "min": 64,
            "max": 8192,
            "step": 8
          }
        ],
        "guide_size_for": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "bbox",
            "label_off": "crop_region"
          }
        ],
        "max_size": [
          "FLOAT",
          {
            "default": 1024,
            "min": 64,
            "max": 8192,
            "step": 8
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e19
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8,
            "min": 0,
            "max": 100
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0001,
            "max": 1,
            "step": 0.01
          }
        ],
        "feather": [
          "INT",
          {
            "default": 5,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ],
        "noise_mask": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "force_inpaint": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "bbox_threshold": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "bbox_dilation": [
          "INT",
          {
            "default": 10,
            "min": -512,
            "max": 512,
            "step": 1
          }
        ],
        "bbox_crop_factor": [
          "FLOAT",
          {
            "default": 3,
            "min": 1,
            "max": 10,
            "step": 0.1
          }
        ],
        "sam_detection_hint": [
          [
            "center-1",
            "horizontal-2",
            "vertical-2",
            "rect-4",
            "diamond-4",
            "mask-area",
            "mask-points",
            "mask-point-bbox",
            "none"
          ]
        ],
        "sam_dilation": [
          "INT",
          {
            "default": 0,
            "min": -512,
            "max": 512,
            "step": 1
          }
        ],
        "sam_threshold": [
          "FLOAT",
          {
            "default": 0.93,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "sam_bbox_expansion": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1000,
            "step": 1
          }
        ],
        "sam_mask_hint_threshold": [
          "FLOAT",
          {
            "default": 0.7,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "sam_mask_hint_use_negative": [["False", "Small", "Outter"]],
        "drop_size": [
          "INT",
          {
            "min": 1,
            "max": 8192,
            "step": 1,
            "default": 10
          }
        ],
        "refiner_ratio": [
          "FLOAT",
          {
            "default": 0.2,
            "min": 0,
            "max": 1
          }
        ],
        "cycle": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 10,
            "step": 1
          }
        ]
      },
      "optional": {
        "inpaint_model": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "noise_mask_feather": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ]
      }
    },
    "output": ["IMAGE", "IMAGE", "IMAGE", "MASK", "DETAILER_PIPE", "IMAGE"],
    "output_is_list": [false, true, true, false, false, true],
    "output_name": [
      "image",
      "cropped_refined",
      "cropped_enhanced_alpha",
      "mask",
      "detailer_pipe",
      "cnet_images"
    ],
    "name": "FaceDetailerPipe",
    "display_name": "FaceDetailer (pipe)",
    "description": "",
    "category": "ImpactPack/Simple",
    "output_node": false
  },
  "MaskDetailerPipe": {
    "input": {
      "required": {
        "image": ["IMAGE"],
        "mask": ["MASK"],
        "basic_pipe": ["BASIC_PIPE"],
        "guide_size": [
          "FLOAT",
          {
            "default": 384,
            "min": 64,
            "max": 8192,
            "step": 8
          }
        ],
        "guide_size_for": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "mask bbox",
            "label_off": "crop region"
          }
        ],
        "max_size": [
          "FLOAT",
          {
            "default": 1024,
            "min": 64,
            "max": 8192,
            "step": 8
          }
        ],
        "mask_mode": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "masked only",
            "label_off": "whole"
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e19
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8,
            "min": 0,
            "max": 100
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0001,
            "max": 1,
            "step": 0.01
          }
        ],
        "feather": [
          "INT",
          {
            "default": 5,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ],
        "crop_factor": [
          "FLOAT",
          {
            "default": 3,
            "min": 1,
            "max": 10,
            "step": 0.1
          }
        ],
        "drop_size": [
          "INT",
          {
            "min": 1,
            "max": 8192,
            "step": 1,
            "default": 10
          }
        ],
        "refiner_ratio": [
          "FLOAT",
          {
            "default": 0.2,
            "min": 0,
            "max": 1
          }
        ],
        "batch_size": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 100
          }
        ],
        "cycle": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 10,
            "step": 1
          }
        ]
      },
      "optional": {
        "refiner_basic_pipe_opt": ["BASIC_PIPE"],
        "detailer_hook": ["DETAILER_HOOK"],
        "inpaint_model": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "noise_mask_feather": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ]
      }
    },
    "output": ["IMAGE", "IMAGE", "IMAGE", "BASIC_PIPE", "BASIC_PIPE"],
    "output_is_list": [false, true, true, false, false],
    "output_name": [
      "image",
      "cropped_refined",
      "cropped_enhanced_alpha",
      "basic_pipe",
      "refiner_basic_pipe_opt"
    ],
    "name": "MaskDetailerPipe",
    "display_name": "MaskDetailer (pipe)",
    "description": "",
    "category": "ImpactPack/Detailer",
    "output_node": false
  },
  "ToDetailerPipe": {
    "input": {
      "required": {
        "model": ["MODEL"],
        "clip": ["CLIP"],
        "vae": ["VAE"],
        "positive": ["CONDITIONING"],
        "negative": ["CONDITIONING"],
        "bbox_detector": ["BBOX_DETECTOR"],
        "wildcard": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": false
          }
        ],
        "Select to add LoRA": [
          [
            "Select the LoRA to add to the text",
            "Ahri.safetensors",
            "Belle-v1-01.safetensors",
            "BelleV2.safetensors",
            "Blackpink_Fusion.safetensors",
            "Broken_Covenant_Miss_Fortune.safetensors",
            "Coven_Ahri.safetensors",
            "Coven_Zyra.safetensors",
            "Firecracker_Diana.safetensors",
            "GoodHands-beta2.safetensors",
            "HOTD.safetensors",
            "Irelia.safetensors",
            "KDA_Ahri_Prestige_Edition.safetensors",
            "KDA_All_Out_Ahri.safetensors",
            "Lucy_Cyberpunk.safetensors",
            "Miss_Fortune.safetensors",
            "Pool_Party_Miss_Fortune.safetensors",
            "Star_Guardian_Ahri.safetensors",
            "Winterblessed_Diana.safetensors",
            "fc2318a3-8d41-4dd7-8a8d-91410d7b4ee3.safetensors"
          ]
        ],
        "Select to add Wildcard": [["Select the Wildcard to add to the text"]]
      },
      "optional": {
        "sam_model_opt": ["SAM_MODEL"],
        "segm_detector_opt": ["SEGM_DETECTOR"],
        "detailer_hook": ["DETAILER_HOOK"]
      }
    },
    "output": ["DETAILER_PIPE"],
    "output_is_list": [false],
    "output_name": ["detailer_pipe"],
    "name": "ToDetailerPipe",
    "display_name": "ToDetailerPipe",
    "description": "",
    "category": "ImpactPack/Pipe",
    "output_node": false
  },
  "ToDetailerPipeSDXL": {
    "input": {
      "required": {
        "model": ["MODEL"],
        "clip": ["CLIP"],
        "vae": ["VAE"],
        "positive": ["CONDITIONING"],
        "negative": ["CONDITIONING"],
        "refiner_model": ["MODEL"],
        "refiner_clip": ["CLIP"],
        "refiner_positive": ["CONDITIONING"],
        "refiner_negative": ["CONDITIONING"],
        "bbox_detector": ["BBOX_DETECTOR"],
        "wildcard": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": false
          }
        ],
        "Select to add LoRA": [
          [
            "Select the LoRA to add to the text",
            "Ahri.safetensors",
            "Belle-v1-01.safetensors",
            "BelleV2.safetensors",
            "Blackpink_Fusion.safetensors",
            "Broken_Covenant_Miss_Fortune.safetensors",
            "Coven_Ahri.safetensors",
            "Coven_Zyra.safetensors",
            "Firecracker_Diana.safetensors",
            "GoodHands-beta2.safetensors",
            "HOTD.safetensors",
            "Irelia.safetensors",
            "KDA_Ahri_Prestige_Edition.safetensors",
            "KDA_All_Out_Ahri.safetensors",
            "Lucy_Cyberpunk.safetensors",
            "Miss_Fortune.safetensors",
            "Pool_Party_Miss_Fortune.safetensors",
            "Star_Guardian_Ahri.safetensors",
            "Winterblessed_Diana.safetensors",
            "fc2318a3-8d41-4dd7-8a8d-91410d7b4ee3.safetensors"
          ]
        ],
        "Select to add Wildcard": [["Select the Wildcard to add to the text"]]
      },
      "optional": {
        "sam_model_opt": ["SAM_MODEL"],
        "segm_detector_opt": ["SEGM_DETECTOR"],
        "detailer_hook": ["DETAILER_HOOK"]
      }
    },
    "output": ["DETAILER_PIPE"],
    "output_is_list": [false],
    "output_name": ["detailer_pipe"],
    "name": "ToDetailerPipeSDXL",
    "display_name": "ToDetailerPipeSDXL",
    "description": "",
    "category": "ImpactPack/Pipe",
    "output_node": false
  },
  "FromDetailerPipe": {
    "input": {
      "required": {
        "detailer_pipe": ["DETAILER_PIPE"]
      }
    },
    "output": [
      "MODEL",
      "CLIP",
      "VAE",
      "CONDITIONING",
      "CONDITIONING",
      "BBOX_DETECTOR",
      "SAM_MODEL",
      "SEGM_DETECTOR",
      "DETAILER_HOOK"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "model",
      "clip",
      "vae",
      "positive",
      "negative",
      "bbox_detector",
      "sam_model_opt",
      "segm_detector_opt",
      "detailer_hook"
    ],
    "name": "FromDetailerPipe",
    "display_name": "FromDetailerPipe",
    "description": "",
    "category": "ImpactPack/Pipe",
    "output_node": false
  },
  "FromDetailerPipe_v2": {
    "input": {
      "required": {
        "detailer_pipe": ["DETAILER_PIPE"]
      }
    },
    "output": [
      "DETAILER_PIPE",
      "MODEL",
      "CLIP",
      "VAE",
      "CONDITIONING",
      "CONDITIONING",
      "BBOX_DETECTOR",
      "SAM_MODEL",
      "SEGM_DETECTOR",
      "DETAILER_HOOK"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "detailer_pipe",
      "model",
      "clip",
      "vae",
      "positive",
      "negative",
      "bbox_detector",
      "sam_model_opt",
      "segm_detector_opt",
      "detailer_hook"
    ],
    "name": "FromDetailerPipe_v2",
    "display_name": "FromDetailerPipe_v2",
    "description": "",
    "category": "ImpactPack/Pipe",
    "output_node": false
  },
  "FromDetailerPipeSDXL": {
    "input": {
      "required": {
        "detailer_pipe": ["DETAILER_PIPE"]
      }
    },
    "output": [
      "DETAILER_PIPE",
      "MODEL",
      "CLIP",
      "VAE",
      "CONDITIONING",
      "CONDITIONING",
      "BBOX_DETECTOR",
      "SAM_MODEL",
      "SEGM_DETECTOR",
      "DETAILER_HOOK",
      "MODEL",
      "CLIP",
      "CONDITIONING",
      "CONDITIONING"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "detailer_pipe",
      "model",
      "clip",
      "vae",
      "positive",
      "negative",
      "bbox_detector",
      "sam_model_opt",
      "segm_detector_opt",
      "detailer_hook",
      "refiner_model",
      "refiner_clip",
      "refiner_positive",
      "refiner_negative"
    ],
    "name": "FromDetailerPipeSDXL",
    "display_name": "FromDetailer (SDXL/pipe)",
    "description": "",
    "category": "ImpactPack/Pipe",
    "output_node": false
  },
  "ToBasicPipe": {
    "input": {
      "required": {
        "model": ["MODEL"],
        "clip": ["CLIP"],
        "vae": ["VAE"],
        "positive": ["CONDITIONING"],
        "negative": ["CONDITIONING"]
      }
    },
    "output": ["BASIC_PIPE"],
    "output_is_list": [false],
    "output_name": ["basic_pipe"],
    "name": "ToBasicPipe",
    "display_name": "ToBasicPipe",
    "description": "",
    "category": "ImpactPack/Pipe",
    "output_node": false
  },
  "FromBasicPipe": {
    "input": {
      "required": {
        "basic_pipe": ["BASIC_PIPE"]
      }
    },
    "output": ["MODEL", "CLIP", "VAE", "CONDITIONING", "CONDITIONING"],
    "output_is_list": [false, false, false, false, false],
    "output_name": ["model", "clip", "vae", "positive", "negative"],
    "name": "FromBasicPipe",
    "display_name": "FromBasicPipe",
    "description": "",
    "category": "ImpactPack/Pipe",
    "output_node": false
  },
  "FromBasicPipe_v2": {
    "input": {
      "required": {
        "basic_pipe": ["BASIC_PIPE"]
      }
    },
    "output": [
      "BASIC_PIPE",
      "MODEL",
      "CLIP",
      "VAE",
      "CONDITIONING",
      "CONDITIONING"
    ],
    "output_is_list": [false, false, false, false, false, false],
    "output_name": [
      "basic_pipe",
      "model",
      "clip",
      "vae",
      "positive",
      "negative"
    ],
    "name": "FromBasicPipe_v2",
    "display_name": "FromBasicPipe_v2",
    "description": "",
    "category": "ImpactPack/Pipe",
    "output_node": false
  },
  "BasicPipeToDetailerPipe": {
    "input": {
      "required": {
        "basic_pipe": ["BASIC_PIPE"],
        "bbox_detector": ["BBOX_DETECTOR"],
        "wildcard": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": false
          }
        ],
        "Select to add LoRA": [
          [
            "Select the LoRA to add to the text",
            "Ahri.safetensors",
            "Belle-v1-01.safetensors",
            "BelleV2.safetensors",
            "Blackpink_Fusion.safetensors",
            "Broken_Covenant_Miss_Fortune.safetensors",
            "Coven_Ahri.safetensors",
            "Coven_Zyra.safetensors",
            "Firecracker_Diana.safetensors",
            "GoodHands-beta2.safetensors",
            "HOTD.safetensors",
            "Irelia.safetensors",
            "KDA_Ahri_Prestige_Edition.safetensors",
            "KDA_All_Out_Ahri.safetensors",
            "Lucy_Cyberpunk.safetensors",
            "Miss_Fortune.safetensors",
            "Pool_Party_Miss_Fortune.safetensors",
            "Star_Guardian_Ahri.safetensors",
            "Winterblessed_Diana.safetensors",
            "fc2318a3-8d41-4dd7-8a8d-91410d7b4ee3.safetensors"
          ]
        ],
        "Select to add Wildcard": [["Select the Wildcard to add to the text"]]
      },
      "optional": {
        "sam_model_opt": ["SAM_MODEL"],
        "segm_detector_opt": ["SEGM_DETECTOR"],
        "detailer_hook": ["DETAILER_HOOK"]
      }
    },
    "output": ["DETAILER_PIPE"],
    "output_is_list": [false],
    "output_name": ["detailer_pipe"],
    "name": "BasicPipeToDetailerPipe",
    "display_name": "BasicPipe -\u003E DetailerPipe",
    "description": "",
    "category": "ImpactPack/Pipe",
    "output_node": false
  },
  "BasicPipeToDetailerPipeSDXL": {
    "input": {
      "required": {
        "base_basic_pipe": ["BASIC_PIPE"],
        "refiner_basic_pipe": ["BASIC_PIPE"],
        "bbox_detector": ["BBOX_DETECTOR"],
        "wildcard": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": false
          }
        ],
        "Select to add LoRA": [
          [
            "Select the LoRA to add to the text",
            "Ahri.safetensors",
            "Belle-v1-01.safetensors",
            "BelleV2.safetensors",
            "Blackpink_Fusion.safetensors",
            "Broken_Covenant_Miss_Fortune.safetensors",
            "Coven_Ahri.safetensors",
            "Coven_Zyra.safetensors",
            "Firecracker_Diana.safetensors",
            "GoodHands-beta2.safetensors",
            "HOTD.safetensors",
            "Irelia.safetensors",
            "KDA_Ahri_Prestige_Edition.safetensors",
            "KDA_All_Out_Ahri.safetensors",
            "Lucy_Cyberpunk.safetensors",
            "Miss_Fortune.safetensors",
            "Pool_Party_Miss_Fortune.safetensors",
            "Star_Guardian_Ahri.safetensors",
            "Winterblessed_Diana.safetensors",
            "fc2318a3-8d41-4dd7-8a8d-91410d7b4ee3.safetensors"
          ]
        ],
        "Select to add Wildcard": [["Select the Wildcard to add to the text"]]
      },
      "optional": {
        "sam_model_opt": ["SAM_MODEL"],
        "segm_detector_opt": ["SEGM_DETECTOR"],
        "detailer_hook": ["DETAILER_HOOK"]
      }
    },
    "output": ["DETAILER_PIPE"],
    "output_is_list": [false],
    "output_name": ["detailer_pipe"],
    "name": "BasicPipeToDetailerPipeSDXL",
    "display_name": "BasicPipe -\u003E DetailerPipe (SDXL)",
    "description": "",
    "category": "ImpactPack/Pipe",
    "output_node": false
  },
  "DetailerPipeToBasicPipe": {
    "input": {
      "required": {
        "detailer_pipe": ["DETAILER_PIPE"]
      }
    },
    "output": ["BASIC_PIPE", "BASIC_PIPE"],
    "output_is_list": [false, false],
    "output_name": ["base_basic_pipe", "refiner_basic_pipe"],
    "name": "DetailerPipeToBasicPipe",
    "display_name": "DetailerPipe -\u003E BasicPipe",
    "description": "",
    "category": "ImpactPack/Pipe",
    "output_node": false
  },
  "EditBasicPipe": {
    "input": {
      "required": {
        "basic_pipe": ["BASIC_PIPE"]
      },
      "optional": {
        "model": ["MODEL"],
        "clip": ["CLIP"],
        "vae": ["VAE"],
        "positive": ["CONDITIONING"],
        "negative": ["CONDITIONING"]
      }
    },
    "output": ["BASIC_PIPE"],
    "output_is_list": [false],
    "output_name": ["basic_pipe"],
    "name": "EditBasicPipe",
    "display_name": "Edit BasicPipe",
    "description": "",
    "category": "ImpactPack/Pipe",
    "output_node": false
  },
  "EditDetailerPipe": {
    "input": {
      "required": {
        "detailer_pipe": ["DETAILER_PIPE"],
        "wildcard": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": false
          }
        ],
        "Select to add LoRA": [
          [
            "Select the LoRA to add to the text",
            "Ahri.safetensors",
            "Belle-v1-01.safetensors",
            "BelleV2.safetensors",
            "Blackpink_Fusion.safetensors",
            "Broken_Covenant_Miss_Fortune.safetensors",
            "Coven_Ahri.safetensors",
            "Coven_Zyra.safetensors",
            "Firecracker_Diana.safetensors",
            "GoodHands-beta2.safetensors",
            "HOTD.safetensors",
            "Irelia.safetensors",
            "KDA_Ahri_Prestige_Edition.safetensors",
            "KDA_All_Out_Ahri.safetensors",
            "Lucy_Cyberpunk.safetensors",
            "Miss_Fortune.safetensors",
            "Pool_Party_Miss_Fortune.safetensors",
            "Star_Guardian_Ahri.safetensors",
            "Winterblessed_Diana.safetensors",
            "fc2318a3-8d41-4dd7-8a8d-91410d7b4ee3.safetensors"
          ]
        ],
        "Select to add Wildcard": [["Select the Wildcard to add to the text"]]
      },
      "optional": {
        "model": ["MODEL"],
        "clip": ["CLIP"],
        "vae": ["VAE"],
        "positive": ["CONDITIONING"],
        "negative": ["CONDITIONING"],
        "bbox_detector": ["BBOX_DETECTOR"],
        "sam_model": ["SAM_MODEL"],
        "segm_detector": ["SEGM_DETECTOR"],
        "detailer_hook": ["DETAILER_HOOK"]
      }
    },
    "output": ["DETAILER_PIPE"],
    "output_is_list": [false],
    "output_name": ["detailer_pipe"],
    "name": "EditDetailerPipe",
    "display_name": "Edit DetailerPipe",
    "description": "",
    "category": "ImpactPack/Pipe",
    "output_node": false
  },
  "EditDetailerPipeSDXL": {
    "input": {
      "required": {
        "detailer_pipe": ["DETAILER_PIPE"],
        "wildcard": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": false
          }
        ],
        "Select to add LoRA": [
          [
            "Select the LoRA to add to the text",
            "Ahri.safetensors",
            "Belle-v1-01.safetensors",
            "BelleV2.safetensors",
            "Blackpink_Fusion.safetensors",
            "Broken_Covenant_Miss_Fortune.safetensors",
            "Coven_Ahri.safetensors",
            "Coven_Zyra.safetensors",
            "Firecracker_Diana.safetensors",
            "GoodHands-beta2.safetensors",
            "HOTD.safetensors",
            "Irelia.safetensors",
            "KDA_Ahri_Prestige_Edition.safetensors",
            "KDA_All_Out_Ahri.safetensors",
            "Lucy_Cyberpunk.safetensors",
            "Miss_Fortune.safetensors",
            "Pool_Party_Miss_Fortune.safetensors",
            "Star_Guardian_Ahri.safetensors",
            "Winterblessed_Diana.safetensors",
            "fc2318a3-8d41-4dd7-8a8d-91410d7b4ee3.safetensors"
          ]
        ],
        "Select to add Wildcard": [["Select the Wildcard to add to the text"]]
      },
      "optional": {
        "model": ["MODEL"],
        "clip": ["CLIP"],
        "vae": ["VAE"],
        "positive": ["CONDITIONING"],
        "negative": ["CONDITIONING"],
        "refiner_model": ["MODEL"],
        "refiner_clip": ["CLIP"],
        "refiner_positive": ["CONDITIONING"],
        "refiner_negative": ["CONDITIONING"],
        "bbox_detector": ["BBOX_DETECTOR"],
        "sam_model": ["SAM_MODEL"],
        "segm_detector": ["SEGM_DETECTOR"],
        "detailer_hook": ["DETAILER_HOOK"]
      }
    },
    "output": ["DETAILER_PIPE"],
    "output_is_list": [false],
    "output_name": ["detailer_pipe"],
    "name": "EditDetailerPipeSDXL",
    "display_name": "Edit DetailerPipe (SDXL)",
    "description": "",
    "category": "ImpactPack/Pipe",
    "output_node": false
  },
  "LatentPixelScale": {
    "input": {
      "required": {
        "samples": ["LATENT"],
        "scale_method": [["nearest-exact", "bilinear", "lanczos", "area"]],
        "scale_factor": [
          "FLOAT",
          {
            "default": 1.5,
            "min": 0.1,
            "max": 10000,
            "step": 0.1
          }
        ],
        "vae": ["VAE"],
        "use_tiled_vae": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ]
      },
      "optional": {
        "upscale_model_opt": ["UPSCALE_MODEL"]
      }
    },
    "output": ["LATENT", "IMAGE"],
    "output_is_list": [false, false],
    "output_name": ["LATENT", "IMAGE"],
    "name": "LatentPixelScale",
    "display_name": "Latent Scale (on Pixel Space)",
    "description": "",
    "category": "ImpactPack/Upscale",
    "output_node": false
  },
  "PixelKSampleUpscalerProvider": {
    "input": {
      "required": {
        "scale_method": [["nearest-exact", "bilinear", "lanczos", "area"]],
        "model": ["MODEL"],
        "vae": ["VAE"],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e19
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8,
            "min": 0,
            "max": 100
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "positive": ["CONDITIONING"],
        "negative": ["CONDITIONING"],
        "denoise": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "use_tiled_vae": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "tile_size": [
          "INT",
          {
            "default": 512,
            "min": 320,
            "max": 4096,
            "step": 64
          }
        ]
      },
      "optional": {
        "upscale_model_opt": ["UPSCALE_MODEL"],
        "pk_hook_opt": ["PK_HOOK"]
      }
    },
    "output": ["UPSCALER"],
    "output_is_list": [false],
    "output_name": ["UPSCALER"],
    "name": "PixelKSampleUpscalerProvider",
    "display_name": "PixelKSampleUpscalerProvider",
    "description": "",
    "category": "ImpactPack/Upscale",
    "output_node": false
  },
  "PixelKSampleUpscalerProviderPipe": {
    "input": {
      "required": {
        "scale_method": [["nearest-exact", "bilinear", "lanczos", "area"]],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e19
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8,
            "min": 0,
            "max": 100
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "use_tiled_vae": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "basic_pipe": ["BASIC_PIPE"],
        "tile_size": [
          "INT",
          {
            "default": 512,
            "min": 320,
            "max": 4096,
            "step": 64
          }
        ]
      },
      "optional": {
        "upscale_model_opt": ["UPSCALE_MODEL"],
        "pk_hook_opt": ["PK_HOOK"]
      }
    },
    "output": ["UPSCALER"],
    "output_is_list": [false],
    "output_name": ["UPSCALER"],
    "name": "PixelKSampleUpscalerProviderPipe",
    "display_name": "PixelKSampleUpscalerProviderPipe",
    "description": "",
    "category": "ImpactPack/Upscale",
    "output_node": false
  },
  "IterativeLatentUpscale": {
    "input": {
      "required": {
        "samples": ["LATENT"],
        "upscale_factor": [
          "FLOAT",
          {
            "default": 1.5,
            "min": 1,
            "max": 10000,
            "step": 0.1
          }
        ],
        "steps": [
          "INT",
          {
            "default": 3,
            "min": 1,
            "max": 10000,
            "step": 1
          }
        ],
        "temp_prefix": [
          "STRING",
          {
            "default": ""
          }
        ],
        "upscaler": ["UPSCALER"]
      },
      "hidden": {
        "unique_id": "UNIQUE_ID"
      }
    },
    "output": ["LATENT", "VAE"],
    "output_is_list": [false, false],
    "output_name": ["latent", "vae"],
    "name": "IterativeLatentUpscale",
    "display_name": "Iterative Upscale (Latent/on Pixel Space)",
    "description": "",
    "category": "ImpactPack/Upscale",
    "output_node": false
  },
  "IterativeImageUpscale": {
    "input": {
      "required": {
        "pixels": ["IMAGE"],
        "upscale_factor": [
          "FLOAT",
          {
            "default": 1.5,
            "min": 1,
            "max": 10000,
            "step": 0.1
          }
        ],
        "steps": [
          "INT",
          {
            "default": 3,
            "min": 1,
            "max": 10000,
            "step": 1
          }
        ],
        "temp_prefix": [
          "STRING",
          {
            "default": ""
          }
        ],
        "upscaler": ["UPSCALER"],
        "vae": ["VAE"]
      },
      "hidden": {
        "unique_id": "UNIQUE_ID"
      }
    },
    "output": ["IMAGE"],
    "output_is_list": [false],
    "output_name": ["image"],
    "name": "IterativeImageUpscale",
    "display_name": "Iterative Upscale (Image)",
    "description": "",
    "category": "ImpactPack/Upscale",
    "output_node": false
  },
  "PixelTiledKSampleUpscalerProvider": {
    "input": {
      "required": {
        "scale_method": [["nearest-exact", "bilinear", "lanczos", "area"]],
        "model": ["MODEL"],
        "vae": ["VAE"],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e19
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8,
            "min": 0,
            "max": 100
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "positive": ["CONDITIONING"],
        "negative": ["CONDITIONING"],
        "denoise": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "tile_width": [
          "INT",
          {
            "default": 512,
            "min": 320,
            "max": 8192,
            "step": 64
          }
        ],
        "tile_height": [
          "INT",
          {
            "default": 512,
            "min": 320,
            "max": 8192,
            "step": 64
          }
        ],
        "tiling_strategy": [["random", "padded", "simple"]]
      },
      "optional": {
        "upscale_model_opt": ["UPSCALE_MODEL"],
        "pk_hook_opt": ["PK_HOOK"]
      }
    },
    "output": ["UPSCALER"],
    "output_is_list": [false],
    "output_name": ["UPSCALER"],
    "name": "PixelTiledKSampleUpscalerProvider",
    "display_name": "PixelTiledKSampleUpscalerProvider",
    "description": "",
    "category": "ImpactPack/Upscale",
    "output_node": false
  },
  "PixelTiledKSampleUpscalerProviderPipe": {
    "input": {
      "required": {
        "scale_method": [["nearest-exact", "bilinear", "lanczos", "area"]],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e19
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8,
            "min": 0,
            "max": 100
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "tile_width": [
          "INT",
          {
            "default": 512,
            "min": 320,
            "max": 8192,
            "step": 64
          }
        ],
        "tile_height": [
          "INT",
          {
            "default": 512,
            "min": 320,
            "max": 8192,
            "step": 64
          }
        ],
        "tiling_strategy": [["random", "padded", "simple"]],
        "basic_pipe": ["BASIC_PIPE"]
      },
      "optional": {
        "upscale_model_opt": ["UPSCALE_MODEL"],
        "pk_hook_opt": ["PK_HOOK"]
      }
    },
    "output": ["UPSCALER"],
    "output_is_list": [false],
    "output_name": ["UPSCALER"],
    "name": "PixelTiledKSampleUpscalerProviderPipe",
    "display_name": "PixelTiledKSampleUpscalerProviderPipe",
    "description": "",
    "category": "ImpactPack/Upscale",
    "output_node": false
  },
  "TwoSamplersForMaskUpscalerProvider": {
    "input": {
      "required": {
        "scale_method": [["nearest-exact", "bilinear", "lanczos", "area"]],
        "full_sample_schedule": [
          [
            "none",
            "interleave1",
            "interleave2",
            "interleave3",
            "last1",
            "last2",
            "interleave1+last1",
            "interleave2+last1",
            "interleave3+last1"
          ]
        ],
        "use_tiled_vae": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "base_sampler": ["KSAMPLER"],
        "mask_sampler": ["KSAMPLER"],
        "mask": ["MASK"],
        "vae": ["VAE"],
        "tile_size": [
          "INT",
          {
            "default": 512,
            "min": 320,
            "max": 4096,
            "step": 64
          }
        ]
      },
      "optional": {
        "full_sampler_opt": ["KSAMPLER"],
        "upscale_model_opt": ["UPSCALE_MODEL"],
        "pk_hook_base_opt": ["PK_HOOK"],
        "pk_hook_mask_opt": ["PK_HOOK"],
        "pk_hook_full_opt": ["PK_HOOK"]
      }
    },
    "output": ["UPSCALER"],
    "output_is_list": [false],
    "output_name": ["UPSCALER"],
    "name": "TwoSamplersForMaskUpscalerProvider",
    "display_name": "TwoSamplersForMask Upscaler Provider",
    "description": "",
    "category": "ImpactPack/Upscale",
    "output_node": false
  },
  "TwoSamplersForMaskUpscalerProviderPipe": {
    "input": {
      "required": {
        "scale_method": [["nearest-exact", "bilinear", "lanczos", "area"]],
        "full_sample_schedule": [
          [
            "none",
            "interleave1",
            "interleave2",
            "interleave3",
            "last1",
            "last2",
            "interleave1+last1",
            "interleave2+last1",
            "interleave3+last1"
          ]
        ],
        "use_tiled_vae": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "base_sampler": ["KSAMPLER"],
        "mask_sampler": ["KSAMPLER"],
        "mask": ["MASK"],
        "basic_pipe": ["BASIC_PIPE"],
        "tile_size": [
          "INT",
          {
            "default": 512,
            "min": 320,
            "max": 4096,
            "step": 64
          }
        ]
      },
      "optional": {
        "full_sampler_opt": ["KSAMPLER"],
        "upscale_model_opt": ["UPSCALE_MODEL"],
        "pk_hook_base_opt": ["PK_HOOK"],
        "pk_hook_mask_opt": ["PK_HOOK"],
        "pk_hook_full_opt": ["PK_HOOK"]
      }
    },
    "output": ["UPSCALER"],
    "output_is_list": [false],
    "output_name": ["UPSCALER"],
    "name": "TwoSamplersForMaskUpscalerProviderPipe",
    "display_name": "TwoSamplersForMask Upscaler Provider (pipe)",
    "description": "",
    "category": "ImpactPack/Upscale",
    "output_node": false
  },
  "PixelKSampleHookCombine": {
    "input": {
      "required": {
        "hook1": ["PK_HOOK"],
        "hook2": ["PK_HOOK"]
      }
    },
    "output": ["PK_HOOK"],
    "output_is_list": [false],
    "output_name": ["PK_HOOK"],
    "name": "PixelKSampleHookCombine",
    "display_name": "PixelKSampleHookCombine",
    "description": "",
    "category": "ImpactPack/Upscale",
    "output_node": false
  },
  "DenoiseScheduleHookProvider": {
    "input": {
      "required": {
        "schedule_for_iteration": [["simple"]],
        "target_denoise": [
          "FLOAT",
          {
            "default": 0.2,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": ["PK_HOOK"],
    "output_is_list": [false],
    "output_name": ["PK_HOOK"],
    "name": "DenoiseScheduleHookProvider",
    "display_name": "DenoiseScheduleHookProvider",
    "description": "",
    "category": "ImpactPack/Upscale",
    "output_node": false
  },
  "StepsScheduleHookProvider": {
    "input": {
      "required": {
        "schedule_for_iteration": [["simple"]],
        "target_steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ]
      }
    },
    "output": ["PK_HOOK"],
    "output_is_list": [false],
    "output_name": ["PK_HOOK"],
    "name": "StepsScheduleHookProvider",
    "display_name": "StepsScheduleHookProvider",
    "description": "",
    "category": "ImpactPack/Upscale",
    "output_node": false
  },
  "CfgScheduleHookProvider": {
    "input": {
      "required": {
        "schedule_for_iteration": [["simple"]],
        "target_cfg": [
          "FLOAT",
          {
            "default": 3,
            "min": 0,
            "max": 100
          }
        ]
      }
    },
    "output": ["PK_HOOK"],
    "output_is_list": [false],
    "output_name": ["PK_HOOK"],
    "name": "CfgScheduleHookProvider",
    "display_name": "CfgScheduleHookProvider",
    "description": "",
    "category": "ImpactPack/Upscale",
    "output_node": false
  },
  "NoiseInjectionHookProvider": {
    "input": {
      "required": {
        "schedule_for_iteration": [["simple"]],
        "source": [["CPU", "GPU"]],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e19
          }
        ],
        "start_strength": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 200,
            "step": 0.01
          }
        ],
        "end_strength": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 200,
            "step": 0.01
          }
        ]
      }
    },
    "output": ["PK_HOOK"],
    "output_is_list": [false],
    "output_name": ["PK_HOOK"],
    "name": "NoiseInjectionHookProvider",
    "display_name": "NoiseInjectionHookProvider",
    "description": "",
    "category": "ImpactPack/Upscale",
    "output_node": false
  },
  "UnsamplerHookProvider": {
    "input": {
      "required": {
        "model": ["MODEL"],
        "steps": [
          "INT",
          {
            "default": 25,
            "min": 1,
            "max": 10000
          }
        ],
        "start_end_at_step": [
          "INT",
          {
            "default": 21,
            "min": 0,
            "max": 10000
          }
        ],
        "end_end_at_step": [
          "INT",
          {
            "default": 24,
            "min": 0,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 100
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "normalize": [["disable", "enable"]],
        "positive": ["CONDITIONING"],
        "negative": ["CONDITIONING"],
        "schedule_for_iteration": [["simple"]]
      }
    },
    "output": ["PK_HOOK"],
    "output_is_list": [false],
    "output_name": ["PK_HOOK"],
    "name": "UnsamplerHookProvider",
    "display_name": "UnsamplerHookProvider",
    "description": "",
    "category": "ImpactPack/Upscale",
    "output_node": false
  },
  "CoreMLDetailerHookProvider": {
    "input": {
      "required": {
        "mode": [["512x512", "768x768", "512x768", "768x512"]]
      }
    },
    "output": ["DETAILER_HOOK"],
    "output_is_list": [false],
    "output_name": ["DETAILER_HOOK"],
    "name": "CoreMLDetailerHookProvider",
    "display_name": "CoreMLDetailerHookProvider",
    "description": "",
    "category": "ImpactPack/Detailer",
    "output_node": false
  },
  "PreviewDetailerHookProvider": {
    "input": {
      "required": {
        "quality": [
          "INT",
          {
            "default": 95,
            "min": 20,
            "max": 100
          }
        ]
      },
      "hidden": {
        "unique_id": "UNIQUE_ID"
      }
    },
    "output": ["DETAILER_HOOK"],
    "output_is_list": [false],
    "output_name": ["DETAILER_HOOK"],
    "name": "PreviewDetailerHookProvider",
    "display_name": "PreviewDetailerHookProvider",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "DetailerHookCombine": {
    "input": {
      "required": {
        "hook1": ["DETAILER_HOOK"],
        "hook2": ["DETAILER_HOOK"]
      }
    },
    "output": ["DETAILER_HOOK"],
    "output_is_list": [false],
    "output_name": ["DETAILER_HOOK"],
    "name": "DetailerHookCombine",
    "display_name": "DetailerHookCombine",
    "description": "",
    "category": "ImpactPack/Upscale",
    "output_node": false
  },
  "NoiseInjectionDetailerHookProvider": {
    "input": {
      "required": {
        "schedule_for_cycle": [["skip_start", "from_start"]],
        "source": [["CPU", "GPU"]],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e19
          }
        ],
        "start_strength": [
          "FLOAT",
          {
            "default": 2,
            "min": 0,
            "max": 200,
            "step": 0.01
          }
        ],
        "end_strength": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 200,
            "step": 0.01
          }
        ]
      }
    },
    "output": ["DETAILER_HOOK"],
    "output_is_list": [false],
    "output_name": ["DETAILER_HOOK"],
    "name": "NoiseInjectionDetailerHookProvider",
    "display_name": "NoiseInjectionDetailerHookProvider",
    "description": "",
    "category": "ImpactPack/Detailer",
    "output_node": false
  },
  "UnsamplerDetailerHookProvider": {
    "input": {
      "required": {
        "model": ["MODEL"],
        "steps": [
          "INT",
          {
            "default": 25,
            "min": 1,
            "max": 10000
          }
        ],
        "start_end_at_step": [
          "INT",
          {
            "default": 21,
            "min": 0,
            "max": 10000
          }
        ],
        "end_end_at_step": [
          "INT",
          {
            "default": 24,
            "min": 0,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 100
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "normalize": [["disable", "enable"]],
        "positive": ["CONDITIONING"],
        "negative": ["CONDITIONING"],
        "schedule_for_cycle": [["skip_start", "from_start"]]
      }
    },
    "output": ["DETAILER_HOOK"],
    "output_is_list": [false],
    "output_name": ["DETAILER_HOOK"],
    "name": "UnsamplerDetailerHookProvider",
    "display_name": "UnsamplerDetailerHookProvider",
    "description": "",
    "category": "ImpactPack/Detailer",
    "output_node": false
  },
  "DenoiseSchedulerDetailerHookProvider": {
    "input": {
      "required": {
        "schedule_for_cycle": [["simple"]],
        "target_denoise": [
          "FLOAT",
          {
            "default": 0.3,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": ["DETAILER_HOOK"],
    "output_is_list": [false],
    "output_name": ["DETAILER_HOOK"],
    "name": "DenoiseSchedulerDetailerHookProvider",
    "display_name": "DenoiseSchedulerDetailerHookProvider",
    "description": "",
    "category": "ImpactPack/Detailer",
    "output_node": false
  },
  "SEGSOrderedFilterDetailerHookProvider": {
    "input": {
      "required": {
        "target": [["area(=w*h)", "width", "height", "x1", "y1", "x2", "y2"]],
        "order": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "descending",
            "label_off": "ascending"
          }
        ],
        "take_start": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9.223372036854776e18,
            "step": 1
          }
        ],
        "take_count": [
          "INT",
          {
            "default": 1,
            "min": 0,
            "max": 9.223372036854776e18,
            "step": 1
          }
        ]
      }
    },
    "output": ["DETAILER_HOOK"],
    "output_is_list": [false],
    "output_name": ["DETAILER_HOOK"],
    "name": "SEGSOrderedFilterDetailerHookProvider",
    "display_name": "SEGSOrderedFilterDetailerHookProvider",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "SEGSRangeFilterDetailerHookProvider": {
    "input": {
      "required": {
        "target": [
          [
            "area(=w*h)",
            "width",
            "height",
            "x1",
            "y1",
            "x2",
            "y2",
            "length_percent"
          ]
        ],
        "mode": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "inside",
            "label_off": "outside"
          }
        ],
        "min_value": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9.223372036854776e18,
            "step": 1
          }
        ],
        "max_value": [
          "INT",
          {
            "default": 67108864,
            "min": 0,
            "max": 9.223372036854776e18,
            "step": 1
          }
        ]
      }
    },
    "output": ["DETAILER_HOOK"],
    "output_is_list": [false],
    "output_name": ["DETAILER_HOOK"],
    "name": "SEGSRangeFilterDetailerHookProvider",
    "display_name": "SEGSRangeFilterDetailerHookProvider",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "SEGSLabelFilterDetailerHookProvider": {
    "input": {
      "required": {
        "segs": ["SEGS"],
        "preset": [
          [
            "all",
            "hand",
            "face",
            "mouth",
            "eyes",
            "eyebrows",
            "pupils",
            "left_eyebrow",
            "left_eye",
            "left_pupil",
            "right_eyebrow",
            "right_eye",
            "right_pupil",
            "short_sleeved_shirt",
            "long_sleeved_shirt",
            "short_sleeved_outwear",
            "long_sleeved_outwear",
            "vest",
            "sling",
            "shorts",
            "trousers",
            "skirt",
            "short_sleeved_dress",
            "long_sleeved_dress",
            "vest_dress",
            "sling_dress",
            "person",
            "bicycle",
            "car",
            "motorcycle",
            "airplane",
            "bus",
            "train",
            "truck",
            "boat",
            "traffic light",
            "fire hydrant",
            "stop sign",
            "parking meter",
            "bench",
            "bird",
            "cat",
            "dog",
            "horse",
            "sheep",
            "cow",
            "elephant",
            "bear",
            "zebra",
            "giraffe",
            "backpack",
            "umbrella",
            "handbag",
            "tie",
            "suitcase",
            "frisbee",
            "skis",
            "snowboard",
            "sports ball",
            "kite",
            "baseball bat",
            "baseball glove",
            "skateboard",
            "surfboard",
            "tennis racket",
            "bottle",
            "wine glass",
            "cup",
            "fork",
            "knife",
            "spoon",
            "bowl",
            "banana",
            "apple",
            "sandwich",
            "orange",
            "broccoli",
            "carrot",
            "hot dog",
            "pizza",
            "donut",
            "cake",
            "chair",
            "couch",
            "potted plant",
            "bed",
            "dining table",
            "toilet",
            "tv",
            "laptop",
            "mouse",
            "remote",
            "keyboard",
            "cell phone",
            "microwave",
            "oven",
            "toaster",
            "sink",
            "refrigerator",
            "book",
            "clock",
            "vase",
            "scissors",
            "teddy bear",
            "hair drier",
            "toothbrush"
          ]
        ],
        "labels": [
          "STRING",
          {
            "multiline": true,
            "placeholder": "List the types of segments to be allowed, separated by commas"
          }
        ]
      }
    },
    "output": ["DETAILER_HOOK"],
    "output_is_list": [false],
    "output_name": ["DETAILER_HOOK"],
    "name": "SEGSLabelFilterDetailerHookProvider",
    "display_name": "SEGSLabelFilterDetailerHookProvider",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "BitwiseAndMask": {
    "input": {
      "required": {
        "mask1": ["MASK"],
        "mask2": ["MASK"]
      }
    },
    "output": ["MASK"],
    "output_is_list": [false],
    "output_name": ["MASK"],
    "name": "BitwiseAndMask",
    "display_name": "Bitwise(MASK & MASK)",
    "description": "",
    "category": "ImpactPack/Operation",
    "output_node": false
  },
  "SubtractMask": {
    "input": {
      "required": {
        "mask1": ["MASK"],
        "mask2": ["MASK"]
      }
    },
    "output": ["MASK"],
    "output_is_list": [false],
    "output_name": ["MASK"],
    "name": "SubtractMask",
    "display_name": "Bitwise(MASK - MASK)",
    "description": "",
    "category": "ImpactPack/Operation",
    "output_node": false
  },
  "AddMask": {
    "input": {
      "required": {
        "mask1": ["MASK"],
        "mask2": ["MASK"]
      }
    },
    "output": ["MASK"],
    "output_is_list": [false],
    "output_name": ["MASK"],
    "name": "AddMask",
    "display_name": "Bitwise(MASK + MASK)",
    "description": "",
    "category": "ImpactPack/Operation",
    "output_node": false
  },
  "ImpactSegsAndMask": {
    "input": {
      "required": {
        "segs": ["SEGS"],
        "mask": ["MASK"]
      }
    },
    "output": ["SEGS"],
    "output_is_list": [false],
    "output_name": ["SEGS"],
    "name": "ImpactSegsAndMask",
    "display_name": "Bitwise(SEGS & MASK)",
    "description": "",
    "category": "ImpactPack/Operation",
    "output_node": false
  },
  "ImpactSegsAndMaskForEach": {
    "input": {
      "required": {
        "segs": ["SEGS"],
        "masks": ["MASK"]
      }
    },
    "output": ["SEGS"],
    "output_is_list": [false],
    "output_name": ["SEGS"],
    "name": "ImpactSegsAndMaskForEach",
    "display_name": "Bitwise(SEGS & MASKS ForEach)",
    "description": "",
    "category": "ImpactPack/Operation",
    "output_node": false
  },
  "EmptySegs": {
    "input": {
      "required": {}
    },
    "output": ["SEGS"],
    "output_is_list": [false],
    "output_name": ["SEGS"],
    "name": "EmptySegs",
    "display_name": "EmptySegs",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "MediaPipeFaceMeshToSEGS": {
    "input": {
      "required": {
        "image": ["IMAGE"],
        "crop_factor": [
          "FLOAT",
          {
            "default": 3,
            "min": 1,
            "max": 100,
            "step": 0.1
          }
        ],
        "bbox_fill": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "crop_min_size": [
          "INT",
          {
            "min": 10,
            "max": 8192,
            "step": 1,
            "default": 50
          }
        ],
        "drop_size": [
          "INT",
          {
            "min": 1,
            "max": 8192,
            "step": 1,
            "default": 1
          }
        ],
        "dilation": [
          "INT",
          {
            "default": 0,
            "min": -512,
            "max": 512,
            "step": 1
          }
        ],
        "face": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "Enabled",
            "label_off": "Disabled"
          }
        ],
        "mouth": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "Enabled",
            "label_off": "Disabled"
          }
        ],
        "left_eyebrow": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "Enabled",
            "label_off": "Disabled"
          }
        ],
        "left_eye": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "Enabled",
            "label_off": "Disabled"
          }
        ],
        "left_pupil": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "Enabled",
            "label_off": "Disabled"
          }
        ],
        "right_eyebrow": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "Enabled",
            "label_off": "Disabled"
          }
        ],
        "right_eye": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "Enabled",
            "label_off": "Disabled"
          }
        ],
        "right_pupil": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "Enabled",
            "label_off": "Disabled"
          }
        ]
      }
    },
    "output": ["SEGS"],
    "output_is_list": [false],
    "output_name": ["SEGS"],
    "name": "MediaPipeFaceMeshToSEGS",
    "display_name": "MediaPipe FaceMesh to SEGS",
    "description": "",
    "category": "ImpactPack/Operation",
    "output_node": false
  },
  "MaskToSEGS": {
    "input": {
      "required": {
        "mask": ["MASK"],
        "combined": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "True",
            "label_off": "False"
          }
        ],
        "crop_factor": [
          "FLOAT",
          {
            "default": 3,
            "min": 1,
            "max": 100,
            "step": 0.1
          }
        ],
        "bbox_fill": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "drop_size": [
          "INT",
          {
            "min": 1,
            "max": 8192,
            "step": 1,
            "default": 10
          }
        ],
        "contour_fill": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ]
      }
    },
    "output": ["SEGS"],
    "output_is_list": [false],
    "output_name": ["SEGS"],
    "name": "MaskToSEGS",
    "display_name": "MASK to SEGS",
    "description": "",
    "category": "ImpactPack/Operation",
    "output_node": false
  },
  "MaskToSEGS_for_AnimateDiff": {
    "input": {
      "required": {
        "mask": ["MASK"],
        "combined": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "True",
            "label_off": "False"
          }
        ],
        "crop_factor": [
          "FLOAT",
          {
            "default": 3,
            "min": 1,
            "max": 100,
            "step": 0.1
          }
        ],
        "bbox_fill": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "drop_size": [
          "INT",
          {
            "min": 1,
            "max": 8192,
            "step": 1,
            "default": 10
          }
        ],
        "contour_fill": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ]
      }
    },
    "output": ["SEGS"],
    "output_is_list": [false],
    "output_name": ["SEGS"],
    "name": "MaskToSEGS_for_AnimateDiff",
    "display_name": "MASK to SEGS for AnimateDiff",
    "description": "",
    "category": "ImpactPack/Operation",
    "output_node": false
  },
  "ToBinaryMask": {
    "input": {
      "required": {
        "mask": ["MASK"],
        "threshold": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 255
          }
        ]
      }
    },
    "output": ["MASK"],
    "output_is_list": [false],
    "output_name": ["MASK"],
    "name": "ToBinaryMask",
    "display_name": "ToBinaryMask",
    "description": "",
    "category": "ImpactPack/Operation",
    "output_node": false
  },
  "MasksToMaskList": {
    "input": {
      "required": {
        "masks": ["MASK"]
      }
    },
    "output": ["MASK"],
    "output_is_list": [true],
    "output_name": ["MASK"],
    "name": "MasksToMaskList",
    "display_name": "Masks to Mask List",
    "description": "",
    "category": "ImpactPack/Operation",
    "output_node": false
  },
  "MaskListToMaskBatch": {
    "input": {
      "required": {
        "mask": ["MASK"]
      }
    },
    "output": ["MASK"],
    "output_is_list": [false],
    "output_name": ["MASK"],
    "name": "MaskListToMaskBatch",
    "display_name": "Mask List to Masks",
    "description": "",
    "category": "ImpactPack/Operation",
    "output_node": false
  },
  "ImageListToImageBatch": {
    "input": {
      "required": {
        "images": ["IMAGE"]
      }
    },
    "output": ["IMAGE"],
    "output_is_list": [false],
    "output_name": ["IMAGE"],
    "name": "ImageListToImageBatch",
    "display_name": "Image List to Image Batch",
    "description": "",
    "category": "ImpactPack/Operation",
    "output_node": false
  },
  "SetDefaultImageForSEGS": {
    "input": {
      "required": {
        "segs": ["SEGS"],
        "image": ["IMAGE"],
        "override": [
          "BOOLEAN",
          {
            "default": true
          }
        ]
      }
    },
    "output": ["SEGS"],
    "output_is_list": [false],
    "output_name": ["SEGS"],
    "name": "SetDefaultImageForSEGS",
    "display_name": "Set Default Image for SEGS",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "RemoveImageFromSEGS": {
    "input": {
      "required": {
        "segs": ["SEGS"]
      }
    },
    "output": ["SEGS"],
    "output_is_list": [false],
    "output_name": ["SEGS"],
    "name": "RemoveImageFromSEGS",
    "display_name": "Remove Image from SEGS",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "BboxDetectorSEGS": {
    "input": {
      "required": {
        "bbox_detector": ["BBOX_DETECTOR"],
        "image": ["IMAGE"],
        "threshold": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "dilation": [
          "INT",
          {
            "default": 10,
            "min": -512,
            "max": 512,
            "step": 1
          }
        ],
        "crop_factor": [
          "FLOAT",
          {
            "default": 3,
            "min": 1,
            "max": 100,
            "step": 0.1
          }
        ],
        "drop_size": [
          "INT",
          {
            "min": 1,
            "max": 8192,
            "step": 1,
            "default": 10
          }
        ],
        "labels": [
          "STRING",
          {
            "multiline": true,
            "default": "all",
            "placeholder": "List the types of segments to be allowed, separated by commas"
          }
        ]
      },
      "optional": {
        "detailer_hook": ["DETAILER_HOOK"]
      }
    },
    "output": ["SEGS"],
    "output_is_list": [false],
    "output_name": ["SEGS"],
    "name": "BboxDetectorSEGS",
    "display_name": "BBOX Detector (SEGS)",
    "description": "",
    "category": "ImpactPack/Detector",
    "output_node": false
  },
  "SegmDetectorSEGS": {
    "input": {
      "required": {
        "segm_detector": ["SEGM_DETECTOR"],
        "image": ["IMAGE"],
        "threshold": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "dilation": [
          "INT",
          {
            "default": 10,
            "min": -512,
            "max": 512,
            "step": 1
          }
        ],
        "crop_factor": [
          "FLOAT",
          {
            "default": 3,
            "min": 1,
            "max": 100,
            "step": 0.1
          }
        ],
        "drop_size": [
          "INT",
          {
            "min": 1,
            "max": 8192,
            "step": 1,
            "default": 10
          }
        ],
        "labels": [
          "STRING",
          {
            "multiline": true,
            "default": "all",
            "placeholder": "List the types of segments to be allowed, separated by commas"
          }
        ]
      },
      "optional": {
        "detailer_hook": ["DETAILER_HOOK"]
      }
    },
    "output": ["SEGS"],
    "output_is_list": [false],
    "output_name": ["SEGS"],
    "name": "SegmDetectorSEGS",
    "display_name": "SEGM Detector (SEGS)",
    "description": "",
    "category": "ImpactPack/Detector",
    "output_node": false
  },
  "ONNXDetectorSEGS": {
    "input": {
      "required": {
        "bbox_detector": ["BBOX_DETECTOR"],
        "image": ["IMAGE"],
        "threshold": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "dilation": [
          "INT",
          {
            "default": 10,
            "min": -512,
            "max": 512,
            "step": 1
          }
        ],
        "crop_factor": [
          "FLOAT",
          {
            "default": 3,
            "min": 1,
            "max": 100,
            "step": 0.1
          }
        ],
        "drop_size": [
          "INT",
          {
            "min": 1,
            "max": 8192,
            "step": 1,
            "default": 10
          }
        ],
        "labels": [
          "STRING",
          {
            "multiline": true,
            "default": "all",
            "placeholder": "List the types of segments to be allowed, separated by commas"
          }
        ]
      },
      "optional": {
        "detailer_hook": ["DETAILER_HOOK"]
      }
    },
    "output": ["SEGS"],
    "output_is_list": [false],
    "output_name": ["SEGS"],
    "name": "ONNXDetectorSEGS",
    "display_name": "ONNX Detector (SEGS/legacy) - use BBOXDetector",
    "description": "",
    "category": "ImpactPack/Detector",
    "output_node": false
  },
  "ImpactSimpleDetectorSEGS_for_AD": {
    "input": {
      "required": {
        "bbox_detector": ["BBOX_DETECTOR"],
        "image_frames": ["IMAGE"],
        "bbox_threshold": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "bbox_dilation": [
          "INT",
          {
            "default": 0,
            "min": -255,
            "max": 255,
            "step": 1
          }
        ],
        "crop_factor": [
          "FLOAT",
          {
            "default": 3,
            "min": 1,
            "max": 100,
            "step": 0.1
          }
        ],
        "drop_size": [
          "INT",
          {
            "min": 1,
            "max": 8192,
            "step": 1,
            "default": 10
          }
        ],
        "sub_threshold": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "sub_dilation": [
          "INT",
          {
            "default": 0,
            "min": -255,
            "max": 255,
            "step": 1
          }
        ],
        "sub_bbox_expansion": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1000,
            "step": 1
          }
        ],
        "sam_mask_hint_threshold": [
          "FLOAT",
          {
            "default": 0.7,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      },
      "optional": {
        "masking_mode": [
          ["Pivot SEGS", "Combine neighboring frames", "Don't combine"]
        ],
        "segs_pivot": [["Combined mask", "1st frame mask"]],
        "sam_model_opt": ["SAM_MODEL"],
        "segm_detector_opt": ["SEGM_DETECTOR"]
      }
    },
    "output": ["SEGS"],
    "output_is_list": [false],
    "output_name": ["SEGS"],
    "name": "ImpactSimpleDetectorSEGS_for_AD",
    "display_name": "Simple Detector for AnimateDiff (SEGS)",
    "description": "",
    "category": "ImpactPack/Detector",
    "output_node": false
  },
  "ImpactSimpleDetectorSEGS": {
    "input": {
      "required": {
        "bbox_detector": ["BBOX_DETECTOR"],
        "image": ["IMAGE"],
        "bbox_threshold": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "bbox_dilation": [
          "INT",
          {
            "default": 0,
            "min": -512,
            "max": 512,
            "step": 1
          }
        ],
        "crop_factor": [
          "FLOAT",
          {
            "default": 3,
            "min": 1,
            "max": 100,
            "step": 0.1
          }
        ],
        "drop_size": [
          "INT",
          {
            "min": 1,
            "max": 8192,
            "step": 1,
            "default": 10
          }
        ],
        "sub_threshold": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "sub_dilation": [
          "INT",
          {
            "default": 0,
            "min": -512,
            "max": 512,
            "step": 1
          }
        ],
        "sub_bbox_expansion": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1000,
            "step": 1
          }
        ],
        "sam_mask_hint_threshold": [
          "FLOAT",
          {
            "default": 0.7,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      },
      "optional": {
        "post_dilation": [
          "INT",
          {
            "default": 0,
            "min": -512,
            "max": 512,
            "step": 1
          }
        ],
        "sam_model_opt": ["SAM_MODEL"],
        "segm_detector_opt": ["SEGM_DETECTOR"]
      }
    },
    "output": ["SEGS"],
    "output_is_list": [false],
    "output_name": ["SEGS"],
    "name": "ImpactSimpleDetectorSEGS",
    "display_name": "Simple Detector (SEGS)",
    "description": "",
    "category": "ImpactPack/Detector",
    "output_node": false
  },
  "ImpactSimpleDetectorSEGSPipe": {
    "input": {
      "required": {
        "detailer_pipe": ["DETAILER_PIPE"],
        "image": ["IMAGE"],
        "bbox_threshold": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "bbox_dilation": [
          "INT",
          {
            "default": 0,
            "min": -512,
            "max": 512,
            "step": 1
          }
        ],
        "crop_factor": [
          "FLOAT",
          {
            "default": 3,
            "min": 1,
            "max": 100,
            "step": 0.1
          }
        ],
        "drop_size": [
          "INT",
          {
            "min": 1,
            "max": 8192,
            "step": 1,
            "default": 10
          }
        ],
        "sub_threshold": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "sub_dilation": [
          "INT",
          {
            "default": 0,
            "min": -512,
            "max": 512,
            "step": 1
          }
        ],
        "sub_bbox_expansion": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1000,
            "step": 1
          }
        ],
        "sam_mask_hint_threshold": [
          "FLOAT",
          {
            "default": 0.7,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      },
      "optional": {
        "post_dilation": [
          "INT",
          {
            "default": 0,
            "min": -512,
            "max": 512,
            "step": 1
          }
        ]
      }
    },
    "output": ["SEGS"],
    "output_is_list": [false],
    "output_name": ["SEGS"],
    "name": "ImpactSimpleDetectorSEGSPipe",
    "display_name": "Simple Detector (SEGS/pipe)",
    "description": "",
    "category": "ImpactPack/Detector",
    "output_node": false
  },
  "ImpactControlNetApplySEGS": {
    "input": {
      "required": {
        "segs": ["SEGS"],
        "control_net": ["CONTROL_NET"],
        "strength": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ]
      },
      "optional": {
        "segs_preprocessor": ["SEGS_PREPROCESSOR"],
        "control_image": ["IMAGE"]
      }
    },
    "output": ["SEGS"],
    "output_is_list": [false],
    "output_name": ["SEGS"],
    "name": "ImpactControlNetApplySEGS",
    "display_name": "ControlNetApply (SEGS)",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ImpactControlNetApplyAdvancedSEGS": {
    "input": {
      "required": {
        "segs": ["SEGS"],
        "control_net": ["CONTROL_NET"],
        "strength": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "start_percent": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "end_percent": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ]
      },
      "optional": {
        "segs_preprocessor": ["SEGS_PREPROCESSOR"],
        "control_image": ["IMAGE"]
      }
    },
    "output": ["SEGS"],
    "output_is_list": [false],
    "output_name": ["SEGS"],
    "name": "ImpactControlNetApplyAdvancedSEGS",
    "display_name": "ControlNetApplyAdvanced (SEGS)",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ImpactControlNetClearSEGS": {
    "input": {
      "required": {
        "segs": ["SEGS"]
      }
    },
    "output": ["SEGS"],
    "output_is_list": [false],
    "output_name": ["SEGS"],
    "name": "ImpactControlNetClearSEGS",
    "display_name": "ImpactControlNetClearSEGS",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ImpactDecomposeSEGS": {
    "input": {
      "required": {
        "segs": ["SEGS"]
      }
    },
    "output": ["SEGS_HEADER", "SEG_ELT"],
    "output_is_list": [false, true],
    "output_name": ["SEGS_HEADER", "SEG_ELT"],
    "name": "ImpactDecomposeSEGS",
    "display_name": "Decompose (SEGS)",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ImpactAssembleSEGS": {
    "input": {
      "required": {
        "seg_header": ["SEGS_HEADER"],
        "seg_elt": ["SEG_ELT"]
      }
    },
    "output": ["SEGS"],
    "output_is_list": [false],
    "output_name": ["SEGS"],
    "name": "ImpactAssembleSEGS",
    "display_name": "Assemble (SEGS)",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ImpactFrom_SEG_ELT": {
    "input": {
      "required": {
        "seg_elt": ["SEG_ELT"]
      }
    },
    "output": [
      "SEG_ELT",
      "IMAGE",
      "MASK",
      "SEG_ELT_crop_region",
      "SEG_ELT_bbox",
      "SEG_ELT_control_net_wrapper",
      "FLOAT",
      "STRING"
    ],
    "output_is_list": [false, false, false, false, false, false, false, false],
    "output_name": [
      "seg_elt",
      "cropped_image",
      "cropped_mask",
      "crop_region",
      "bbox",
      "control_net_wrapper",
      "confidence",
      "label"
    ],
    "name": "ImpactFrom_SEG_ELT",
    "display_name": "From SEG_ELT",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ImpactEdit_SEG_ELT": {
    "input": {
      "required": {
        "seg_elt": ["SEG_ELT"]
      },
      "optional": {
        "cropped_image_opt": ["IMAGE"],
        "cropped_mask_opt": ["MASK"],
        "crop_region_opt": ["SEG_ELT_crop_region"],
        "bbox_opt": ["SEG_ELT_bbox"],
        "control_net_wrapper_opt": ["SEG_ELT_control_net_wrapper"],
        "confidence_opt": [
          "FLOAT",
          {
            "min": 0,
            "max": 1,
            "step": 0.1,
            "forceInput": true
          }
        ],
        "label_opt": [
          "STRING",
          {
            "multiline": false,
            "forceInput": true
          }
        ]
      }
    },
    "output": ["SEG_ELT"],
    "output_is_list": [false],
    "output_name": ["SEG_ELT"],
    "name": "ImpactEdit_SEG_ELT",
    "display_name": "Edit SEG_ELT",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ImpactDilate_Mask_SEG_ELT": {
    "input": {
      "required": {
        "seg_elt": ["SEG_ELT"],
        "dilation": [
          "INT",
          {
            "default": 10,
            "min": -512,
            "max": 512,
            "step": 1
          }
        ]
      }
    },
    "output": ["SEG_ELT"],
    "output_is_list": [false],
    "output_name": ["SEG_ELT"],
    "name": "ImpactDilate_Mask_SEG_ELT",
    "display_name": "Dilate Mask (SEG_ELT)",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ImpactDilateMask": {
    "input": {
      "required": {
        "mask": ["MASK"],
        "dilation": [
          "INT",
          {
            "default": 10,
            "min": -512,
            "max": 512,
            "step": 1
          }
        ]
      }
    },
    "output": ["MASK"],
    "output_is_list": [false],
    "output_name": ["MASK"],
    "name": "ImpactDilateMask",
    "display_name": "Dilate Mask",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ImpactGaussianBlurMask": {
    "input": {
      "required": {
        "mask": ["MASK"],
        "kernel_size": [
          "INT",
          {
            "default": 10,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ],
        "sigma": [
          "FLOAT",
          {
            "default": 10,
            "min": 0.1,
            "max": 100,
            "step": 0.1
          }
        ]
      }
    },
    "output": ["MASK"],
    "output_is_list": [false],
    "output_name": ["MASK"],
    "name": "ImpactGaussianBlurMask",
    "display_name": "Gaussian Blur Mask",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ImpactDilateMaskInSEGS": {
    "input": {
      "required": {
        "segs": ["SEGS"],
        "dilation": [
          "INT",
          {
            "default": 10,
            "min": -512,
            "max": 512,
            "step": 1
          }
        ]
      }
    },
    "output": ["SEGS"],
    "output_is_list": [false],
    "output_name": ["SEGS"],
    "name": "ImpactDilateMaskInSEGS",
    "display_name": "Dilate Mask (SEGS)",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ImpactGaussianBlurMaskInSEGS": {
    "input": {
      "required": {
        "segs": ["SEGS"],
        "kernel_size": [
          "INT",
          {
            "default": 10,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ],
        "sigma": [
          "FLOAT",
          {
            "default": 10,
            "min": 0.1,
            "max": 100,
            "step": 0.1
          }
        ]
      }
    },
    "output": ["SEGS"],
    "output_is_list": [false],
    "output_name": ["SEGS"],
    "name": "ImpactGaussianBlurMaskInSEGS",
    "display_name": "Gaussian Blur Mask (SEGS)",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ImpactScaleBy_BBOX_SEG_ELT": {
    "input": {
      "required": {
        "seg": ["SEG_ELT"],
        "scale_by": [
          "FLOAT",
          {
            "default": 1,
            "min": 0.01,
            "max": 8,
            "step": 0.01
          }
        ]
      }
    },
    "output": ["SEG_ELT"],
    "output_is_list": [false],
    "output_name": ["SEG_ELT"],
    "name": "ImpactScaleBy_BBOX_SEG_ELT",
    "display_name": "ScaleBy BBOX (SEG_ELT)",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "BboxDetectorCombined_v2": {
    "input": {
      "required": {
        "bbox_detector": ["BBOX_DETECTOR"],
        "image": ["IMAGE"],
        "threshold": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "dilation": [
          "INT",
          {
            "default": 4,
            "min": -512,
            "max": 512,
            "step": 1
          }
        ]
      }
    },
    "output": ["MASK"],
    "output_is_list": [false],
    "output_name": ["MASK"],
    "name": "BboxDetectorCombined_v2",
    "display_name": "BBOX Detector (combined)",
    "description": "",
    "category": "ImpactPack/Detector",
    "output_node": false
  },
  "SegmDetectorCombined_v2": {
    "input": {
      "required": {
        "segm_detector": ["SEGM_DETECTOR"],
        "image": ["IMAGE"],
        "threshold": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "dilation": [
          "INT",
          {
            "default": 0,
            "min": -512,
            "max": 512,
            "step": 1
          }
        ]
      }
    },
    "output": ["MASK"],
    "output_is_list": [false],
    "output_name": ["MASK"],
    "name": "SegmDetectorCombined_v2",
    "display_name": "SEGM Detector (combined)",
    "description": "",
    "category": "ImpactPack/Detector",
    "output_node": false
  },
  "SegsToCombinedMask": {
    "input": {
      "required": {
        "segs": ["SEGS"]
      }
    },
    "output": ["MASK"],
    "output_is_list": [false],
    "output_name": ["MASK"],
    "name": "SegsToCombinedMask",
    "display_name": "SEGS to MASK (combined)",
    "description": "",
    "category": "ImpactPack/Operation",
    "output_node": false
  },
  "KSamplerProvider": {
    "input": {
      "required": {
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e19
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8,
            "min": 0,
            "max": 100
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "basic_pipe": ["BASIC_PIPE"]
      }
    },
    "output": ["KSAMPLER"],
    "output_is_list": [false],
    "output_name": ["KSAMPLER"],
    "name": "KSamplerProvider",
    "display_name": "KSamplerProvider",
    "description": "",
    "category": "ImpactPack/Sampler",
    "output_node": false
  },
  "TwoSamplersForMask": {
    "input": {
      "required": {
        "latent_image": ["LATENT"],
        "base_sampler": ["KSAMPLER"],
        "mask_sampler": ["KSAMPLER"],
        "mask": ["MASK"]
      }
    },
    "output": ["LATENT"],
    "output_is_list": [false],
    "output_name": ["LATENT"],
    "name": "TwoSamplersForMask",
    "display_name": "TwoSamplersForMask",
    "description": "",
    "category": "ImpactPack/Sampler",
    "output_node": false
  },
  "TiledKSamplerProvider": {
    "input": {
      "required": {
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e19
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8,
            "min": 0,
            "max": 100
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "tile_width": [
          "INT",
          {
            "default": 512,
            "min": 320,
            "max": 8192,
            "step": 64
          }
        ],
        "tile_height": [
          "INT",
          {
            "default": 512,
            "min": 320,
            "max": 8192,
            "step": 64
          }
        ],
        "tiling_strategy": [["random", "padded", "simple"]],
        "basic_pipe": ["BASIC_PIPE"]
      }
    },
    "output": ["KSAMPLER"],
    "output_is_list": [false],
    "output_name": ["KSAMPLER"],
    "name": "TiledKSamplerProvider",
    "display_name": "TiledKSamplerProvider",
    "description": "",
    "category": "ImpactPack/Sampler",
    "output_node": false
  },
  "KSamplerAdvancedProvider": {
    "input": {
      "required": {
        "cfg": [
          "FLOAT",
          {
            "default": 8,
            "min": 0,
            "max": 100
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "sigma_factor": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "basic_pipe": ["BASIC_PIPE"]
      },
      "optional": {
        "sampler_opt": ["SAMPLER"]
      }
    },
    "output": ["KSAMPLER_ADVANCED"],
    "output_is_list": [false],
    "output_name": ["KSAMPLER_ADVANCED"],
    "name": "KSamplerAdvancedProvider",
    "display_name": "KSamplerAdvancedProvider",
    "description": "",
    "category": "ImpactPack/Sampler",
    "output_node": false
  },
  "TwoAdvancedSamplersForMask": {
    "input": {
      "required": {
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e19
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "samples": ["LATENT"],
        "base_sampler": ["KSAMPLER_ADVANCED"],
        "mask_sampler": ["KSAMPLER_ADVANCED"],
        "mask": ["MASK"],
        "overlap_factor": [
          "INT",
          {
            "default": 10,
            "min": 0,
            "max": 10000
          }
        ]
      }
    },
    "output": ["LATENT"],
    "output_is_list": [false],
    "output_name": ["LATENT"],
    "name": "TwoAdvancedSamplersForMask",
    "display_name": "TwoAdvancedSamplersForMask",
    "description": "",
    "category": "ImpactPack/Sampler",
    "output_node": false
  },
  "PreviewBridge": {
    "input": {
      "required": {
        "images": ["IMAGE"],
        "image": [
          "STRING",
          {
            "default": ""
          }
        ]
      },
      "hidden": {
        "unique_id": "UNIQUE_ID"
      }
    },
    "output": ["IMAGE", "MASK"],
    "output_is_list": [false, false],
    "output_name": ["IMAGE", "MASK"],
    "name": "PreviewBridge",
    "display_name": "Preview Bridge (Image)",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": true
  },
  "PreviewBridgeLatent": {
    "input": {
      "required": {
        "latent": ["LATENT"],
        "image": [
          "STRING",
          {
            "default": ""
          }
        ],
        "preview_method": [
          ["Latent2RGB-SDXL", "Latent2RGB-SD15", "TAESDXL", "TAESD15"]
        ]
      },
      "optional": {
        "vae_opt": ["VAE"]
      },
      "hidden": {
        "unique_id": "UNIQUE_ID"
      }
    },
    "output": ["LATENT", "MASK"],
    "output_is_list": [false, false],
    "output_name": ["LATENT", "MASK"],
    "name": "PreviewBridgeLatent",
    "display_name": "Preview Bridge (Latent)",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": true
  },
  "ImageSender": {
    "input": {
      "required": {
        "images": ["IMAGE"],
        "filename_prefix": [
          "STRING",
          {
            "default": "ImgSender"
          }
        ],
        "link_id": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9.223372036854776e18,
            "step": 1
          }
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO"
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "ImageSender",
    "display_name": "Image Sender",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": true
  },
  "ImageReceiver": {
    "input": {
      "required": {
        "image": [["example.png"]],
        "link_id": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9.223372036854776e18,
            "step": 1
          }
        ],
        "save_to_workflow": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "image_data": [
          "STRING",
          {
            "multiline": false
          }
        ],
        "trigger_always": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enable",
            "label_off": "disable"
          }
        ]
      }
    },
    "output": ["IMAGE", "MASK"],
    "output_is_list": [false, false],
    "output_name": ["IMAGE", "MASK"],
    "name": "ImageReceiver",
    "display_name": "Image Receiver",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "LatentSender": {
    "input": {
      "required": {
        "samples": ["LATENT"],
        "filename_prefix": [
          "STRING",
          {
            "default": "latents/LatentSender"
          }
        ],
        "link_id": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9.223372036854776e18,
            "step": 1
          }
        ],
        "preview_method": [
          ["Latent2RGB-SDXL", "Latent2RGB-SD15", "TAESDXL", "TAESD15"]
        ]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO"
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "LatentSender",
    "display_name": "LatentSender",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": true
  },
  "LatentReceiver": {
    "input": {
      "required": {
        "latent": [[]],
        "link_id": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9.223372036854776e18,
            "step": 1
          }
        ],
        "trigger_always": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enable",
            "label_off": "disable"
          }
        ]
      }
    },
    "output": ["LATENT"],
    "output_is_list": [false],
    "output_name": ["LATENT"],
    "name": "LatentReceiver",
    "display_name": "LatentReceiver",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ImageMaskSwitch": {
    "input": {
      "required": {
        "select": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 4,
            "step": 1
          }
        ],
        "images1": ["IMAGE"]
      },
      "optional": {
        "mask1_opt": ["MASK"],
        "images2_opt": ["IMAGE"],
        "mask2_opt": ["MASK"],
        "images3_opt": ["IMAGE"],
        "mask3_opt": ["MASK"],
        "images4_opt": ["IMAGE"],
        "mask4_opt": ["MASK"]
      }
    },
    "output": ["IMAGE", "MASK"],
    "output_is_list": [false, false],
    "output_name": ["IMAGE", "MASK"],
    "name": "ImageMaskSwitch",
    "display_name": "Switch (images, mask)",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": true
  },
  "LatentSwitch": {
    "input": {
      "required": {
        "select": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 999999,
            "step": 1
          }
        ],
        "sel_mode": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "select_on_prompt",
            "label_off": "select_on_execution",
            "forceInput": false
          }
        ]
      },
      "optional": {
        "input1": ["*"]
      },
      "hidden": {
        "unique_id": "UNIQUE_ID",
        "extra_pnginfo": "EXTRA_PNGINFO"
      }
    },
    "output": ["*", "STRING", "INT"],
    "output_is_list": [false, false, false],
    "output_name": ["selected_value", "selected_label", "selected_index"],
    "name": "LatentSwitch",
    "display_name": "Switch (latent/legacy)",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "SEGSSwitch": {
    "input": {
      "required": {
        "select": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 999999,
            "step": 1
          }
        ],
        "sel_mode": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "select_on_prompt",
            "label_off": "select_on_execution",
            "forceInput": false
          }
        ]
      },
      "optional": {
        "input1": ["*"]
      },
      "hidden": {
        "unique_id": "UNIQUE_ID",
        "extra_pnginfo": "EXTRA_PNGINFO"
      }
    },
    "output": ["*", "STRING", "INT"],
    "output_is_list": [false, false, false],
    "output_name": ["selected_value", "selected_label", "selected_index"],
    "name": "SEGSSwitch",
    "display_name": "Switch (SEGS/legacy)",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ImpactSwitch": {
    "input": {
      "required": {
        "select": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 999999,
            "step": 1
          }
        ],
        "sel_mode": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "select_on_prompt",
            "label_off": "select_on_execution",
            "forceInput": false
          }
        ]
      },
      "optional": {
        "input1": ["*"]
      },
      "hidden": {
        "unique_id": "UNIQUE_ID",
        "extra_pnginfo": "EXTRA_PNGINFO"
      }
    },
    "output": ["*", "STRING", "INT"],
    "output_is_list": [false, false, false],
    "output_name": ["selected_value", "selected_label", "selected_index"],
    "name": "ImpactSwitch",
    "display_name": "Switch (Any)",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ImpactInversedSwitch": {
    "input": {
      "required": {
        "select": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 999999,
            "step": 1
          }
        ],
        "input": ["*"]
      },
      "hidden": {
        "unique_id": "UNIQUE_ID"
      }
    },
    "output": ["*"],
    "output_is_list": [false],
    "output_name": ["*"],
    "name": "ImpactInversedSwitch",
    "display_name": "Inversed Switch (Any)",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ImpactWildcardProcessor": {
    "input": {
      "required": {
        "wildcard_text": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": false
          }
        ],
        "populated_text": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": false
          }
        ],
        "mode": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "Populate",
            "label_off": "Fixed"
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e19
          }
        ],
        "Select to add Wildcard": [["Select the Wildcard to add to the text"]]
      }
    },
    "output": ["STRING"],
    "output_is_list": [false],
    "output_name": ["STRING"],
    "name": "ImpactWildcardProcessor",
    "display_name": "ImpactWildcardProcessor",
    "description": "",
    "category": "ImpactPack/Prompt",
    "output_node": false
  },
  "ImpactWildcardEncode": {
    "input": {
      "required": {
        "model": ["MODEL"],
        "clip": ["CLIP"],
        "wildcard_text": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": false
          }
        ],
        "populated_text": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": false
          }
        ],
        "mode": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "Populate",
            "label_off": "Fixed"
          }
        ],
        "Select to add LoRA": [
          [
            "Select the LoRA to add to the text",
            "Ahri.safetensors",
            "Belle-v1-01.safetensors",
            "BelleV2.safetensors",
            "Blackpink_Fusion.safetensors",
            "Broken_Covenant_Miss_Fortune.safetensors",
            "Coven_Ahri.safetensors",
            "Coven_Zyra.safetensors",
            "Firecracker_Diana.safetensors",
            "GoodHands-beta2.safetensors",
            "HOTD.safetensors",
            "Irelia.safetensors",
            "KDA_Ahri_Prestige_Edition.safetensors",
            "KDA_All_Out_Ahri.safetensors",
            "Lucy_Cyberpunk.safetensors",
            "Miss_Fortune.safetensors",
            "Pool_Party_Miss_Fortune.safetensors",
            "Star_Guardian_Ahri.safetensors",
            "Winterblessed_Diana.safetensors",
            "fc2318a3-8d41-4dd7-8a8d-91410d7b4ee3.safetensors"
          ]
        ],
        "Select to add Wildcard": [["Select the Wildcard to add to the text"]],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e19
          }
        ]
      }
    },
    "output": ["MODEL", "CLIP", "CONDITIONING", "STRING"],
    "output_is_list": [false, false, false, false],
    "output_name": ["model", "clip", "conditioning", "populated_text"],
    "name": "ImpactWildcardEncode",
    "display_name": "ImpactWildcardEncode",
    "description": "",
    "category": "ImpactPack/Prompt",
    "output_node": false
  },
  "SEGSDetailer": {
    "input": {
      "required": {
        "image": ["IMAGE"],
        "segs": ["SEGS"],
        "guide_size": [
          "FLOAT",
          {
            "default": 256,
            "min": 64,
            "max": 8192,
            "step": 8
          }
        ],
        "guide_size_for": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "bbox",
            "label_off": "crop_region"
          }
        ],
        "max_size": [
          "FLOAT",
          {
            "default": 768,
            "min": 64,
            "max": 8192,
            "step": 8
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e19
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8,
            "min": 0,
            "max": 100
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0001,
            "max": 1,
            "step": 0.01
          }
        ],
        "noise_mask": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "force_inpaint": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "basic_pipe": ["BASIC_PIPE"],
        "refiner_ratio": [
          "FLOAT",
          {
            "default": 0.2,
            "min": 0,
            "max": 1
          }
        ],
        "batch_size": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 100
          }
        ],
        "cycle": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 10,
            "step": 1
          }
        ]
      },
      "optional": {
        "refiner_basic_pipe_opt": ["BASIC_PIPE"],
        "inpaint_model": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "noise_mask_feather": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ]
      }
    },
    "output": ["SEGS", "IMAGE"],
    "output_is_list": [false, true],
    "output_name": ["segs", "cnet_images"],
    "name": "SEGSDetailer",
    "display_name": "SEGSDetailer",
    "description": "",
    "category": "ImpactPack/Detailer",
    "output_node": false
  },
  "SEGSPaste": {
    "input": {
      "required": {
        "image": ["IMAGE"],
        "segs": ["SEGS"],
        "feather": [
          "INT",
          {
            "default": 5,
            "min": 0,
            "max": 100,
            "step": 1
          }
        ],
        "alpha": [
          "INT",
          {
            "default": 255,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ]
      },
      "optional": {
        "ref_image_opt": ["IMAGE"]
      }
    },
    "output": ["IMAGE"],
    "output_is_list": [false],
    "output_name": ["IMAGE"],
    "name": "SEGSPaste",
    "display_name": "SEGSPaste",
    "description": "",
    "category": "ImpactPack/Detailer",
    "output_node": false
  },
  "SEGSPreview": {
    "input": {
      "required": {
        "segs": ["SEGS"],
        "alpha_mode": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enable",
            "label_off": "disable"
          }
        ],
        "min_alpha": [
          "FLOAT",
          {
            "default": 0.2,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      },
      "optional": {
        "fallback_image_opt": ["IMAGE"]
      }
    },
    "output": ["IMAGE"],
    "output_is_list": [true],
    "output_name": ["IMAGE"],
    "name": "SEGSPreview",
    "display_name": "SEGSPreview",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": true
  },
  "SEGSPreviewCNet": {
    "input": {
      "required": {
        "segs": ["SEGS"]
      }
    },
    "output": ["IMAGE"],
    "output_is_list": [true],
    "output_name": ["IMAGE"],
    "name": "SEGSPreviewCNet",
    "display_name": "SEGSPreview (CNET Image)",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": true
  },
  "SEGSToImageList": {
    "input": {
      "required": {
        "segs": ["SEGS"]
      },
      "optional": {
        "fallback_image_opt": ["IMAGE"]
      }
    },
    "output": ["IMAGE"],
    "output_is_list": [true],
    "output_name": ["IMAGE"],
    "name": "SEGSToImageList",
    "display_name": "SEGSToImageList",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ImpactSEGSToMaskList": {
    "input": {
      "required": {
        "segs": ["SEGS"]
      }
    },
    "output": ["MASK"],
    "output_is_list": [true],
    "output_name": ["MASK"],
    "name": "ImpactSEGSToMaskList",
    "display_name": "SEGS to Mask List",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ImpactSEGSToMaskBatch": {
    "input": {
      "required": {
        "segs": ["SEGS"]
      }
    },
    "output": ["MASK"],
    "output_is_list": [false],
    "output_name": ["MASK"],
    "name": "ImpactSEGSToMaskBatch",
    "display_name": "SEGS to Mask Batch",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ImpactSEGSConcat": {
    "input": {
      "required": {
        "segs1": ["SEGS"]
      }
    },
    "output": ["SEGS"],
    "output_is_list": [false],
    "output_name": ["SEGS"],
    "name": "ImpactSEGSConcat",
    "display_name": "SEGS Concat",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ImpactSEGSPicker": {
    "input": {
      "required": {
        "picks": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": false,
            "pysssss.autocomplete": false
          }
        ],
        "segs": ["SEGS"]
      },
      "optional": {
        "fallback_image_opt": ["IMAGE"]
      },
      "hidden": {
        "unique_id": "UNIQUE_ID"
      }
    },
    "output": ["SEGS"],
    "output_is_list": [false],
    "output_name": ["SEGS"],
    "name": "ImpactSEGSPicker",
    "display_name": "Picker (SEGS)",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": true
  },
  "ImpactMakeTileSEGS": {
    "input": {
      "required": {
        "images": ["IMAGE"],
        "bbox_size": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 4096,
            "step": 8
          }
        ],
        "crop_factor": [
          "FLOAT",
          {
            "default": 3,
            "min": 1,
            "max": 10,
            "step": 0.1
          }
        ],
        "min_overlap": [
          "INT",
          {
            "default": 5,
            "min": 0,
            "max": 512,
            "step": 1
          }
        ],
        "filter_segs_dilation": [
          "INT",
          {
            "default": 20,
            "min": -255,
            "max": 255,
            "step": 1
          }
        ],
        "mask_irregularity": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "irregular_mask_mode": [
          [
            "Reuse fast",
            "Reuse quality",
            "All random fast",
            "All random quality"
          ]
        ]
      },
      "optional": {
        "filter_in_segs_opt": ["SEGS"],
        "filter_out_segs_opt": ["SEGS"]
      }
    },
    "output": ["SEGS"],
    "output_is_list": [false],
    "output_name": ["SEGS"],
    "name": "ImpactMakeTileSEGS",
    "display_name": "Make Tile SEGS",
    "description": "",
    "category": "ImpactPack/__for_testing",
    "output_node": false
  },
  "SEGSDetailerForAnimateDiff": {
    "input": {
      "required": {
        "image_frames": ["IMAGE"],
        "segs": ["SEGS"],
        "guide_size": [
          "FLOAT",
          {
            "default": 256,
            "min": 64,
            "max": 8192,
            "step": 8
          }
        ],
        "guide_size_for": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "bbox",
            "label_off": "crop_region"
          }
        ],
        "max_size": [
          "FLOAT",
          {
            "default": 768,
            "min": 64,
            "max": 8192,
            "step": 8
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e19
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8,
            "min": 0,
            "max": 100
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.0001,
            "max": 1,
            "step": 0.01
          }
        ],
        "basic_pipe": ["BASIC_PIPE"],
        "refiner_ratio": [
          "FLOAT",
          {
            "default": 0.2,
            "min": 0,
            "max": 1
          }
        ]
      },
      "optional": {
        "refiner_basic_pipe_opt": ["BASIC_PIPE"]
      }
    },
    "output": ["SEGS", "IMAGE"],
    "output_is_list": [false, true],
    "output_name": ["segs", "cnet_images"],
    "name": "SEGSDetailerForAnimateDiff",
    "display_name": "SEGSDetailer For AnimateDiff (SEGS/pipe)",
    "description": "",
    "category": "ImpactPack/Detailer",
    "output_node": false
  },
  "ImpactKSamplerBasicPipe": {
    "input": {
      "required": {
        "basic_pipe": ["BASIC_PIPE"],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e19
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8,
            "min": 0,
            "max": 100
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "latent_image": ["LATENT"],
        "denoise": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": ["BASIC_PIPE", "LATENT", "VAE"],
    "output_is_list": [false, false, false],
    "output_name": ["BASIC_PIPE", "LATENT", "VAE"],
    "name": "ImpactKSamplerBasicPipe",
    "display_name": "KSampler (pipe)",
    "description": "",
    "category": "sampling",
    "output_node": false
  },
  "ImpactKSamplerAdvancedBasicPipe": {
    "input": {
      "required": {
        "basic_pipe": ["BASIC_PIPE"],
        "add_noise": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enable",
            "label_off": "disable"
          }
        ],
        "noise_seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e19
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8,
            "min": 0,
            "max": 100
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "latent_image": ["LATENT"],
        "start_at_step": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 10000
          }
        ],
        "end_at_step": [
          "INT",
          {
            "default": 10000,
            "min": 0,
            "max": 10000
          }
        ],
        "return_with_leftover_noise": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enable",
            "label_off": "disable"
          }
        ]
      }
    },
    "output": ["BASIC_PIPE", "LATENT", "VAE"],
    "output_is_list": [false, false, false],
    "output_name": ["BASIC_PIPE", "LATENT", "VAE"],
    "name": "ImpactKSamplerAdvancedBasicPipe",
    "display_name": "KSampler (Advanced/pipe)",
    "description": "",
    "category": "sampling",
    "output_node": false
  },
  "ReencodeLatent": {
    "input": {
      "required": {
        "samples": ["LATENT"],
        "tile_mode": [
          ["None", "Both", "Decode(input) only", "Encode(output) only"]
        ],
        "input_vae": ["VAE"],
        "output_vae": ["VAE"],
        "tile_size": [
          "INT",
          {
            "default": 512,
            "min": 320,
            "max": 4096,
            "step": 64
          }
        ]
      }
    },
    "output": ["LATENT"],
    "output_is_list": [false],
    "output_name": ["LATENT"],
    "name": "ReencodeLatent",
    "display_name": "Reencode Latent",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ReencodeLatentPipe": {
    "input": {
      "required": {
        "samples": ["LATENT"],
        "tile_mode": [
          ["None", "Both", "Decode(input) only", "Encode(output) only"]
        ],
        "input_basic_pipe": ["BASIC_PIPE"],
        "output_basic_pipe": ["BASIC_PIPE"]
      }
    },
    "output": ["LATENT"],
    "output_is_list": [false],
    "output_name": ["LATENT"],
    "name": "ReencodeLatentPipe",
    "display_name": "Reencode Latent (pipe)",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ImpactImageBatchToImageList": {
    "input": {
      "required": {
        "image": ["IMAGE"]
      }
    },
    "output": ["IMAGE"],
    "output_is_list": [true],
    "output_name": ["IMAGE"],
    "name": "ImpactImageBatchToImageList",
    "display_name": "Image batch to Image List",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ImpactMakeImageList": {
    "input": {
      "required": {
        "image1": ["IMAGE"]
      }
    },
    "output": ["IMAGE"],
    "output_is_list": [true],
    "output_name": ["IMAGE"],
    "name": "ImpactMakeImageList",
    "display_name": "Make Image List",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ImpactMakeImageBatch": {
    "input": {
      "required": {
        "image1": ["IMAGE"]
      }
    },
    "output": ["IMAGE"],
    "output_is_list": [false],
    "output_name": ["IMAGE"],
    "name": "ImpactMakeImageBatch",
    "display_name": "Make Image Batch",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "RegionalSampler": {
    "input": {
      "required": {
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e19
          }
        ],
        "seed_2nd": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e19
          }
        ],
        "seed_2nd_mode": [
          [
            "ignore",
            "fixed",
            "seed+seed_2nd",
            "seed-seed_2nd",
            "increment",
            "decrement",
            "randomize"
          ]
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "base_only_steps": [
          "INT",
          {
            "default": 2,
            "min": 0,
            "max": 10000
          }
        ],
        "denoise": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "samples": ["LATENT"],
        "base_sampler": ["KSAMPLER_ADVANCED"],
        "regional_prompts": ["REGIONAL_PROMPTS"],
        "overlap_factor": [
          "INT",
          {
            "default": 10,
            "min": 0,
            "max": 10000
          }
        ],
        "restore_latent": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "additional_mode": [
          ["DISABLE", "ratio additional", "ratio between"],
          {
            "default": "ratio between"
          }
        ],
        "additional_sampler": [
          [
            "AUTO",
            "euler",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_fast",
            "dpmpp_2m",
            "ddpm"
          ]
        ],
        "additional_sigma_ratio": [
          "FLOAT",
          {
            "default": 0.3,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      },
      "hidden": {
        "unique_id": "UNIQUE_ID"
      }
    },
    "output": ["LATENT"],
    "output_is_list": [false],
    "output_name": ["LATENT"],
    "name": "RegionalSampler",
    "display_name": "RegionalSampler",
    "description": "",
    "category": "ImpactPack/Regional",
    "output_node": false
  },
  "RegionalSamplerAdvanced": {
    "input": {
      "required": {
        "add_noise": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "noise_seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e19
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "start_at_step": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 10000
          }
        ],
        "end_at_step": [
          "INT",
          {
            "default": 10000,
            "min": 0,
            "max": 10000
          }
        ],
        "overlap_factor": [
          "INT",
          {
            "default": 10,
            "min": 0,
            "max": 10000
          }
        ],
        "restore_latent": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "return_with_leftover_noise": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "latent_image": ["LATENT"],
        "base_sampler": ["KSAMPLER_ADVANCED"],
        "regional_prompts": ["REGIONAL_PROMPTS"],
        "additional_mode": [
          ["DISABLE", "ratio additional", "ratio between"],
          {
            "default": "ratio between"
          }
        ],
        "additional_sampler": [
          [
            "AUTO",
            "euler",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_fast",
            "dpmpp_2m",
            "ddpm"
          ]
        ],
        "additional_sigma_ratio": [
          "FLOAT",
          {
            "default": 0.3,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      },
      "hidden": {
        "unique_id": "UNIQUE_ID"
      }
    },
    "output": ["LATENT"],
    "output_is_list": [false],
    "output_name": ["LATENT"],
    "name": "RegionalSamplerAdvanced",
    "display_name": "RegionalSamplerAdvanced",
    "description": "",
    "category": "ImpactPack/Regional",
    "output_node": false
  },
  "CombineRegionalPrompts": {
    "input": {
      "required": {
        "regional_prompts1": ["REGIONAL_PROMPTS"]
      }
    },
    "output": ["REGIONAL_PROMPTS"],
    "output_is_list": [false],
    "output_name": ["REGIONAL_PROMPTS"],
    "name": "CombineRegionalPrompts",
    "display_name": "CombineRegionalPrompts",
    "description": "",
    "category": "ImpactPack/Regional",
    "output_node": false
  },
  "RegionalPrompt": {
    "input": {
      "required": {
        "mask": ["MASK"],
        "advanced_sampler": ["KSAMPLER_ADVANCED"]
      }
    },
    "output": ["REGIONAL_PROMPTS"],
    "output_is_list": [false],
    "output_name": ["REGIONAL_PROMPTS"],
    "name": "RegionalPrompt",
    "display_name": "RegionalPrompt",
    "description": "",
    "category": "ImpactPack/Regional",
    "output_node": false
  },
  "ImpactCombineConditionings": {
    "input": {
      "required": {
        "conditioning1": ["CONDITIONING"]
      }
    },
    "output": ["CONDITIONING"],
    "output_is_list": [false],
    "output_name": ["CONDITIONING"],
    "name": "ImpactCombineConditionings",
    "display_name": "Combine Conditionings",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ImpactConcatConditionings": {
    "input": {
      "required": {
        "conditioning1": ["CONDITIONING"]
      }
    },
    "output": ["CONDITIONING"],
    "output_is_list": [false],
    "output_name": ["CONDITIONING"],
    "name": "ImpactConcatConditionings",
    "display_name": "Concat Conditionings",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ImpactSEGSLabelFilter": {
    "input": {
      "required": {
        "segs": ["SEGS"],
        "preset": [
          [
            "all",
            "hand",
            "face",
            "mouth",
            "eyes",
            "eyebrows",
            "pupils",
            "left_eyebrow",
            "left_eye",
            "left_pupil",
            "right_eyebrow",
            "right_eye",
            "right_pupil",
            "short_sleeved_shirt",
            "long_sleeved_shirt",
            "short_sleeved_outwear",
            "long_sleeved_outwear",
            "vest",
            "sling",
            "shorts",
            "trousers",
            "skirt",
            "short_sleeved_dress",
            "long_sleeved_dress",
            "vest_dress",
            "sling_dress",
            "person",
            "bicycle",
            "car",
            "motorcycle",
            "airplane",
            "bus",
            "train",
            "truck",
            "boat",
            "traffic light",
            "fire hydrant",
            "stop sign",
            "parking meter",
            "bench",
            "bird",
            "cat",
            "dog",
            "horse",
            "sheep",
            "cow",
            "elephant",
            "bear",
            "zebra",
            "giraffe",
            "backpack",
            "umbrella",
            "handbag",
            "tie",
            "suitcase",
            "frisbee",
            "skis",
            "snowboard",
            "sports ball",
            "kite",
            "baseball bat",
            "baseball glove",
            "skateboard",
            "surfboard",
            "tennis racket",
            "bottle",
            "wine glass",
            "cup",
            "fork",
            "knife",
            "spoon",
            "bowl",
            "banana",
            "apple",
            "sandwich",
            "orange",
            "broccoli",
            "carrot",
            "hot dog",
            "pizza",
            "donut",
            "cake",
            "chair",
            "couch",
            "potted plant",
            "bed",
            "dining table",
            "toilet",
            "tv",
            "laptop",
            "mouse",
            "remote",
            "keyboard",
            "cell phone",
            "microwave",
            "oven",
            "toaster",
            "sink",
            "refrigerator",
            "book",
            "clock",
            "vase",
            "scissors",
            "teddy bear",
            "hair drier",
            "toothbrush"
          ]
        ],
        "labels": [
          "STRING",
          {
            "multiline": true,
            "placeholder": "List the types of segments to be allowed, separated by commas"
          }
        ]
      }
    },
    "output": ["SEGS", "SEGS"],
    "output_is_list": [false, false],
    "output_name": ["filtered_SEGS", "remained_SEGS"],
    "name": "ImpactSEGSLabelFilter",
    "display_name": "SEGS Filter (label)",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ImpactSEGSRangeFilter": {
    "input": {
      "required": {
        "segs": ["SEGS"],
        "target": [
          [
            "area(=w*h)",
            "width",
            "height",
            "x1",
            "y1",
            "x2",
            "y2",
            "length_percent"
          ]
        ],
        "mode": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "inside",
            "label_off": "outside"
          }
        ],
        "min_value": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9.223372036854776e18,
            "step": 1
          }
        ],
        "max_value": [
          "INT",
          {
            "default": 67108864,
            "min": 0,
            "max": 9.223372036854776e18,
            "step": 1
          }
        ]
      }
    },
    "output": ["SEGS", "SEGS"],
    "output_is_list": [false, false],
    "output_name": ["filtered_SEGS", "remained_SEGS"],
    "name": "ImpactSEGSRangeFilter",
    "display_name": "SEGS Filter (range)",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ImpactSEGSOrderedFilter": {
    "input": {
      "required": {
        "segs": ["SEGS"],
        "target": [["area(=w*h)", "width", "height", "x1", "y1", "x2", "y2"]],
        "order": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "descending",
            "label_off": "ascending"
          }
        ],
        "take_start": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9.223372036854776e18,
            "step": 1
          }
        ],
        "take_count": [
          "INT",
          {
            "default": 1,
            "min": 0,
            "max": 9.223372036854776e18,
            "step": 1
          }
        ]
      }
    },
    "output": ["SEGS", "SEGS"],
    "output_is_list": [false, false],
    "output_name": ["filtered_SEGS", "remained_SEGS"],
    "name": "ImpactSEGSOrderedFilter",
    "display_name": "SEGS Filter (ordered)",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ImpactCompare": {
    "input": {
      "required": {
        "cmp": [
          [
            "a = b",
            "a \u003C\u003E b",
            "a \u003E b",
            "a \u003C b",
            "a \u003E= b",
            "a \u003C= b",
            "tt",
            "ff"
          ]
        ],
        "a": ["*"],
        "b": ["*"]
      }
    },
    "output": ["BOOLEAN"],
    "output_is_list": [false],
    "output_name": ["BOOLEAN"],
    "name": "ImpactCompare",
    "display_name": "ImpactCompare",
    "description": "",
    "category": "ImpactPack/Logic",
    "output_node": false
  },
  "ImpactConditionalBranch": {
    "input": {
      "required": {
        "cond": ["BOOLEAN"],
        "tt_value": ["*"],
        "ff_value": ["*"]
      }
    },
    "output": ["*"],
    "output_is_list": [false],
    "output_name": ["*"],
    "name": "ImpactConditionalBranch",
    "display_name": "ImpactConditionalBranch",
    "description": "",
    "category": "ImpactPack/Logic",
    "output_node": false
  },
  "ImpactConditionalBranchSelMode": {
    "input": {
      "required": {
        "cond": ["BOOLEAN"],
        "sel_mode": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "select_on_prompt",
            "label_off": "select_on_execution"
          }
        ]
      },
      "optional": {
        "tt_value": ["*"],
        "ff_value": ["*"]
      }
    },
    "output": ["*"],
    "output_is_list": [false],
    "output_name": ["*"],
    "name": "ImpactConditionalBranchSelMode",
    "display_name": "ImpactConditionalBranchSelMode",
    "description": "",
    "category": "ImpactPack/Logic",
    "output_node": false
  },
  "ImpactIfNone": {
    "input": {
      "required": {},
      "optional": {
        "signal": ["*"],
        "any_input": ["*"]
      }
    },
    "output": ["*", "BOOLEAN"],
    "output_is_list": [false, false],
    "output_name": ["signal_opt", "bool"],
    "name": "ImpactIfNone",
    "display_name": "ImpactIfNone",
    "description": "",
    "category": "ImpactPack/Logic",
    "output_node": false
  },
  "ImpactConvertDataType": {
    "input": {
      "required": {
        "value": ["*"]
      }
    },
    "output": ["STRING", "FLOAT", "INT", "BOOLEAN"],
    "output_is_list": [false, false, false, false],
    "output_name": ["STRING", "FLOAT", "INT", "BOOLEAN"],
    "name": "ImpactConvertDataType",
    "display_name": "ImpactConvertDataType",
    "description": "",
    "category": "ImpactPack/Logic",
    "output_node": false
  },
  "ImpactLogicalOperators": {
    "input": {
      "required": {
        "operator": [["and", "or", "xor"]],
        "bool_a": [
          "BOOLEAN",
          {
            "forceInput": true
          }
        ],
        "bool_b": [
          "BOOLEAN",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": ["BOOLEAN"],
    "output_is_list": [false],
    "output_name": ["BOOLEAN"],
    "name": "ImpactLogicalOperators",
    "display_name": "ImpactLogicalOperators",
    "description": "",
    "category": "ImpactPack/Logic",
    "output_node": false
  },
  "ImpactInt": {
    "input": {
      "required": {
        "value": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9.223372036854776e18,
            "step": 1
          }
        ]
      }
    },
    "output": ["INT"],
    "output_is_list": [false],
    "output_name": ["INT"],
    "name": "ImpactInt",
    "display_name": "ImpactInt",
    "description": "",
    "category": "ImpactPack/Logic",
    "output_node": false
  },
  "ImpactFloat": {
    "input": {
      "required": {
        "value": [
          "FLOAT",
          {
            "default": 1,
            "min": -3.402823466e38,
            "max": 3.402823466e38
          }
        ]
      }
    },
    "output": ["FLOAT"],
    "output_is_list": [false],
    "output_name": ["FLOAT"],
    "name": "ImpactFloat",
    "display_name": "ImpactFloat",
    "description": "",
    "category": "ImpactPack/Logic",
    "output_node": false
  },
  "ImpactValueSender": {
    "input": {
      "required": {
        "value": ["*"],
        "link_id": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9.223372036854776e18,
            "step": 1
          }
        ]
      },
      "optional": {
        "signal_opt": ["*"]
      }
    },
    "output": ["*"],
    "output_is_list": [false],
    "output_name": ["signal"],
    "name": "ImpactValueSender",
    "display_name": "ImpactValueSender",
    "description": "",
    "category": "ImpactPack/Logic",
    "output_node": true
  },
  "ImpactValueReceiver": {
    "input": {
      "required": {
        "typ": [["STRING", "INT", "FLOAT", "BOOLEAN"]],
        "value": [
          "STRING",
          {
            "default": ""
          }
        ],
        "link_id": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 9.223372036854776e18,
            "step": 1
          }
        ]
      }
    },
    "output": ["*"],
    "output_is_list": [false],
    "output_name": ["*"],
    "name": "ImpactValueReceiver",
    "display_name": "ImpactValueReceiver",
    "description": "",
    "category": "ImpactPack/Logic",
    "output_node": false
  },
  "ImpactImageInfo": {
    "input": {
      "required": {
        "value": ["IMAGE"]
      }
    },
    "output": ["INT", "INT", "INT", "INT"],
    "output_is_list": [false, false, false, false],
    "output_name": ["batch", "height", "width", "channel"],
    "name": "ImpactImageInfo",
    "display_name": "ImpactImageInfo",
    "description": "",
    "category": "ImpactPack/Logic/_for_test",
    "output_node": false
  },
  "ImpactLatentInfo": {
    "input": {
      "required": {
        "value": ["LATENT"]
      }
    },
    "output": ["INT", "INT", "INT", "INT"],
    "output_is_list": [false, false, false, false],
    "output_name": ["batch", "height", "width", "channel"],
    "name": "ImpactLatentInfo",
    "display_name": "ImpactLatentInfo",
    "description": "",
    "category": "ImpactPack/Logic/_for_test",
    "output_node": false
  },
  "ImpactMinMax": {
    "input": {
      "required": {
        "mode": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "max",
            "label_off": "min"
          }
        ],
        "a": ["*"],
        "b": ["*"]
      }
    },
    "output": ["INT"],
    "output_is_list": [false],
    "output_name": ["INT"],
    "name": "ImpactMinMax",
    "display_name": "ImpactMinMax",
    "description": "",
    "category": "ImpactPack/Logic/_for_test",
    "output_node": false
  },
  "ImpactNeg": {
    "input": {
      "required": {
        "value": [
          "BOOLEAN",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": ["BOOLEAN"],
    "output_is_list": [false],
    "output_name": ["BOOLEAN"],
    "name": "ImpactNeg",
    "display_name": "ImpactNeg",
    "description": "",
    "category": "ImpactPack/Logic",
    "output_node": false
  },
  "ImpactConditionalStopIteration": {
    "input": {
      "required": {
        "cond": [
          "BOOLEAN",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "ImpactConditionalStopIteration",
    "display_name": "ImpactConditionalStopIteration",
    "description": "",
    "category": "ImpactPack/Logic",
    "output_node": true
  },
  "ImpactStringSelector": {
    "input": {
      "required": {
        "strings": [
          "STRING",
          {
            "multiline": true
          }
        ],
        "multiline": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ],
        "select": [
          "INT",
          {
            "min": 0,
            "max": 9.223372036854776e18,
            "step": 1,
            "default": 0
          }
        ]
      }
    },
    "output": ["STRING"],
    "output_is_list": [false],
    "output_name": ["STRING"],
    "name": "ImpactStringSelector",
    "display_name": "String Selector",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "RemoveNoiseMask": {
    "input": {
      "required": {
        "samples": ["LATENT"]
      }
    },
    "output": ["LATENT"],
    "output_is_list": [false],
    "output_name": ["LATENT"],
    "name": "RemoveNoiseMask",
    "display_name": "Remove Noise Mask",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "ImpactLogger": {
    "input": {
      "required": {
        "data": ["*", ""]
      },
      "hidden": {
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO"
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "ImpactLogger",
    "display_name": "ImpactLogger",
    "description": "",
    "category": "ImpactPack/Debug",
    "output_node": true
  },
  "ImpactDummyInput": {
    "input": {
      "required": {}
    },
    "output": ["*"],
    "output_is_list": [false],
    "output_name": ["*"],
    "name": "ImpactDummyInput",
    "display_name": "ImpactDummyInput",
    "description": "",
    "category": "ImpactPack/Debug",
    "output_node": false
  },
  "ImpactQueueTrigger": {
    "input": {
      "required": {
        "signal": ["*"],
        "mode": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "Trigger",
            "label_off": "Don't trigger"
          }
        ]
      }
    },
    "output": ["*"],
    "output_is_list": [false],
    "output_name": ["signal_opt"],
    "name": "ImpactQueueTrigger",
    "display_name": "Queue Trigger",
    "description": "",
    "category": "ImpactPack/Logic/_for_test",
    "output_node": true
  },
  "ImpactQueueTriggerCountdown": {
    "input": {
      "required": {
        "signal": ["*"],
        "count": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e19
          }
        ],
        "total": [
          "INT",
          {
            "default": 10,
            "min": 1,
            "max": 1.8446744073709552e19
          }
        ],
        "mode": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "Trigger",
            "label_off": "Don't trigger"
          }
        ]
      },
      "hidden": {
        "unique_id": "UNIQUE_ID"
      }
    },
    "output": ["*", "INT", "INT"],
    "output_is_list": [false, false, false],
    "output_name": ["signal_opt", "count", "total"],
    "name": "ImpactQueueTriggerCountdown",
    "display_name": "Queue Trigger (Countdown)",
    "description": "",
    "category": "ImpactPack/Logic/_for_test",
    "output_node": true
  },
  "ImpactSetWidgetValue": {
    "input": {
      "required": {
        "signal": ["*"],
        "node_id": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e19
          }
        ],
        "widget_name": [
          "STRING",
          {
            "multiline": false
          }
        ]
      },
      "optional": {
        "boolean_value": [
          "BOOLEAN",
          {
            "forceInput": true
          }
        ],
        "int_value": [
          "INT",
          {
            "forceInput": true
          }
        ],
        "float_value": [
          "FLOAT",
          {
            "forceInput": true
          }
        ],
        "string_value": [
          "STRING",
          {
            "forceInput": true
          }
        ]
      }
    },
    "output": ["*"],
    "output_is_list": [false],
    "output_name": ["signal_opt"],
    "name": "ImpactSetWidgetValue",
    "display_name": "Set Widget Value",
    "description": "",
    "category": "ImpactPack/Logic/_for_test",
    "output_node": true
  },
  "ImpactNodeSetMuteState": {
    "input": {
      "required": {
        "signal": ["*"],
        "node_id": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e19
          }
        ],
        "set_state": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "active",
            "label_off": "mute"
          }
        ]
      }
    },
    "output": ["*"],
    "output_is_list": [false],
    "output_name": ["signal_opt"],
    "name": "ImpactNodeSetMuteState",
    "display_name": "Set Mute State",
    "description": "",
    "category": "ImpactPack/Logic/_for_test",
    "output_node": true
  },
  "ImpactControlBridge": {
    "input": {
      "required": {
        "value": ["*"],
        "mode": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "Active",
            "label_off": "Mute/Bypass"
          }
        ],
        "behavior": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "Mute",
            "label_off": "Bypass"
          }
        ]
      },
      "hidden": {
        "unique_id": "UNIQUE_ID",
        "prompt": "PROMPT",
        "extra_pnginfo": "EXTRA_PNGINFO"
      }
    },
    "output": ["*"],
    "output_is_list": [false],
    "output_name": ["value"],
    "name": "ImpactControlBridge",
    "display_name": "Control Bridge",
    "description": "",
    "category": "ImpactPack/Logic/_for_test",
    "output_node": true
  },
  "ImpactIsNotEmptySEGS": {
    "input": {
      "required": {
        "segs": ["SEGS"]
      }
    },
    "output": ["BOOLEAN"],
    "output_is_list": [false],
    "output_name": ["BOOLEAN"],
    "name": "ImpactIsNotEmptySEGS",
    "display_name": "SEGS isn't Empty",
    "description": "",
    "category": "ImpactPack/Logic",
    "output_node": false
  },
  "ImpactSleep": {
    "input": {
      "required": {
        "signal": ["*"],
        "seconds": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0,
            "max": 3600
          }
        ]
      }
    },
    "output": ["*"],
    "output_is_list": [false],
    "output_name": ["signal_opt"],
    "name": "ImpactSleep",
    "display_name": "Sleep",
    "description": "",
    "category": "ImpactPack/Logic/_for_test",
    "output_node": true
  },
  "ImpactRemoteBoolean": {
    "input": {
      "required": {
        "node_id": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e19
          }
        ],
        "widget_name": [
          "STRING",
          {
            "multiline": false
          }
        ],
        "value": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "True",
            "label_off": "False"
          }
        ]
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "ImpactRemoteBoolean",
    "display_name": "Remote Boolean (on prompt)",
    "description": "",
    "category": "ImpactPack/Logic/_for_test",
    "output_node": true
  },
  "ImpactRemoteInt": {
    "input": {
      "required": {
        "node_id": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e19
          }
        ],
        "widget_name": [
          "STRING",
          {
            "multiline": false
          }
        ],
        "value": [
          "INT",
          {
            "default": 0,
            "min": -1.8446744073709552e19,
            "max": 1.8446744073709552e19
          }
        ]
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "ImpactRemoteInt",
    "display_name": "Remote Int (on prompt)",
    "description": "",
    "category": "ImpactPack/Logic/_for_test",
    "output_node": true
  },
  "ImpactHFTransformersClassifierProvider": {
    "input": {
      "required": {
        "preset_repo_id": [
          [
            "rizvandwiki/gender-classification-2",
            "NTQAI/pedestrian_gender_recognition",
            "Leilab/gender_class",
            "ProjectPersonal/GenderClassifier",
            "crangana/trained-gender",
            "cledoux42/GenderNew_v002",
            "ivensamdh/genderage2",
            "Manual repo id"
          ]
        ],
        "manual_repo_id": [
          "STRING",
          {
            "multiline": false
          }
        ],
        "device_mode": [["AUTO", "Prefer GPU", "CPU"]]
      }
    },
    "output": ["TRANSFORMERS_CLASSIFIER"],
    "output_is_list": [false],
    "output_name": ["TRANSFORMERS_CLASSIFIER"],
    "name": "ImpactHFTransformersClassifierProvider",
    "display_name": "HF Transformers Classifier Provider",
    "description": "",
    "category": "ImpactPack/HuggingFace",
    "output_node": false
  },
  "ImpactSEGSClassify": {
    "input": {
      "required": {
        "classifier": ["TRANSFORMERS_CLASSIFIER"],
        "segs": ["SEGS"],
        "preset_expr": [
          [
            "#Female \u003E #Male",
            "#Female \u003C #Male",
            "female \u003E 0.5",
            "male \u003E 0.5",
            "Age16to25 \u003E 0.1",
            "Age50to69 \u003E 0.1",
            "Manual expr"
          ]
        ],
        "manual_expr": [
          "STRING",
          {
            "multiline": false
          }
        ]
      },
      "optional": {
        "ref_image_opt": ["IMAGE"]
      }
    },
    "output": ["SEGS", "SEGS"],
    "output_is_list": [false, false],
    "output_name": ["filtered_SEGS", "remained_SEGS"],
    "name": "ImpactSEGSClassify",
    "display_name": "SEGS Classify",
    "description": "",
    "category": "ImpactPack/HuggingFace",
    "output_node": false
  },
  "UltralyticsDetectorProvider": {
    "input": {
      "required": {
        "model_name": [
          [
            "bbox/face_yolov8m.pt",
            "bbox/hand_yolov8s.pt",
            "segm/person_yolov8m-seg.pt"
          ]
        ]
      }
    },
    "output": ["BBOX_DETECTOR", "SEGM_DETECTOR"],
    "output_is_list": [false, false],
    "output_name": ["BBOX_DETECTOR", "SEGM_DETECTOR"],
    "name": "UltralyticsDetectorProvider",
    "display_name": "UltralyticsDetectorProvider",
    "description": "",
    "category": "ImpactPack",
    "output_node": false
  },
  "XY Input: Lora Block Weight //Inspire": {
    "input": {
      "required": {
        "category_filter": [["All", ""]],
        "lora_name": [
          [
            "Ahri.safetensors",
            "Belle-v1-01.safetensors",
            "BelleV2.safetensors",
            "Blackpink_Fusion.safetensors",
            "Broken_Covenant_Miss_Fortune.safetensors",
            "Coven_Ahri.safetensors",
            "Coven_Zyra.safetensors",
            "Firecracker_Diana.safetensors",
            "GoodHands-beta2.safetensors",
            "HOTD.safetensors",
            "Irelia.safetensors",
            "KDA_Ahri_Prestige_Edition.safetensors",
            "KDA_All_Out_Ahri.safetensors",
            "Lucy_Cyberpunk.safetensors",
            "Miss_Fortune.safetensors",
            "Pool_Party_Miss_Fortune.safetensors",
            "Star_Guardian_Ahri.safetensors",
            "Winterblessed_Diana.safetensors",
            "fc2318a3-8d41-4dd7-8a8d-91410d7b4ee3.safetensors"
          ]
        ],
        "strength_model": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "strength_clip": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "inverse": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "True",
            "label_off": "False"
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e19
          }
        ],
        "A": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "B": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "preset": [
          [
            "Preset",
            "SD-NONE:0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
            "SD-ALL:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1",
            "SD-INS:1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0",
            "SD-IND:1,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0",
            "SD-INALL:1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0",
            "SD-MIDD:1,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0",
            "SD-MIDD0.2:1,0,0,0,0,0,0.2,0.4,0.4,0.2,0,0,0,0,0,0,0",
            "SD-MIDD0.8:1,0,0,0,0,0.5,0.8,0.8,0.4,0,0,0,0,0,0,0,0",
            "SD-MOUT:1,0,0,0,0,0,1,1,1,1,1,1,1,1,0.5,0,0",
            "SD-OUTD:1,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0",
            "SD-OUTS:1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1",
            "SD-OUTALL:1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1",
            "SD-ROUT:1,1,1,1,1,1,1,1,R,R,R,R,R,R,R,R,R",
            "SD-AOUT:A,1,1,1,1,1,1,1,1,1,1,1,A,A,A,A,A",
            "SD-AB:A,B,B,B,B,B,B,B,B,B,B,B,A,A,A,A,A",
            "SD-ALL0.5:0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5",
            "SD-LyC-NONE:0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
            "SD-LyC-ALL:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1",
            "SD-LyC-INALL:1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
            "SD-LyC-MIDALL:1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0",
            "SD-LyC-OUTALL:1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1",
            "SDXL-NONE:0,0,0,0,0,0,0,0,0,0,0,0",
            "SDXL-ALL:1,1,1,1,1,1,1,1,1,1,1,1",
            "SDXL-INALL:1,1,1,1,1,0,0,0,0,0,0,0",
            "SDXL-MIDALL:1,0,0,0,0,1,0,0,0,0,0,0",
            "SDXL-OUTALL:1,0,0,0,0,0,1,1,1,1,1,1",
            "SDXL-LyC-NONE:0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
            "SDXL-LyC-ALL:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1",
            "SDXL-LyC-INALL:1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0",
            "SDXL-LyC-MIDALL:1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0",
            "SDXL-LyC-OUTALL:1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1",
            "@SD-FULL-TEST:17",
            "@SD-BLOCK1-TEST:17,12,1",
            "@SD-BLOCK2-TEST:17,12,2",
            "@SD-BLOCK3-TEST:17,12,3",
            "@SD-BLOCK4-TEST:17,12,4",
            "@SD-BLOCK5-TEST:17,12,5",
            "@SD-BLOCK6-TEST:17,12,6",
            "@SD-BLOCK7-TEST:17,12,7",
            "@SD-BLOCK8-TEST:17,12,8",
            "@SD-BLOCK9-TEST:17,12,9",
            "@SD-BLOCK10-TEST:17,12,10",
            "@SD-BLOCK11-TEST:17,12,11",
            "@SD-BLOCK12-TEST:17,12,12",
            "@SD-BLOCK13-TEST:17,12,13",
            "@SD-BLOCK14-TEST:17,12,14",
            "@SD-BLOCK15-TEST:17,12,15",
            "@SD-BLOCK16-TEST:17,12,16",
            "@SD-BLOCK17-TEST:17,12,17",
            "@SD-LyC-FULL-TEST:27",
            "@SDXL-FULL-TEST:12",
            "@SDXL-LyC-FULL-TEST:21"
          ]
        ],
        "block_vectors": [
          "STRING",
          {
            "multiline": true,
            "default": "SD-NONE/SD-ALL\nSD-ALL/SD-ALL\nSD-INS/SD-ALL\nSD-IND/SD-ALL\nSD-INALL/SD-ALL\nSD-MIDD/SD-ALL\nSD-MIDD0.2/SD-ALL\nSD-MIDD0.8/SD-ALL\nSD-MOUT/SD-ALL\nSD-OUTD/SD-ALL\nSD-OUTS/SD-ALL\nSD-OUTALL/SD-ALL",
            "placeholder": "{target vector}/{reference vector}",
            "pysssss.autocomplete": false
          }
        ],
        "heatmap_palette": [
          ["viridis", "magma", "plasma", "inferno", "cividis"]
        ],
        "heatmap_alpha": [
          "FLOAT",
          {
            "default": 0.8,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "heatmap_strength": [
          "FLOAT",
          {
            "default": 1.5,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "xyplot_mode": [["Simple", "Diff", "Diff+Heatmap"]]
      }
    },
    "output": ["XY", "XY"],
    "output_is_list": [false, false],
    "output_name": ["X (vectors)", "Y (effect_compares)"],
    "name": "XY Input: Lora Block Weight //Inspire",
    "display_name": "XY Input: Lora Block Weight",
    "description": "",
    "category": "InspirePack/LoraBlockWeight",
    "output_node": false
  },
  "LoraLoaderBlockWeight //Inspire": {
    "input": {
      "required": {
        "model": ["MODEL"],
        "clip": ["CLIP"],
        "category_filter": [["All", ""]],
        "lora_name": [
          [
            "Ahri.safetensors",
            "Belle-v1-01.safetensors",
            "BelleV2.safetensors",
            "Blackpink_Fusion.safetensors",
            "Broken_Covenant_Miss_Fortune.safetensors",
            "Coven_Ahri.safetensors",
            "Coven_Zyra.safetensors",
            "Firecracker_Diana.safetensors",
            "GoodHands-beta2.safetensors",
            "HOTD.safetensors",
            "Irelia.safetensors",
            "KDA_Ahri_Prestige_Edition.safetensors",
            "KDA_All_Out_Ahri.safetensors",
            "Lucy_Cyberpunk.safetensors",
            "Miss_Fortune.safetensors",
            "Pool_Party_Miss_Fortune.safetensors",
            "Star_Guardian_Ahri.safetensors",
            "Winterblessed_Diana.safetensors",
            "fc2318a3-8d41-4dd7-8a8d-91410d7b4ee3.safetensors"
          ]
        ],
        "strength_model": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "strength_clip": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "inverse": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "True",
            "label_off": "False"
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e19
          }
        ],
        "A": [
          "FLOAT",
          {
            "default": 4,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "B": [
          "FLOAT",
          {
            "default": 1,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ],
        "preset": [
          [
            "Preset",
            "SD-NONE:0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
            "SD-ALL:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1",
            "SD-INS:1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0",
            "SD-IND:1,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0",
            "SD-INALL:1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0",
            "SD-MIDD:1,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0",
            "SD-MIDD0.2:1,0,0,0,0,0,0.2,0.4,0.4,0.2,0,0,0,0,0,0,0",
            "SD-MIDD0.8:1,0,0,0,0,0.5,0.8,0.8,0.4,0,0,0,0,0,0,0,0",
            "SD-MOUT:1,0,0,0,0,0,1,1,1,1,1,1,1,1,0.5,0,0",
            "SD-OUTD:1,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0",
            "SD-OUTS:1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1",
            "SD-OUTALL:1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1",
            "SD-ROUT:1,1,1,1,1,1,1,1,R,R,R,R,R,R,R,R,R",
            "SD-AOUT:A,1,1,1,1,1,1,1,1,1,1,1,A,A,A,A,A",
            "SD-AB:A,B,B,B,B,B,B,B,B,B,B,B,A,A,A,A,A",
            "SD-ALL0.5:0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5",
            "SD-LyC-NONE:0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
            "SD-LyC-ALL:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1",
            "SD-LyC-INALL:1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
            "SD-LyC-MIDALL:1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0",
            "SD-LyC-OUTALL:1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1",
            "SDXL-NONE:0,0,0,0,0,0,0,0,0,0,0,0",
            "SDXL-ALL:1,1,1,1,1,1,1,1,1,1,1,1",
            "SDXL-INALL:1,1,1,1,1,0,0,0,0,0,0,0",
            "SDXL-MIDALL:1,0,0,0,0,1,0,0,0,0,0,0",
            "SDXL-OUTALL:1,0,0,0,0,0,1,1,1,1,1,1",
            "SDXL-LyC-NONE:0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
            "SDXL-LyC-ALL:1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1",
            "SDXL-LyC-INALL:1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0",
            "SDXL-LyC-MIDALL:1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0",
            "SDXL-LyC-OUTALL:1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1"
          ]
        ],
        "block_vector": [
          "STRING",
          {
            "multiline": true,
            "placeholder": "block weight vectors",
            "default": "1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1",
            "pysssss.autocomplete": false
          }
        ],
        "bypass": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "True",
            "label_off": "False"
          }
        ]
      }
    },
    "output": ["MODEL", "CLIP", "STRING"],
    "output_is_list": [false, false, false],
    "output_name": ["model", "clip", "populated_vector"],
    "name": "LoraLoaderBlockWeight //Inspire",
    "display_name": "Lora Loader (Block Weight)",
    "description": "",
    "category": "InspirePack/LoraBlockWeight",
    "output_node": false
  },
  "LoraBlockInfo //Inspire": {
    "input": {
      "required": {
        "model": ["MODEL"],
        "clip": ["CLIP"],
        "lora_name": [
          [
            "Ahri.safetensors",
            "Belle-v1-01.safetensors",
            "BelleV2.safetensors",
            "Blackpink_Fusion.safetensors",
            "Broken_Covenant_Miss_Fortune.safetensors",
            "Coven_Ahri.safetensors",
            "Coven_Zyra.safetensors",
            "Firecracker_Diana.safetensors",
            "GoodHands-beta2.safetensors",
            "HOTD.safetensors",
            "Irelia.safetensors",
            "KDA_Ahri_Prestige_Edition.safetensors",
            "KDA_All_Out_Ahri.safetensors",
            "Lucy_Cyberpunk.safetensors",
            "Miss_Fortune.safetensors",
            "Pool_Party_Miss_Fortune.safetensors",
            "Star_Guardian_Ahri.safetensors",
            "Winterblessed_Diana.safetensors",
            "fc2318a3-8d41-4dd7-8a8d-91410d7b4ee3.safetensors"
          ]
        ],
        "block_info": [
          "STRING",
          {
            "multiline": true
          }
        ]
      },
      "hidden": {
        "unique_id": "UNIQUE_ID"
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "LoraBlockInfo //Inspire",
    "display_name": "Lora Block Info",
    "description": "",
    "category": "InspirePack/LoraBlockWeight",
    "output_node": true
  },
  "OpenPose_Preprocessor_Provider_for_SEGS //Inspire": {
    "input": {
      "required": {
        "detect_hand": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enable",
            "label_off": "disable"
          }
        ],
        "detect_body": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enable",
            "label_off": "disable"
          }
        ],
        "detect_face": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enable",
            "label_off": "disable"
          }
        ],
        "resolution_upscale_by": [
          "FLOAT",
          {
            "default": 1,
            "min": 0.5,
            "max": 100,
            "step": 0.1
          }
        ]
      }
    },
    "output": ["SEGS_PREPROCESSOR"],
    "output_is_list": [false],
    "output_name": ["SEGS_PREPROCESSOR"],
    "name": "OpenPose_Preprocessor_Provider_for_SEGS //Inspire",
    "display_name": "OpenPose Preprocessor Provider (SEGS)",
    "description": "",
    "category": "InspirePack/SEGS/ControlNet",
    "output_node": false
  },
  "DWPreprocessor_Provider_for_SEGS //Inspire": {
    "input": {
      "required": {
        "detect_hand": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enable",
            "label_off": "disable"
          }
        ],
        "detect_body": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enable",
            "label_off": "disable"
          }
        ],
        "detect_face": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enable",
            "label_off": "disable"
          }
        ],
        "resolution_upscale_by": [
          "FLOAT",
          {
            "default": 1,
            "min": 0.5,
            "max": 100,
            "step": 0.1
          }
        ]
      }
    },
    "output": ["SEGS_PREPROCESSOR"],
    "output_is_list": [false],
    "output_name": ["SEGS_PREPROCESSOR"],
    "name": "DWPreprocessor_Provider_for_SEGS //Inspire",
    "display_name": "DWPreprocessor Provider (SEGS)",
    "description": "",
    "category": "InspirePack/SEGS/ControlNet",
    "output_node": false
  },
  "MiDaS_DepthMap_Preprocessor_Provider_for_SEGS //Inspire": {
    "input": {
      "required": {
        "a": [
          "FLOAT",
          {
            "default": 6.28318530717959,
            "min": 0,
            "max": 15.707963267949,
            "step": 0.05
          }
        ],
        "bg_threshold": [
          "FLOAT",
          {
            "default": 0.1,
            "min": 0,
            "max": 1,
            "step": 0.05
          }
        ]
      }
    },
    "output": ["SEGS_PREPROCESSOR"],
    "output_is_list": [false],
    "output_name": ["SEGS_PREPROCESSOR"],
    "name": "MiDaS_DepthMap_Preprocessor_Provider_for_SEGS //Inspire",
    "display_name": "MiDaS Depth Map Preprocessor Provider (SEGS)",
    "description": "",
    "category": "InspirePack/SEGS/ControlNet",
    "output_node": false
  },
  "LeRes_DepthMap_Preprocessor_Provider_for_SEGS //Inspire": {
    "input": {
      "required": {
        "rm_nearest": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 100,
            "step": 0.1
          }
        ],
        "rm_background": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 100,
            "step": 0.1
          }
        ]
      },
      "optional": {
        "boost": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enable",
            "label_off": "disable"
          }
        ]
      }
    },
    "output": ["SEGS_PREPROCESSOR"],
    "output_is_list": [false],
    "output_name": ["SEGS_PREPROCESSOR"],
    "name": "LeRes_DepthMap_Preprocessor_Provider_for_SEGS //Inspire",
    "display_name": "LeReS Depth Map Preprocessor Provider (SEGS)",
    "description": "",
    "category": "InspirePack/SEGS/ControlNet",
    "output_node": false
  },
  "Canny_Preprocessor_Provider_for_SEGS //Inspire": {
    "input": {
      "required": {
        "low_threshold": [
          "FLOAT",
          {
            "default": 0.4,
            "min": 0.01,
            "max": 0.99,
            "step": 0.01
          }
        ],
        "high_threshold": [
          "FLOAT",
          {
            "default": 0.8,
            "min": 0.01,
            "max": 0.99,
            "step": 0.01
          }
        ]
      }
    },
    "output": ["SEGS_PREPROCESSOR"],
    "output_is_list": [false],
    "output_name": ["SEGS_PREPROCESSOR"],
    "name": "Canny_Preprocessor_Provider_for_SEGS //Inspire",
    "display_name": "Canny Preprocessor Provider (SEGS)",
    "description": "",
    "category": "InspirePack/SEGS/ControlNet",
    "output_node": false
  },
  "MediaPipe_FaceMesh_Preprocessor_Provider_for_SEGS //Inspire": {
    "input": {
      "required": {
        "max_faces": [
          "INT",
          {
            "default": 10,
            "min": 1,
            "max": 50,
            "step": 1
          }
        ],
        "min_confidence": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.01,
            "max": 1,
            "step": 0.01
          }
        ],
        "resolution_upscale_by": [
          "FLOAT",
          {
            "default": 1,
            "min": 0.5,
            "max": 100,
            "step": 0.1
          }
        ]
      }
    },
    "output": ["SEGS_PREPROCESSOR"],
    "output_is_list": [false],
    "output_name": ["SEGS_PREPROCESSOR"],
    "name": "MediaPipe_FaceMesh_Preprocessor_Provider_for_SEGS //Inspire",
    "display_name": "MediaPipe FaceMesh Preprocessor Provider (SEGS)",
    "description": "",
    "category": "InspirePack/SEGS/ControlNet",
    "output_node": false
  },
  "HEDPreprocessor_Provider_for_SEGS //Inspire": {
    "input": {
      "required": {
        "safe": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enable",
            "label_off": "disable"
          }
        ]
      }
    },
    "output": ["SEGS_PREPROCESSOR"],
    "output_is_list": [false],
    "output_name": ["SEGS_PREPROCESSOR"],
    "name": "HEDPreprocessor_Provider_for_SEGS //Inspire",
    "display_name": "HED Preprocessor Provider (SEGS)",
    "description": "",
    "category": "InspirePack/SEGS/ControlNet",
    "output_node": false
  },
  "FakeScribblePreprocessor_Provider_for_SEGS //Inspire": {
    "input": {
      "required": {
        "safe": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enable",
            "label_off": "disable"
          }
        ]
      }
    },
    "output": ["SEGS_PREPROCESSOR"],
    "output_is_list": [false],
    "output_name": ["SEGS_PREPROCESSOR"],
    "name": "FakeScribblePreprocessor_Provider_for_SEGS //Inspire",
    "display_name": "Fake Scribble Preprocessor Provider (SEGS)",
    "description": "",
    "category": "InspirePack/SEGS/ControlNet",
    "output_node": false
  },
  "AnimeLineArt_Preprocessor_Provider_for_SEGS //Inspire": {
    "input": {
      "required": {}
    },
    "output": ["SEGS_PREPROCESSOR"],
    "output_is_list": [false],
    "output_name": ["SEGS_PREPROCESSOR"],
    "name": "AnimeLineArt_Preprocessor_Provider_for_SEGS //Inspire",
    "display_name": "AnimeLineArt Preprocessor Provider (SEGS)",
    "description": "",
    "category": "InspirePack/SEGS/ControlNet",
    "output_node": false
  },
  "Manga2Anime_LineArt_Preprocessor_Provider_for_SEGS //Inspire": {
    "input": {
      "required": {}
    },
    "output": ["SEGS_PREPROCESSOR"],
    "output_is_list": [false],
    "output_name": ["SEGS_PREPROCESSOR"],
    "name": "Manga2Anime_LineArt_Preprocessor_Provider_for_SEGS //Inspire",
    "display_name": "Manga2Anime LineArt Preprocessor Provider (SEGS)",
    "description": "",
    "category": "InspirePack/SEGS/ControlNet",
    "output_node": false
  },
  "LineArt_Preprocessor_Provider_for_SEGS //Inspire": {
    "input": {
      "required": {
        "coarse": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enable",
            "label_off": "disable"
          }
        ]
      }
    },
    "output": ["SEGS_PREPROCESSOR"],
    "output_is_list": [false],
    "output_name": ["SEGS_PREPROCESSOR"],
    "name": "LineArt_Preprocessor_Provider_for_SEGS //Inspire",
    "display_name": "LineArt Preprocessor Provider (SEGS)",
    "description": "",
    "category": "InspirePack/SEGS/ControlNet",
    "output_node": false
  },
  "Color_Preprocessor_Provider_for_SEGS //Inspire": {
    "input": {
      "required": {}
    },
    "output": ["SEGS_PREPROCESSOR"],
    "output_is_list": [false],
    "output_name": ["SEGS_PREPROCESSOR"],
    "name": "Color_Preprocessor_Provider_for_SEGS //Inspire",
    "display_name": "Color Preprocessor Provider (SEGS)",
    "description": "",
    "category": "InspirePack/SEGS/ControlNet",
    "output_node": false
  },
  "InpaintPreprocessor_Provider_for_SEGS //Inspire": {
    "input": {
      "required": {}
    },
    "output": ["SEGS_PREPROCESSOR"],
    "output_is_list": [false],
    "output_name": ["SEGS_PREPROCESSOR"],
    "name": "InpaintPreprocessor_Provider_for_SEGS //Inspire",
    "display_name": "Inpaint Preprocessor Provider (SEGS)",
    "description": "",
    "category": "InspirePack/SEGS/ControlNet",
    "output_node": false
  },
  "TilePreprocessor_Provider_for_SEGS //Inspire": {
    "input": {
      "required": {
        "pyrUp_iters": [
          "INT",
          {
            "default": 3,
            "min": 1,
            "max": 10,
            "step": 1
          }
        ]
      }
    },
    "output": ["SEGS_PREPROCESSOR"],
    "output_is_list": [false],
    "output_name": ["SEGS_PREPROCESSOR"],
    "name": "TilePreprocessor_Provider_for_SEGS //Inspire",
    "display_name": "Tile Preprocessor Provider (SEGS)",
    "description": "",
    "category": "InspirePack/SEGS/ControlNet",
    "output_node": false
  },
  "MeshGraphormerDepthMapPreprocessorProvider_for_SEGS //Inspire": {
    "input": {
      "required": {}
    },
    "output": ["SEGS_PREPROCESSOR"],
    "output_is_list": [false],
    "output_name": ["SEGS_PREPROCESSOR"],
    "name": "MeshGraphormerDepthMapPreprocessorProvider_for_SEGS //Inspire",
    "display_name": "MeshGraphormer Depth Map Preprocessor Provider (SEGS)",
    "description": "",
    "category": "InspirePack/SEGS/ControlNet",
    "output_node": false
  },
  "MediaPipeFaceMeshDetectorProvider //Inspire": {
    "input": {
      "required": {
        "max_faces": [
          "INT",
          {
            "default": 10,
            "min": 1,
            "max": 50,
            "step": 1
          }
        ],
        "face": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enable",
            "label_off": "disable"
          }
        ],
        "mouth": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enable",
            "label_off": "disable"
          }
        ],
        "left_eyebrow": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enable",
            "label_off": "disable"
          }
        ],
        "left_eye": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enable",
            "label_off": "disable"
          }
        ],
        "left_pupil": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enable",
            "label_off": "disable"
          }
        ],
        "right_eyebrow": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enable",
            "label_off": "disable"
          }
        ],
        "right_eye": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enable",
            "label_off": "disable"
          }
        ],
        "right_pupil": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enable",
            "label_off": "disable"
          }
        ]
      }
    },
    "output": ["BBOX_DETECTOR", "SEGM_DETECTOR"],
    "output_is_list": [false, false],
    "output_name": ["BBOX_DETECTOR", "SEGM_DETECTOR"],
    "name": "MediaPipeFaceMeshDetectorProvider //Inspire",
    "display_name": "MediaPipeFaceMesh Detector Provider",
    "description": "",
    "category": "InspirePack/Detector",
    "output_node": false
  },
  "KSampler //Inspire": {
    "input": {
      "required": {
        "model": ["MODEL"],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e19
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8,
            "min": 0,
            "max": 100
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "positive": ["CONDITIONING"],
        "negative": ["CONDITIONING"],
        "latent_image": ["LATENT"],
        "denoise": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "noise_mode": [["GPU(=A1111)", "CPU"]],
        "batch_seed_mode": [
          [
            "incremental",
            "comfy",
            "variation str inc:0.01",
            "variation str inc:0.05"
          ]
        ],
        "variation_seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e19
          }
        ],
        "variation_strength": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": ["LATENT"],
    "output_is_list": [false],
    "output_name": ["LATENT"],
    "name": "KSampler //Inspire",
    "display_name": "KSampler (inspire)",
    "description": "",
    "category": "InspirePack/a1111_compat",
    "output_node": false
  },
  "KSamplerAdvanced //Inspire": {
    "input": {
      "required": {
        "model": ["MODEL"],
        "add_noise": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enable",
            "label_off": "disable"
          }
        ],
        "noise_seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e19
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8,
            "min": 0,
            "max": 100,
            "step": 0.5,
            "round": 0.01
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "positive": ["CONDITIONING"],
        "negative": ["CONDITIONING"],
        "latent_image": ["LATENT"],
        "start_at_step": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 10000
          }
        ],
        "end_at_step": [
          "INT",
          {
            "default": 10000,
            "min": 0,
            "max": 10000
          }
        ],
        "noise_mode": [["GPU(=A1111)", "CPU"]],
        "return_with_leftover_noise": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enable",
            "label_off": "disable"
          }
        ],
        "batch_seed_mode": [
          [
            "incremental",
            "comfy",
            "variation str inc:0.01",
            "variation str inc:0.05"
          ]
        ],
        "variation_seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e19
          }
        ],
        "variation_strength": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      },
      "optional": {
        "noise_opt": ["NOISE"]
      }
    },
    "output": ["LATENT"],
    "output_is_list": [false],
    "output_name": ["LATENT"],
    "name": "KSamplerAdvanced //Inspire",
    "display_name": "KSamplerAdvanced (inspire)",
    "description": "",
    "category": "InspirePack/a1111_compat",
    "output_node": false
  },
  "KSamplerPipe //Inspire": {
    "input": {
      "required": {
        "basic_pipe": ["BASIC_PIPE"],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e19
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8,
            "min": 0,
            "max": 100
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "latent_image": ["LATENT"],
        "denoise": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "noise_mode": [["GPU(=A1111)", "CPU"]],
        "batch_seed_mode": [
          [
            "incremental",
            "comfy",
            "variation str inc:0.01",
            "variation str inc:0.05"
          ]
        ],
        "variation_seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e19
          }
        ],
        "variation_strength": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      }
    },
    "output": ["LATENT", "VAE"],
    "output_is_list": [false, false],
    "output_name": ["LATENT", "VAE"],
    "name": "KSamplerPipe //Inspire",
    "display_name": "KSampler [pipe] (inspire)",
    "description": "",
    "category": "InspirePack/a1111_compat",
    "output_node": false
  },
  "KSamplerAdvancedPipe //Inspire": {
    "input": {
      "required": {
        "basic_pipe": ["BASIC_PIPE"],
        "add_noise": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enable",
            "label_off": "disable"
          }
        ],
        "noise_seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e19
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8,
            "min": 0,
            "max": 100,
            "step": 0.5,
            "round": 0.01
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "latent_image": ["LATENT"],
        "start_at_step": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 10000
          }
        ],
        "end_at_step": [
          "INT",
          {
            "default": 10000,
            "min": 0,
            "max": 10000
          }
        ],
        "noise_mode": [["GPU(=A1111)", "CPU"]],
        "return_with_leftover_noise": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enable",
            "label_off": "disable"
          }
        ],
        "batch_seed_mode": [
          [
            "incremental",
            "comfy",
            "variation str inc:0.01",
            "variation str inc:0.05"
          ]
        ],
        "variation_seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e19
          }
        ],
        "variation_strength": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ]
      },
      "optional": {
        "noise_opt": ["NOISE"]
      }
    },
    "output": ["LATENT", "VAE"],
    "output_is_list": [false, false],
    "output_name": ["LATENT", "VAE"],
    "name": "KSamplerAdvancedPipe //Inspire",
    "display_name": "KSamplerAdvanced [pipe] (inspire)",
    "description": "",
    "category": "InspirePack/a1111_compat",
    "output_node": false
  },
  "HyperTile //Inspire": {
    "input": {
      "required": {
        "model": ["MODEL"],
        "tile_size": [
          "INT",
          {
            "default": 256,
            "min": 1,
            "max": 2048
          }
        ],
        "swap_size": [
          "INT",
          {
            "default": 2,
            "min": 1,
            "max": 128
          }
        ],
        "max_depth": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 10
          }
        ],
        "scale_depth": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e19
          }
        ]
      }
    },
    "output": ["MODEL"],
    "output_is_list": [false],
    "output_name": ["MODEL"],
    "name": "HyperTile //Inspire",
    "display_name": "HyperTile (Inspire)",
    "description": "",
    "category": "InspirePack/__for_testing",
    "output_node": false
  },
  "LoadPromptsFromDir //Inspire": {
    "input": {
      "required": {
        "prompt_dir": [["example"]]
      }
    },
    "output": ["ZIPPED_PROMPT"],
    "output_is_list": [true],
    "output_name": ["ZIPPED_PROMPT"],
    "name": "LoadPromptsFromDir //Inspire",
    "display_name": "Load Prompts From Dir (Inspire)",
    "description": "",
    "category": "InspirePack/Prompt",
    "output_node": false
  },
  "LoadPromptsFromFile //Inspire": {
    "input": {
      "required": {
        "prompt_file": [["example/prompt2.txt", "example/prompt1.txt"]]
      }
    },
    "output": ["ZIPPED_PROMPT"],
    "output_is_list": [true],
    "output_name": ["ZIPPED_PROMPT"],
    "name": "LoadPromptsFromFile //Inspire",
    "display_name": "Load Prompts From File (Inspire)",
    "description": "",
    "category": "InspirePack/Prompt",
    "output_node": false
  },
  "LoadSinglePromptFromFile //Inspire": {
    "input": {
      "required": {
        "prompt_file": [["example/prompt2.txt", "example/prompt1.txt"]],
        "index": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e19
          }
        ]
      }
    },
    "output": ["ZIPPED_PROMPT"],
    "output_is_list": [true],
    "output_name": ["ZIPPED_PROMPT"],
    "name": "LoadSinglePromptFromFile //Inspire",
    "display_name": "Load Single Prompt From File (Inspire)",
    "description": "",
    "category": "InspirePack/Prompt",
    "output_node": false
  },
  "UnzipPrompt //Inspire": {
    "input": {
      "required": {
        "zipped_prompt": ["ZIPPED_PROMPT"]
      }
    },
    "output": ["STRING", "STRING", "STRING"],
    "output_is_list": [false, false, false],
    "output_name": ["positive", "negative", "name"],
    "name": "UnzipPrompt //Inspire",
    "display_name": "Unzip Prompt (Inspire)",
    "description": "",
    "category": "InspirePack/Prompt",
    "output_node": false
  },
  "ZipPrompt //Inspire": {
    "input": {
      "required": {
        "positive": [
          "STRING",
          {
            "forceInput": true,
            "multiline": true
          }
        ],
        "negative": [
          "STRING",
          {
            "forceInput": true,
            "multiline": true
          }
        ]
      },
      "optional": {
        "name_opt": [
          "STRING",
          {
            "forceInput": true,
            "multiline": false
          }
        ]
      }
    },
    "output": ["ZIPPED_PROMPT"],
    "output_is_list": [false],
    "output_name": ["ZIPPED_PROMPT"],
    "name": "ZipPrompt //Inspire",
    "display_name": "Zip Prompt (Inspire)",
    "description": "",
    "category": "InspirePack/Prompt",
    "output_node": false
  },
  "PromptExtractor //Inspire": {
    "input": {
      "required": {
        "image": [
          ["example.png"],
          {
            "image_upload": true
          }
        ],
        "positive_id": ["STRING", {}],
        "negative_id": ["STRING", {}],
        "info": [
          "STRING",
          {
            "multiline": true
          }
        ]
      },
      "hidden": {
        "unique_id": "UNIQUE_ID"
      }
    },
    "output": ["STRING", "STRING"],
    "output_is_list": [false, false],
    "output_name": ["positive", "negative"],
    "name": "PromptExtractor //Inspire",
    "display_name": "Prompt Extractor (Inspire)",
    "description": "",
    "category": "InspirePack/Prompt",
    "output_node": true
  },
  "GlobalSeed //Inspire": {
    "input": {
      "required": {
        "value": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e19
          }
        ],
        "mode": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "control_before_generate",
            "label_off": "control_after_generate"
          }
        ],
        "action": [
          [
            "fixed",
            "increment",
            "decrement",
            "randomize",
            "increment for each node",
            "decrement for each node",
            "randomize for each node"
          ]
        ],
        "last_seed": [
          "STRING",
          {
            "default": ""
          }
        ]
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "GlobalSeed //Inspire",
    "display_name": "Global Seed (Inspire)",
    "description": "",
    "category": "InspirePack/Prompt",
    "output_node": true
  },
  "GlobalSampler //Inspire": {
    "input": {
      "required": {
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ]
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "GlobalSampler //Inspire",
    "display_name": "Global Sampler (Inspire)",
    "description": "",
    "category": "InspirePack/Prompt",
    "output_node": true
  },
  "BindImageListPromptList //Inspire": {
    "input": {
      "required": {
        "images": ["IMAGE"],
        "zipped_prompts": ["ZIPPED_PROMPT"],
        "default_positive": [
          "STRING",
          {
            "multiline": true,
            "placeholder": "default positive"
          }
        ],
        "default_negative": [
          "STRING",
          {
            "multiline": true,
            "placeholder": "default negative"
          }
        ]
      }
    },
    "output": ["IMAGE", "STRING", "STRING", "STRING"],
    "output_is_list": [true, true, true],
    "output_name": ["image", "positive", "negative", "prompt_label"],
    "name": "BindImageListPromptList //Inspire",
    "display_name": "Bind [ImageList, PromptList] (Inspire)",
    "description": "",
    "category": "InspirePack/Prompt",
    "output_node": false
  },
  "WildcardEncode //Inspire": {
    "input": {
      "required": {
        "model": ["MODEL"],
        "clip": ["CLIP"],
        "token_normalization": [["none", "mean", "length", "length+mean"]],
        "weight_interpretation": [
          ["comfy", "A1111", "compel", "comfy++", "down_weight"],
          {
            "default": "comfy++"
          }
        ],
        "wildcard_text": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": false,
            "placeholder": "Wildcard Prompt (User Input)"
          }
        ],
        "populated_text": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": false,
            "placeholder": "Populated Prompt (Will be generated automatically)"
          }
        ],
        "mode": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "Populate",
            "label_off": "Fixed"
          }
        ],
        "Select to add LoRA": [
          [
            "Select the LoRA to add to the text",
            "Ahri.safetensors",
            "Belle-v1-01.safetensors",
            "BelleV2.safetensors",
            "Blackpink_Fusion.safetensors",
            "Broken_Covenant_Miss_Fortune.safetensors",
            "Coven_Ahri.safetensors",
            "Coven_Zyra.safetensors",
            "Firecracker_Diana.safetensors",
            "GoodHands-beta2.safetensors",
            "HOTD.safetensors",
            "Irelia.safetensors",
            "KDA_Ahri_Prestige_Edition.safetensors",
            "KDA_All_Out_Ahri.safetensors",
            "Lucy_Cyberpunk.safetensors",
            "Miss_Fortune.safetensors",
            "Pool_Party_Miss_Fortune.safetensors",
            "Star_Guardian_Ahri.safetensors",
            "Winterblessed_Diana.safetensors",
            "fc2318a3-8d41-4dd7-8a8d-91410d7b4ee3.safetensors"
          ]
        ],
        "Select to add Wildcard": [["Select the Wildcard to add to the text"]],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e19
          }
        ]
      }
    },
    "output": ["MODEL", "CLIP", "CONDITIONING", "STRING"],
    "output_is_list": [false, false, false, false],
    "output_name": ["model", "clip", "conditioning", "populated_text"],
    "name": "WildcardEncode //Inspire",
    "display_name": "Wildcard Encode (Inspire)",
    "description": "",
    "category": "InspirePack/Prompt",
    "output_node": false
  },
  "PromptBuilder //Inspire": {
    "input": {
      "required": {
        "category": [
          [
            "Angle of View",
            "Artists",
            "Character Types",
            "Colors",
            "Composition",
            "Composition Form",
            "Lighting",
            "Negative",
            "Picture Effect",
            "Picture Quality",
            "Setting",
            "Shot",
            "Style",
            "#PLACEHOLDER"
          ]
        ],
        "preset": [["#PRESET"]],
        "text": [
          "STRING",
          {
            "multiline": true
          }
        ]
      }
    },
    "output": ["STRING"],
    "output_is_list": [false],
    "output_name": ["STRING"],
    "name": "PromptBuilder //Inspire",
    "display_name": "Prompt Builder (Inspire)",
    "description": "",
    "category": "InspirePack/Prompt",
    "output_node": false
  },
  "SeedExplorer //Inspire": {
    "input": {
      "required": {
        "latent": ["LATENT"],
        "seed_prompt": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": false,
            "pysssss.autocomplete": false
          }
        ],
        "enable_additional": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "true",
            "label_off": "false"
          }
        ],
        "additional_seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e19
          }
        ],
        "additional_strength": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "noise_mode": [["GPU(=A1111)", "CPU"]],
        "initial_batch_seed_mode": [["incremental", "comfy"]]
      }
    },
    "output": ["NOISE"],
    "output_is_list": [false],
    "output_name": ["NOISE"],
    "name": "SeedExplorer //Inspire",
    "display_name": "Seed Explorer (Inspire)",
    "description": "",
    "category": "InspirePack/Prompt",
    "output_node": false
  },
  "ListCounter //Inspire": {
    "input": {
      "required": {
        "signal": ["*"],
        "base_value": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e19
          }
        ]
      },
      "hidden": {
        "unique_id": "UNIQUE_ID"
      }
    },
    "output": ["INT"],
    "output_is_list": [false],
    "output_name": ["INT"],
    "name": "ListCounter //Inspire",
    "display_name": "List Counter (Inspire)",
    "description": "",
    "category": "InspirePack/Util",
    "output_node": false
  },
  "CLIPTextEncodeWithWeight //Inspire": {
    "input": {
      "required": {
        "text": [
          "STRING",
          {
            "multiline": true
          }
        ],
        "clip": ["CLIP"],
        "strength": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "add_weight": [
          "FLOAT",
          {
            "default": 0,
            "min": -10,
            "max": 10,
            "step": 0.01
          }
        ]
      }
    },
    "output": ["CONDITIONING"],
    "output_is_list": [false],
    "output_name": ["CONDITIONING"],
    "name": "CLIPTextEncodeWithWeight //Inspire",
    "display_name": "CLIPTextEncodeWithWeight (Inspire)",
    "description": "",
    "category": "InspirePack/Util",
    "output_node": false
  },
  "RandomGeneratorForList //Inspire": {
    "input": {
      "required": {
        "signal": ["*"],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e19
          }
        ]
      },
      "hidden": {
        "unique_id": "UNIQUE_ID"
      }
    },
    "output": ["*", "INT"],
    "output_is_list": [false, false],
    "output_name": ["signal", "random_value"],
    "name": "RandomGeneratorForList //Inspire",
    "display_name": "Random Generator for List (Inspire)",
    "description": "",
    "category": "InspirePack/Util",
    "output_node": false
  },
  "MakeBasicPipe //Inspire": {
    "input": {
      "required": {
        "ckpt_name": [
          [
            "Aniverse.safetensors",
            "Desync Image v5.safetensors",
            "MajicMix.safetensors",
            "Realistic Vision.safetensors",
            "darkSushi25D25D_v40.safetensors",
            "darksun_v41.safetensors",
            "era09_v10.safetensors",
            "pasteldiffusedmix.safetensors",
            "richyrichmix_V2Fp16.safetensors"
          ]
        ],
        "ckpt_key_opt": [
          "STRING",
          {
            "multiline": false,
            "placeholder": "If empty, use 'ckpt_name' as the key."
          }
        ],
        "positive_wildcard_text": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": false,
            "placeholder": "Positive Prompt (User Input)"
          }
        ],
        "negative_wildcard_text": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": false,
            "placeholder": "Negative Prompt (User Input)"
          }
        ],
        "Add selection to": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "Positive",
            "label_off": "Negative"
          }
        ],
        "Select to add LoRA": [
          [
            "Select the LoRA to add to the text",
            "Ahri.safetensors",
            "Belle-v1-01.safetensors",
            "BelleV2.safetensors",
            "Blackpink_Fusion.safetensors",
            "Broken_Covenant_Miss_Fortune.safetensors",
            "Coven_Ahri.safetensors",
            "Coven_Zyra.safetensors",
            "Firecracker_Diana.safetensors",
            "GoodHands-beta2.safetensors",
            "HOTD.safetensors",
            "Irelia.safetensors",
            "KDA_Ahri_Prestige_Edition.safetensors",
            "KDA_All_Out_Ahri.safetensors",
            "Lucy_Cyberpunk.safetensors",
            "Miss_Fortune.safetensors",
            "Pool_Party_Miss_Fortune.safetensors",
            "Star_Guardian_Ahri.safetensors",
            "Winterblessed_Diana.safetensors",
            "fc2318a3-8d41-4dd7-8a8d-91410d7b4ee3.safetensors"
          ]
        ],
        "Select to add Wildcard": [["Select the Wildcard to add to the text"]],
        "wildcard_mode": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "Populate",
            "label_off": "Fixed"
          }
        ],
        "positive_populated_text": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": false,
            "placeholder": "Populated Positive Prompt (Will be generated automatically)"
          }
        ],
        "negative_populated_text": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": false,
            "placeholder": "Populated Negative Prompt (Will be generated automatically)"
          }
        ],
        "token_normalization": [["none", "mean", "length", "length+mean"]],
        "weight_interpretation": [
          ["comfy", "A1111", "compel", "comfy++", "down_weight"],
          {
            "default": "comfy++"
          }
        ],
        "stop_at_clip_layer": [
          "INT",
          {
            "default": -2,
            "min": -24,
            "max": -1,
            "step": 1
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e19
          }
        ]
      },
      "optional": {
        "vae_opt": ["VAE"]
      }
    },
    "output": ["BASIC_PIPE", "STRING"],
    "output_is_list": [false, false],
    "output_name": ["basic_pipe", "cache_key"],
    "name": "MakeBasicPipe //Inspire",
    "display_name": "Make Basic Pipe (Inspire)",
    "description": "",
    "category": "InspirePack/Prompt",
    "output_node": false
  },
  "RemoveControlNet //Inspire": {
    "input": {
      "required": {
        "conditioning": ["CONDITIONING"]
      }
    },
    "output": ["CONDITIONING"],
    "output_is_list": [false],
    "output_name": ["CONDITIONING"],
    "name": "RemoveControlNet //Inspire",
    "display_name": "Remove ControlNet (Inspire)",
    "description": "",
    "category": "InspirePack/Util",
    "output_node": false
  },
  "RemoveControlNetFromRegionalPrompts //Inspire": {
    "input": {
      "required": {
        "regional_prompts": ["REGIONAL_PROMPTS"]
      }
    },
    "output": ["REGIONAL_PROMPTS"],
    "output_is_list": [false],
    "output_name": ["REGIONAL_PROMPTS"],
    "name": "RemoveControlNetFromRegionalPrompts //Inspire",
    "display_name": "Remove ControlNet [RegionalPrompts] (Inspire)",
    "description": "",
    "category": "InspirePack/Util",
    "output_node": false
  },
  "LoadImagesFromDir //Inspire": {
    "input": {
      "required": {
        "directory": [
          "STRING",
          {
            "default": ""
          }
        ]
      },
      "optional": {
        "image_load_cap": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "step": 1
          }
        ],
        "start_index": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "step": 1
          }
        ],
        "load_always": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ]
      }
    },
    "output": ["IMAGE", "MASK", "INT"],
    "output_is_list": [false, false, false],
    "output_name": ["IMAGE", "MASK", "INT"],
    "name": "LoadImagesFromDir //Inspire",
    "display_name": "Load Image Batch From Dir (Inspire)",
    "description": "",
    "category": "image",
    "output_node": false
  },
  "LoadImageListFromDir //Inspire": {
    "input": {
      "required": {
        "directory": [
          "STRING",
          {
            "default": ""
          }
        ]
      },
      "optional": {
        "image_load_cap": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "step": 1
          }
        ],
        "start_index": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "step": 1
          }
        ],
        "load_always": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enabled",
            "label_off": "disabled"
          }
        ]
      }
    },
    "output": ["IMAGE", "MASK"],
    "output_is_list": [true, true],
    "output_name": ["IMAGE", "MASK"],
    "name": "LoadImageListFromDir //Inspire",
    "display_name": "Load Image List From Dir (Inspire)",
    "description": "",
    "category": "image",
    "output_node": false
  },
  "LoadImage //Inspire": {
    "input": {
      "required": {
        "image": [
          ["example.png", "#DATA"],
          {
            "image_upload": true
          }
        ],
        "image_data": [
          "STRING",
          {
            "multiline": false
          }
        ]
      }
    },
    "output": ["IMAGE", "MASK"],
    "output_is_list": [false, false],
    "output_name": ["IMAGE", "MASK"],
    "name": "LoadImage //Inspire",
    "display_name": "LoadImage //Inspire",
    "description": "",
    "category": "InspirePack/image",
    "output_node": false
  },
  "ChangeImageBatchSize //Inspire": {
    "input": {
      "required": {
        "image": ["IMAGE"],
        "batch_size": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 4096,
            "step": 1
          }
        ],
        "mode": [["simple"]]
      }
    },
    "output": ["IMAGE"],
    "output_is_list": [false],
    "output_name": ["IMAGE"],
    "name": "ChangeImageBatchSize //Inspire",
    "display_name": "Change Image Batch Size (Inspire)",
    "description": "",
    "category": "InspirePack/image",
    "output_node": false
  },
  "ImageBatchSplitter //Inspire": {
    "input": {
      "required": {
        "images": ["IMAGE"],
        "split_count": [
          "INT",
          {
            "default": 4,
            "min": 0,
            "max": 50,
            "step": 1
          }
        ]
      }
    },
    "output": ["IMAGE"],
    "output_is_list": [false],
    "output_name": ["IMAGE"],
    "name": "ImageBatchSplitter //Inspire",
    "display_name": "Image Batch Splitter (Inspire)",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "LatentBatchSplitter //Inspire": {
    "input": {
      "required": {
        "latent": ["LATENT"],
        "split_count": [
          "INT",
          {
            "default": 4,
            "min": 0,
            "max": 50,
            "step": 1
          }
        ]
      }
    },
    "output": ["LATENT"],
    "output_is_list": [false],
    "output_name": ["LATENT"],
    "name": "LatentBatchSplitter //Inspire",
    "display_name": "Latent Batch Splitter (Inspire)",
    "description": "",
    "category": "ImpactPack/Util",
    "output_node": false
  },
  "RegionalPromptSimple //Inspire": {
    "input": {
      "required": {
        "basic_pipe": ["BASIC_PIPE"],
        "mask": ["MASK"],
        "cfg": [
          "FLOAT",
          {
            "default": 8,
            "min": 0,
            "max": 100
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "wildcard_prompt": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": false,
            "placeholder": "wildcard prompt"
          }
        ],
        "controlnet_in_pipe": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "Keep",
            "label_off": "Override"
          }
        ],
        "sigma_factor": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ]
      }
    },
    "output": ["REGIONAL_PROMPTS"],
    "output_is_list": [false],
    "output_name": ["REGIONAL_PROMPTS"],
    "name": "RegionalPromptSimple //Inspire",
    "display_name": "Regional Prompt Simple (Inspire)",
    "description": "",
    "category": "InspirePack/Regional",
    "output_node": false
  },
  "RegionalPromptColorMask //Inspire": {
    "input": {
      "required": {
        "basic_pipe": ["BASIC_PIPE"],
        "color_mask": ["IMAGE"],
        "mask_color": [
          "STRING",
          {
            "multiline": false,
            "default": "#FFFFFF"
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8,
            "min": 0,
            "max": 100
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "wildcard_prompt": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": false,
            "placeholder": "wildcard prompt"
          }
        ],
        "controlnet_in_pipe": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "Keep",
            "label_off": "Override"
          }
        ],
        "sigma_factor": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ]
      }
    },
    "output": ["REGIONAL_PROMPTS", "MASK"],
    "output_is_list": [false, false],
    "output_name": ["REGIONAL_PROMPTS", "MASK"],
    "name": "RegionalPromptColorMask //Inspire",
    "display_name": "Regional Prompt By Color Mask (Inspire)",
    "description": "",
    "category": "InspirePack/Regional",
    "output_node": false
  },
  "RegionalConditioningSimple //Inspire": {
    "input": {
      "required": {
        "clip": ["CLIP"],
        "mask": ["MASK"],
        "strength": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "set_cond_area": [["default", "mask bounds"]],
        "prompt": [
          "STRING",
          {
            "multiline": true,
            "placeholder": "prompt"
          }
        ]
      }
    },
    "output": ["CONDITIONING"],
    "output_is_list": [false],
    "output_name": ["CONDITIONING"],
    "name": "RegionalConditioningSimple //Inspire",
    "display_name": "Regional Conditioning Simple (Inspire)",
    "description": "",
    "category": "InspirePack/Regional",
    "output_node": false
  },
  "RegionalConditioningColorMask //Inspire": {
    "input": {
      "required": {
        "clip": ["CLIP"],
        "color_mask": ["IMAGE"],
        "mask_color": [
          "STRING",
          {
            "multiline": false,
            "default": "#FFFFFF"
          }
        ],
        "strength": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ],
        "set_cond_area": [["default", "mask bounds"]],
        "prompt": [
          "STRING",
          {
            "multiline": true,
            "placeholder": "prompt"
          }
        ]
      }
    },
    "output": ["CONDITIONING", "MASK"],
    "output_is_list": [false, false],
    "output_name": ["CONDITIONING", "MASK"],
    "name": "RegionalConditioningColorMask //Inspire",
    "display_name": "Regional Conditioning By Color Mask (Inspire)",
    "description": "",
    "category": "InspirePack/Regional",
    "output_node": false
  },
  "RegionalIPAdapterMask //Inspire": {
    "input": {
      "required": {
        "mask": ["MASK"],
        "image": ["IMAGE"],
        "weight": [
          "FLOAT",
          {
            "default": 0.7,
            "min": -1,
            "max": 3,
            "step": 0.05
          }
        ],
        "noise": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "weight_type": [["original", "linear", "channel penalty"]],
        "start_at": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "end_at": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "unfold_batch": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      },
      "optional": {
        "faceid_v2": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "weight_v2": [
          "FLOAT",
          {
            "default": 1,
            "min": -1,
            "max": 3,
            "step": 0.05
          }
        ]
      }
    },
    "output": ["REGIONAL_IPADAPTER"],
    "output_is_list": [false],
    "output_name": ["REGIONAL_IPADAPTER"],
    "name": "RegionalIPAdapterMask //Inspire",
    "display_name": "Regional IPAdapter Mask (Inspire)",
    "description": "",
    "category": "InspirePack/Regional",
    "output_node": false
  },
  "RegionalIPAdapterColorMask //Inspire": {
    "input": {
      "required": {
        "color_mask": ["IMAGE"],
        "mask_color": [
          "STRING",
          {
            "multiline": false,
            "default": "#FFFFFF"
          }
        ],
        "image": ["IMAGE"],
        "weight": [
          "FLOAT",
          {
            "default": 0.7,
            "min": -1,
            "max": 3,
            "step": 0.05
          }
        ],
        "noise": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "weight_type": [["original", "linear", "channel penalty"]],
        "start_at": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "end_at": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "unfold_batch": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      },
      "optional": {
        "faceid_v2": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "weight_v2": [
          "FLOAT",
          {
            "default": 1,
            "min": -1,
            "max": 3,
            "step": 0.05
          }
        ]
      }
    },
    "output": ["REGIONAL_IPADAPTER", "MASK"],
    "output_is_list": [false, false],
    "output_name": ["REGIONAL_IPADAPTER", "MASK"],
    "name": "RegionalIPAdapterColorMask //Inspire",
    "display_name": "Regional IPAdapter By Color Mask (Inspire)",
    "description": "",
    "category": "InspirePack/Regional",
    "output_node": false
  },
  "RegionalIPAdapterEncodedMask //Inspire": {
    "input": {
      "required": {
        "mask": ["MASK"],
        "embeds": ["embeds"],
        "weight": [
          "FLOAT",
          {
            "default": 0.7,
            "min": -1,
            "max": 3,
            "step": 0.05
          }
        ],
        "weight_type": [["original", "linear", "channel penalty"]],
        "start_at": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "end_at": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "unfold_batch": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": ["REGIONAL_IPADAPTER"],
    "output_is_list": [false],
    "output_name": ["REGIONAL_IPADAPTER"],
    "name": "RegionalIPAdapterEncodedMask //Inspire",
    "display_name": "Regional IPAdapter Encoded Mask (Inspire)",
    "description": "",
    "category": "InspirePack/Regional",
    "output_node": false
  },
  "RegionalIPAdapterEncodedColorMask //Inspire": {
    "input": {
      "required": {
        "color_mask": ["IMAGE"],
        "mask_color": [
          "STRING",
          {
            "multiline": false,
            "default": "#FFFFFF"
          }
        ],
        "embeds": ["EMBEDS"],
        "weight": [
          "FLOAT",
          {
            "default": 0.7,
            "min": -1,
            "max": 3,
            "step": 0.05
          }
        ],
        "weight_type": [["original", "linear", "channel penalty"]],
        "start_at": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "end_at": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.001
          }
        ],
        "unfold_batch": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": ["REGIONAL_IPADAPTER", "MASK"],
    "output_is_list": [false, false],
    "output_name": ["REGIONAL_IPADAPTER", "MASK"],
    "name": "RegionalIPAdapterEncodedColorMask //Inspire",
    "display_name": "Regional IPAdapter Encoded By Color Mask (Inspire)",
    "description": "",
    "category": "InspirePack/Regional",
    "output_node": false
  },
  "RegionalSeedExplorerMask //Inspire": {
    "input": {
      "required": {
        "mask": ["MASK"],
        "noise": ["NOISE"],
        "seed_prompt": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": false,
            "pysssss.autocomplete": false
          }
        ],
        "enable_additional": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "true",
            "label_off": "false"
          }
        ],
        "additional_seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e19
          }
        ],
        "additional_strength": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "noise_mode": [["GPU(=A1111)", "CPU"]]
      }
    },
    "output": ["NOISE"],
    "output_is_list": [false],
    "output_name": ["NOISE"],
    "name": "RegionalSeedExplorerMask //Inspire",
    "display_name": "Regional Seed Explorer By Mask (Inspire)",
    "description": "",
    "category": "InspirePack/Regional",
    "output_node": false
  },
  "RegionalSeedExplorerColorMask //Inspire": {
    "input": {
      "required": {
        "color_mask": ["IMAGE"],
        "mask_color": [
          "STRING",
          {
            "multiline": false,
            "default": "#FFFFFF"
          }
        ],
        "noise": ["NOISE"],
        "seed_prompt": [
          "STRING",
          {
            "multiline": true,
            "dynamicPrompts": false,
            "pysssss.autocomplete": false
          }
        ],
        "enable_additional": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "true",
            "label_off": "false"
          }
        ],
        "additional_seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e19
          }
        ],
        "additional_strength": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "noise_mode": [["GPU(=A1111)", "CPU"]]
      }
    },
    "output": ["NOISE", "MASK"],
    "output_is_list": [false, false],
    "output_name": ["NOISE", "MASK"],
    "name": "RegionalSeedExplorerColorMask //Inspire",
    "display_name": "Regional Seed Explorer By Color Mask (Inspire)",
    "description": "",
    "category": "InspirePack/Regional",
    "output_node": false
  },
  "ToIPAdapterPipe //Inspire": {
    "input": {
      "required": {
        "ipadapter": ["IPADAPTER"],
        "model": ["MODEL"]
      },
      "optional": {
        "clip_vision": ["CLIP_VISION"],
        "insightface": ["INSIGHTFACE"]
      }
    },
    "output": ["IPADAPTER_PIPE"],
    "output_is_list": [false],
    "output_name": ["IPADAPTER_PIPE"],
    "name": "ToIPAdapterPipe //Inspire",
    "display_name": "ToIPAdapterPipe (Inspire)",
    "description": "",
    "category": "InspirePack/Util",
    "output_node": false
  },
  "FromIPAdapterPipe //Inspire": {
    "input": {
      "required": {
        "ipadapter_pipe": ["IPADAPTER_PIPE"]
      }
    },
    "output": ["ipadapter", "model", "clip_vision", "insight_face"],
    "output_is_list": [false, false, false, false],
    "output_name": ["ipadapter", "model", "clip_vision", "insight_face"],
    "name": "FromIPAdapterPipe //Inspire",
    "display_name": "FromIPAdapterPipe (Inspire)",
    "description": "",
    "category": "InspirePack/Util",
    "output_node": false
  },
  "ApplyRegionalIPAdapters //Inspire": {
    "input": {
      "required": {
        "ipadapter_pipe": ["IPADAPTER_PIPE"],
        "regional_ipadapter1": ["REGIONAL_IPADAPTER"]
      }
    },
    "output": ["MODEL"],
    "output_is_list": [false],
    "output_name": ["MODEL"],
    "name": "ApplyRegionalIPAdapters //Inspire",
    "display_name": "Apply Regional IPAdapters (Inspire)",
    "description": "",
    "category": "InspirePack/Regional",
    "output_node": false
  },
  "KSamplerProgress //Inspire": {
    "input": {
      "required": {
        "model": ["MODEL"],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e19
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8,
            "min": 0,
            "max": 100
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "positive": ["CONDITIONING"],
        "negative": ["CONDITIONING"],
        "latent_image": ["LATENT"],
        "denoise": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 1,
            "step": 0.01
          }
        ],
        "noise_mode": [["GPU(=A1111)", "CPU"]],
        "interval": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 10000
          }
        ],
        "omit_start_latent": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "True",
            "label_off": "False"
          }
        ]
      }
    },
    "output": ["LATENT", "LATENT"],
    "output_is_list": [false, false],
    "output_name": ["latent", "progress_latent"],
    "name": "KSamplerProgress //Inspire",
    "display_name": "KSampler Progress (Inspire)",
    "description": "",
    "category": "InspirePack/analysis",
    "output_node": false
  },
  "KSamplerAdvancedProgress //Inspire": {
    "input": {
      "required": {
        "model": ["MODEL"],
        "add_noise": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enable",
            "label_off": "disable"
          }
        ],
        "noise_seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e19
          }
        ],
        "steps": [
          "INT",
          {
            "default": 20,
            "min": 1,
            "max": 10000
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "default": 8,
            "min": 0,
            "max": 100,
            "step": 0.5,
            "round": 0.01
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_ancestral",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform"
          ]
        ],
        "positive": ["CONDITIONING"],
        "negative": ["CONDITIONING"],
        "latent_image": ["LATENT"],
        "start_at_step": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 10000
          }
        ],
        "end_at_step": [
          "INT",
          {
            "default": 10000,
            "min": 0,
            "max": 10000
          }
        ],
        "noise_mode": [["GPU(=A1111)", "CPU"]],
        "return_with_leftover_noise": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "enable",
            "label_off": "disable"
          }
        ],
        "interval": [
          "INT",
          {
            "default": 1,
            "min": 1,
            "max": 10000
          }
        ],
        "omit_start_latent": [
          "BOOLEAN",
          {
            "default": false,
            "label_on": "True",
            "label_off": "False"
          }
        ]
      },
      "optional": {
        "prev_progress_latent_opt": ["LATENT"]
      }
    },
    "output": ["LATENT", "LATENT"],
    "output_is_list": [false, false],
    "output_name": ["latent", "progress_latent"],
    "name": "KSamplerAdvancedProgress //Inspire",
    "display_name": "KSampler Advanced Progress (Inspire)",
    "description": "",
    "category": "InspirePack/analysis",
    "output_node": false
  },
  "CacheBackendData //Inspire": {
    "input": {
      "required": {
        "key": [
          "STRING",
          {
            "multiline": false,
            "placeholder": "Input data key (e.g. 'model a', 'chunli lora', 'girl latent 3', ...)"
          }
        ],
        "tag": [
          "STRING",
          {
            "multiline": false,
            "placeholder": "Tag: short description"
          }
        ],
        "data": ["*"]
      }
    },
    "output": ["*"],
    "output_is_list": [false],
    "output_name": ["data opt"],
    "name": "CacheBackendData //Inspire",
    "display_name": "Cache Backend Data (Inspire)",
    "description": "",
    "category": "InspirePack/Backend",
    "output_node": true
  },
  "CacheBackendDataNumberKey //Inspire": {
    "input": {
      "required": {
        "key": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e19
          }
        ],
        "tag": [
          "STRING",
          {
            "multiline": false,
            "placeholder": "Tag: short description"
          }
        ],
        "data": ["*"]
      }
    },
    "output": ["*"],
    "output_is_list": [false],
    "output_name": ["data opt"],
    "name": "CacheBackendDataNumberKey //Inspire",
    "display_name": "Cache Backend Data [NumberKey] (Inspire)",
    "description": "",
    "category": "InspirePack/Backend",
    "output_node": true
  },
  "CacheBackendDataList //Inspire": {
    "input": {
      "required": {
        "key": [
          "STRING",
          {
            "multiline": false,
            "placeholder": "Input data key (e.g. 'model a', 'chunli lora', 'girl latent 3', ...)"
          }
        ],
        "tag": [
          "STRING",
          {
            "multiline": false,
            "placeholder": "Tag: short description"
          }
        ],
        "data": ["*"]
      }
    },
    "output": ["*"],
    "output_is_list": [true],
    "output_name": ["data opt"],
    "name": "CacheBackendDataList //Inspire",
    "display_name": "Cache Backend Data List (Inspire)",
    "description": "",
    "category": "InspirePack/Backend",
    "output_node": true
  },
  "CacheBackendDataNumberKeyList //Inspire": {
    "input": {
      "required": {
        "key": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e19
          }
        ],
        "tag": [
          "STRING",
          {
            "multiline": false,
            "placeholder": "Tag: short description"
          }
        ],
        "data": ["*"]
      }
    },
    "output": ["*"],
    "output_is_list": [true],
    "output_name": ["data opt"],
    "name": "CacheBackendDataNumberKeyList //Inspire",
    "display_name": "Cache Backend Data List [NumberKey] (Inspire)",
    "description": "",
    "category": "InspirePack/Backend",
    "output_node": true
  },
  "RetrieveBackendData //Inspire": {
    "input": {
      "required": {
        "key": [
          "STRING",
          {
            "multiline": false,
            "placeholder": "Input data key (e.g. 'model a', 'chunli lora', 'girl latent 3', ...)"
          }
        ]
      }
    },
    "output": ["*"],
    "output_is_list": [true],
    "output_name": ["data"],
    "name": "RetrieveBackendData //Inspire",
    "display_name": "Retrieve Backend Data (Inspire)",
    "description": "",
    "category": "InspirePack/Backend",
    "output_node": false
  },
  "RetrieveBackendDataNumberKey //Inspire": {
    "input": {
      "required": {
        "key": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e19
          }
        ]
      }
    },
    "output": ["*"],
    "output_is_list": [true],
    "output_name": ["data"],
    "name": "RetrieveBackendDataNumberKey //Inspire",
    "display_name": "Retrieve Backend Data [NumberKey] (Inspire)",
    "description": "",
    "category": "InspirePack/Backend",
    "output_node": false
  },
  "RemoveBackendData //Inspire": {
    "input": {
      "required": {
        "key": [
          "STRING",
          {
            "multiline": false,
            "placeholder": "Input data key ('*' = clear all)"
          }
        ]
      },
      "optional": {
        "signal_opt": ["*"]
      }
    },
    "output": ["*"],
    "output_is_list": [false],
    "output_name": ["signal"],
    "name": "RemoveBackendData //Inspire",
    "display_name": "Remove Backend Data (Inspire)",
    "description": "",
    "category": "InspirePack/Backend",
    "output_node": true
  },
  "RemoveBackendDataNumberKey //Inspire": {
    "input": {
      "required": {
        "key": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e19
          }
        ]
      },
      "optional": {
        "signal_opt": ["*"]
      }
    },
    "output": ["*"],
    "output_is_list": [false],
    "output_name": ["signal"],
    "name": "RemoveBackendDataNumberKey //Inspire",
    "display_name": "Remove Backend Data [NumberKey] (Inspire)",
    "description": "",
    "category": "InspirePack/Backend",
    "output_node": true
  },
  "ShowCachedInfo //Inspire": {
    "input": {
      "required": {
        "cache_info": [
          "STRING",
          {
            "multiline": true,
            "default": ""
          }
        ],
        "key": [
          "STRING",
          {
            "multiline": false,
            "default": ""
          }
        ]
      },
      "hidden": {
        "unique_id": "UNIQUE_ID"
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "ShowCachedInfo //Inspire",
    "display_name": "Show Cached Info (Inspire)",
    "description": "",
    "category": "InspirePack/Backend",
    "output_node": true
  },
  "CheckpointLoaderSimpleShared //Inspire": {
    "input": {
      "required": {
        "ckpt_name": [
          [
            "Aniverse.safetensors",
            "Desync Image v5.safetensors",
            "MajicMix.safetensors",
            "Realistic Vision.safetensors",
            "darkSushi25D25D_v40.safetensors",
            "darksun_v41.safetensors",
            "era09_v10.safetensors",
            "pasteldiffusedmix.safetensors",
            "richyrichmix_V2Fp16.safetensors"
          ]
        ],
        "key_opt": [
          "STRING",
          {
            "multiline": false,
            "placeholder": "If empty, use 'ckpt_name' as the key."
          }
        ]
      }
    },
    "output": ["MODEL", "CLIP", "VAE", "STRING"],
    "output_is_list": [false, false, false, false],
    "output_name": ["model", "clip", "vae", "cache key"],
    "name": "CheckpointLoaderSimpleShared //Inspire",
    "display_name": "Shared Checkpoint Loader (Inspire)",
    "description": "",
    "category": "InspirePack/Backend",
    "output_node": false
  },
  "FloatRange //Inspire": {
    "input": {
      "required": {
        "start": [
          "FLOAT",
          {
            "default": 0,
            "min": -100,
            "max": 100,
            "step": 1e-9
          }
        ],
        "stop": [
          "FLOAT",
          {
            "default": 1,
            "min": -100,
            "max": 100,
            "step": 1e-9
          }
        ],
        "step": [
          "FLOAT",
          {
            "default": 0.01,
            "min": 0,
            "max": 100,
            "step": 1e-9
          }
        ],
        "limit": [
          "INT",
          {
            "default": 100,
            "min": 2,
            "max": 4096,
            "step": 1
          }
        ],
        "ensure_end": [
          "BOOLEAN",
          {
            "default": true,
            "label_on": "enable",
            "label_off": "disable"
          }
        ]
      }
    },
    "output": ["FLOAT"],
    "output_is_list": [true],
    "output_name": ["FLOAT"],
    "name": "FloatRange //Inspire",
    "display_name": "Float Range (Inspire)",
    "description": "",
    "category": "InspirePack/Util",
    "output_node": false
  },
  "ConcatConditioningsWithMultiplier //Inspire": {
    "input": {
      "required": {
        "conditioning1": ["CONDITIONING"]
      },
      "optional": {
        "multiplier1": [
          "FLOAT",
          {
            "default": 1,
            "min": 0,
            "max": 10,
            "step": 0.01
          }
        ]
      }
    },
    "output": ["CONDITIONING"],
    "output_is_list": [false],
    "output_name": ["CONDITIONING"],
    "name": "ConcatConditioningsWithMultiplier //Inspire",
    "display_name": "Concat Conditionings with Multiplier (Inspire)",
    "description": "",
    "category": "InspirePack/__for_testing",
    "output_node": false
  },
  "IPAdapterModelHelper //Inspire": {
    "input": {
      "required": {
        "model": ["MODEL"],
        "clip": ["CLIP"],
        "preset": [
          [
            "SD1.5",
            "SD1.5 Light",
            "SD1.5 Plus",
            "SD1.5 Plus Face",
            "SD1.5 Full Face",
            "SD1.5 ViT-G",
            "SDXL",
            "SDXL ViT-H",
            "SDXL Plus ViT-H",
            "SDXL Plus Face ViT-H",
            "SD1.5 FaceID",
            "SD1.5 FaceID Plus",
            "SD1.5 FaceID Plus v2",
            "SD1.5 FaceID Portrait",
            "SDXL FaceID",
            "SDXL FaceID v2"
          ]
        ],
        "lora_strength_model": [
          "FLOAT",
          {
            "default": 1,
            "min": -20,
            "max": 20,
            "step": 0.01
          }
        ],
        "lora_strength_clip": [
          "FLOAT",
          {
            "default": 1,
            "min": -20,
            "max": 20,
            "step": 0.01
          }
        ],
        "insightface_provider": [["CPU", "CUDA", "ROCM"]],
        "cache_mode": [
          ["insightface only", "clip_vision only", "all", "none"],
          {
            "default": "insightface only"
          }
        ]
      },
      "hidden": {
        "unique_id": "UNIQUE_ID"
      }
    },
    "output": [
      "IPADAPTER_PIPE",
      "IPADAPTER",
      "CLIP_VISION",
      "INSIGHTFACE",
      "MODEL",
      "CLIP",
      "STRING",
      "STRING"
    ],
    "output_is_list": [false, false, false, false, false, false, false, false],
    "output_name": [
      "IPADAPTER_PIPE",
      "IPADAPTER",
      "CLIP_VISION",
      "INSIGHTFACE",
      "MODEL",
      "CLIP",
      "insightface_cache_key",
      "clip_vision_cache_key"
    ],
    "name": "IPAdapterModelHelper //Inspire",
    "display_name": "IPAdapter Model Helper (Inspire)",
    "description": "",
    "category": "InspirePack/models",
    "output_node": false
  },
  "TilePreprocessor": {
    "input": {
      "required": {
        "image": ["IMAGE"]
      },
      "optional": {
        "pyrUp_iters": [
          "INT",
          {
            "default": 3,
            "min": 1,
            "max": 10,
            "step": 1
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": ["IMAGE"],
    "output_is_list": [false],
    "output_name": ["IMAGE"],
    "name": "TilePreprocessor",
    "display_name": "Tile",
    "description": "",
    "category": "ControlNet Preprocessors/others",
    "output_node": false
  },
  "AnimeFace_SemSegPreprocessor": {
    "input": {
      "required": {
        "image": ["IMAGE"]
      },
      "optional": {
        "remove_background_using_abg": [
          "BOOLEAN",
          {
            "default": true
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 512,
            "max": 512,
            "step": 64
          }
        ]
      }
    },
    "output": ["IMAGE", "MASK"],
    "output_is_list": [false, false],
    "output_name": ["IMAGE", "ABG_CHARACTER_MASK (MASK)"],
    "name": "AnimeFace_SemSegPreprocessor",
    "display_name": "Anime Face Segmentor",
    "description": "",
    "category": "ControlNet Preprocessors/Semantic Segmentation",
    "output_node": false
  },
  "BinaryPreprocessor": {
    "input": {
      "required": {
        "image": ["IMAGE"]
      },
      "optional": {
        "bin_threshold": [
          "INT",
          {
            "default": 100,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": ["IMAGE"],
    "output_is_list": [false],
    "output_name": ["IMAGE"],
    "name": "BinaryPreprocessor",
    "display_name": "Binary Lines",
    "description": "",
    "category": "ControlNet Preprocessors/Line Extractors",
    "output_node": false
  },
  "Zoe-DepthMapPreprocessor": {
    "input": {
      "required": {
        "image": ["IMAGE"]
      },
      "optional": {
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": ["IMAGE"],
    "output_is_list": [false],
    "output_name": ["IMAGE"],
    "name": "Zoe-DepthMapPreprocessor",
    "display_name": "Zoe Depth Map",
    "description": "",
    "category": "ControlNet Preprocessors/Normal and Depth Estimators",
    "output_node": false
  },
  "InpaintPreprocessor": {
    "input": {
      "required": {
        "image": ["IMAGE"],
        "mask": ["MASK"]
      }
    },
    "output": ["IMAGE"],
    "output_is_list": [false],
    "output_name": ["IMAGE"],
    "name": "InpaintPreprocessor",
    "display_name": "Inpaint Preprocessor",
    "description": "",
    "category": "ControlNet Preprocessors/others",
    "output_node": false
  },
  "ColorPreprocessor": {
    "input": {
      "required": {
        "image": ["IMAGE"]
      },
      "optional": {
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": ["IMAGE"],
    "output_is_list": [false],
    "output_name": ["IMAGE"],
    "name": "ColorPreprocessor",
    "display_name": "Color Pallete",
    "description": "",
    "category": "ControlNet Preprocessors/T2IAdapter-only",
    "output_node": false
  },
  "DepthAnythingPreprocessor": {
    "input": {
      "required": {
        "image": ["IMAGE"]
      },
      "optional": {
        "ckpt_name": [
          [
            "depth_anything_vitl14.pth",
            "depth_anything_vitb14.pth",
            "depth_anything_vits14.pth"
          ],
          {
            "default": "depth_anything_vitl14.pth"
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": ["IMAGE"],
    "output_is_list": [false],
    "output_name": ["IMAGE"],
    "name": "DepthAnythingPreprocessor",
    "display_name": "Depth Anything",
    "description": "",
    "category": "ControlNet Preprocessors/Normal and Depth Estimators",
    "output_node": false
  },
  "Zoe_DepthAnythingPreprocessor": {
    "input": {
      "required": {
        "image": ["IMAGE"]
      },
      "optional": {
        "environment": [
          ["indoor", "outdoor"],
          {
            "default": "indoor"
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": ["IMAGE"],
    "output_is_list": [false],
    "output_name": ["IMAGE"],
    "name": "Zoe_DepthAnythingPreprocessor",
    "display_name": "Zoe Depth Anything",
    "description": "",
    "category": "ControlNet Preprocessors/Normal and Depth Estimators",
    "output_node": false
  },
  "DensePosePreprocessor": {
    "input": {
      "required": {
        "image": ["IMAGE"]
      },
      "optional": {
        "model": [
          [
            "densepose_r50_fpn_dl.torchscript",
            "densepose_r101_fpn_dl.torchscript"
          ],
          {
            "default": "densepose_r50_fpn_dl.torchscript"
          }
        ],
        "cmap": [
          ["Viridis (MagicAnimate)", "Parula (CivitAI)"],
          {
            "default": "Viridis (MagicAnimate)"
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": ["IMAGE"],
    "output_is_list": [false],
    "output_name": ["IMAGE"],
    "name": "DensePosePreprocessor",
    "display_name": "DensePose Estimator",
    "description": "",
    "category": "ControlNet Preprocessors/Faces and Poses Estimators",
    "output_node": false
  },
  "OneFormer-COCO-SemSegPreprocessor": {
    "input": {
      "required": {
        "image": ["IMAGE"]
      },
      "optional": {
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": ["IMAGE"],
    "output_is_list": [false],
    "output_name": ["IMAGE"],
    "name": "OneFormer-COCO-SemSegPreprocessor",
    "display_name": "OneFormer COCO Segmentor",
    "description": "",
    "category": "ControlNet Preprocessors/Semantic Segmentation",
    "output_node": false
  },
  "OneFormer-ADE20K-SemSegPreprocessor": {
    "input": {
      "required": {
        "image": ["IMAGE"]
      },
      "optional": {
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": ["IMAGE"],
    "output_is_list": [false],
    "output_name": ["IMAGE"],
    "name": "OneFormer-ADE20K-SemSegPreprocessor",
    "display_name": "OneFormer ADE20K Segmentor",
    "description": "",
    "category": "ControlNet Preprocessors/Semantic Segmentation",
    "output_node": false
  },
  "M-LSDPreprocessor": {
    "input": {
      "required": {
        "image": ["IMAGE"]
      },
      "optional": {
        "score_threshold": [
          "FLOAT",
          {
            "default": 0.1,
            "min": 0.01,
            "max": 2,
            "step": 0.01
          }
        ],
        "dist_threshold": [
          "FLOAT",
          {
            "default": 0.1,
            "min": 0.01,
            "max": 20,
            "step": 0.01
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": ["IMAGE"],
    "output_is_list": [false],
    "output_name": ["IMAGE"],
    "name": "M-LSDPreprocessor",
    "display_name": "M-LSD Lines",
    "description": "",
    "category": "ControlNet Preprocessors/Line Extractors",
    "output_node": false
  },
  "DWPreprocessor": {
    "input": {
      "required": {
        "image": ["IMAGE"]
      },
      "optional": {
        "detect_hand": [
          ["enable", "disable"],
          {
            "default": "enable"
          }
        ],
        "detect_body": [
          ["enable", "disable"],
          {
            "default": "enable"
          }
        ],
        "detect_face": [
          ["enable", "disable"],
          {
            "default": "enable"
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ],
        "bbox_detector": [
          [
            "yolox_l.torchscript.pt",
            "yolox_l.onnx",
            "yolo_nas_l_fp16.onnx",
            "yolo_nas_m_fp16.onnx",
            "yolo_nas_s_fp16.onnx"
          ],
          {
            "default": "yolox_l.onnx"
          }
        ],
        "pose_estimator": [
          [
            "dw-ll_ucoco_384_bs5.torchscript.pt",
            "dw-ll_ucoco_384.onnx",
            "dw-ll_ucoco.onnx"
          ],
          {
            "default": "dw-ll_ucoco_384_bs5.torchscript.pt"
          }
        ]
      }
    },
    "output": ["IMAGE", "POSE_KEYPOINT"],
    "output_is_list": [false, false],
    "output_name": ["IMAGE", "POSE_KEYPOINT"],
    "name": "DWPreprocessor",
    "display_name": "DWPose Estimator",
    "description": "",
    "category": "ControlNet Preprocessors/Faces and Poses Estimators",
    "output_node": false
  },
  "AnimalPosePreprocessor": {
    "input": {
      "required": {
        "image": ["IMAGE"]
      },
      "optional": {
        "bbox_detector": [
          [
            "yolox_l.torchscript.pt",
            "yolox_l.onnx",
            "yolo_nas_l_fp16.onnx",
            "yolo_nas_m_fp16.onnx",
            "yolo_nas_s_fp16.onnx"
          ],
          {
            "default": "yolox_l.torchscript.pt"
          }
        ],
        "pose_estimator": [
          [
            "rtmpose-m_ap10k_256_bs5.torchscript.pt",
            "rtmpose-m_ap10k_256.onnx"
          ],
          {
            "default": "rtmpose-m_ap10k_256_bs5.torchscript.pt"
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": ["IMAGE", "POSE_KEYPOINT"],
    "output_is_list": [false, false],
    "output_name": ["IMAGE", "POSE_KEYPOINT"],
    "name": "AnimalPosePreprocessor",
    "display_name": "AnimalPose Estimator (AP10K)",
    "description": "",
    "category": "ControlNet Preprocessors/Faces and Poses Estimators",
    "output_node": false
  },
  "MediaPipe-FaceMeshPreprocessor": {
    "input": {
      "required": {
        "image": ["IMAGE"]
      },
      "optional": {
        "max_faces": [
          "INT",
          {
            "default": 10,
            "min": 1,
            "max": 50,
            "step": 1
          }
        ],
        "min_confidence": [
          "FLOAT",
          {
            "default": 0.5,
            "min": 0.01,
            "max": 1,
            "step": 0.01
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": ["IMAGE"],
    "output_is_list": [false],
    "output_name": ["IMAGE"],
    "name": "MediaPipe-FaceMeshPreprocessor",
    "display_name": "MediaPipe Face Mesh",
    "description": "",
    "category": "ControlNet Preprocessors/Faces and Poses Estimators",
    "output_node": false
  },
  "LineArtPreprocessor": {
    "input": {
      "required": {
        "image": ["IMAGE"]
      },
      "optional": {
        "coarse": [
          ["disable", "enable"],
          {
            "default": "disable"
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": ["IMAGE"],
    "output_is_list": [false],
    "output_name": ["IMAGE"],
    "name": "LineArtPreprocessor",
    "display_name": "Realistic Lineart",
    "description": "",
    "category": "ControlNet Preprocessors/Line Extractors",
    "output_node": false
  },
  "MiDaS-NormalMapPreprocessor": {
    "input": {
      "required": {
        "image": ["IMAGE"]
      },
      "optional": {
        "a": [
          "FLOAT",
          {
            "default": 6.28318530717959,
            "min": 0,
            "max": 15.707963267949,
            "step": 0.05
          }
        ],
        "bg_threshold": [
          "FLOAT",
          {
            "default": 0.1,
            "min": 0,
            "max": 1,
            "step": 0.05
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": ["IMAGE"],
    "output_is_list": [false],
    "output_name": ["IMAGE"],
    "name": "MiDaS-NormalMapPreprocessor",
    "display_name": "MiDaS Normal Map",
    "description": "",
    "category": "ControlNet Preprocessors/Normal and Depth Estimators",
    "output_node": false
  },
  "MiDaS-DepthMapPreprocessor": {
    "input": {
      "required": {
        "image": ["IMAGE"]
      },
      "optional": {
        "a": [
          "FLOAT",
          {
            "default": 6.28318530717959,
            "min": 0,
            "max": 15.707963267949,
            "step": 0.05
          }
        ],
        "bg_threshold": [
          "FLOAT",
          {
            "default": 0.1,
            "min": 0,
            "max": 1,
            "step": 0.05
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": ["IMAGE"],
    "output_is_list": [false],
    "output_name": ["IMAGE"],
    "name": "MiDaS-DepthMapPreprocessor",
    "display_name": "MiDaS Depth Map",
    "description": "",
    "category": "ControlNet Preprocessors/Normal and Depth Estimators",
    "output_node": false
  },
  "CannyEdgePreprocessor": {
    "input": {
      "required": {
        "image": ["IMAGE"]
      },
      "optional": {
        "low_threshold": [
          "INT",
          {
            "default": 100,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "high_threshold": [
          "INT",
          {
            "default": 200,
            "min": 0,
            "max": 255,
            "step": 1
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": ["IMAGE"],
    "output_is_list": [false],
    "output_name": ["IMAGE"],
    "name": "CannyEdgePreprocessor",
    "display_name": "Canny Edge",
    "description": "",
    "category": "ControlNet Preprocessors/Line Extractors",
    "output_node": false
  },
  "ShufflePreprocessor": {
    "input": {
      "required": {
        "image": ["IMAGE"],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ],
        "seed": [
          "INT",
          {
            "default": 0,
            "min": 0,
            "max": 1.8446744073709552e19
          }
        ]
      }
    },
    "output": ["IMAGE"],
    "output_is_list": [false],
    "output_name": ["IMAGE"],
    "name": "ShufflePreprocessor",
    "display_name": "Content Shuffle",
    "description": "",
    "category": "ControlNet Preprocessors/T2IAdapter-only",
    "output_node": false
  },
  "AnimeLineArtPreprocessor": {
    "input": {
      "required": {
        "image": ["IMAGE"]
      },
      "optional": {
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": ["IMAGE"],
    "output_is_list": [false],
    "output_name": ["IMAGE"],
    "name": "AnimeLineArtPreprocessor",
    "display_name": "Anime Lineart",
    "description": "",
    "category": "ControlNet Preprocessors/Line Extractors",
    "output_node": false
  },
  "SAMPreprocessor": {
    "input": {
      "required": {
        "image": ["IMAGE"]
      },
      "optional": {
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": ["IMAGE"],
    "output_is_list": [false],
    "output_name": ["IMAGE"],
    "name": "SAMPreprocessor",
    "display_name": "SAM Segmentor",
    "description": "",
    "category": "ControlNet Preprocessors/others",
    "output_node": false
  },
  "HEDPreprocessor": {
    "input": {
      "required": {
        "image": ["IMAGE"]
      },
      "optional": {
        "safe": [
          ["enable", "disable"],
          {
            "default": "enable"
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": ["IMAGE"],
    "output_is_list": [false],
    "output_name": ["IMAGE"],
    "name": "HEDPreprocessor",
    "display_name": "HED Soft-Edge Lines",
    "description": "",
    "category": "ControlNet Preprocessors/Line Extractors",
    "output_node": false
  },
  "FakeScribblePreprocessor": {
    "input": {
      "required": {
        "image": ["IMAGE"]
      },
      "optional": {
        "safe": [
          ["enable", "disable"],
          {
            "default": "enable"
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": ["IMAGE"],
    "output_is_list": [false],
    "output_name": ["IMAGE"],
    "name": "FakeScribblePreprocessor",
    "display_name": "Fake Scribble Lines (aka scribble_hed)",
    "description": "",
    "category": "ControlNet Preprocessors/Line Extractors",
    "output_node": false
  },
  "ScribblePreprocessor": {
    "input": {
      "required": {
        "image": ["IMAGE"]
      },
      "optional": {
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": ["IMAGE"],
    "output_is_list": [false],
    "output_name": ["IMAGE"],
    "name": "ScribblePreprocessor",
    "display_name": "Scribble Lines",
    "description": "",
    "category": "ControlNet Preprocessors/Line Extractors",
    "output_node": false
  },
  "Scribble_XDoG_Preprocessor": {
    "input": {
      "required": {
        "image": ["IMAGE"]
      },
      "optional": {
        "threshold": [
          "INT",
          {
            "default": 32,
            "min": 1,
            "max": 64,
            "step": 1
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": ["IMAGE"],
    "output_is_list": [false],
    "output_name": ["IMAGE"],
    "name": "Scribble_XDoG_Preprocessor",
    "display_name": "Scribble XDoG Lines",
    "description": "",
    "category": "ControlNet Preprocessors/Line Extractors",
    "output_node": false
  },
  "DiffusionEdge_Preprocessor": {
    "input": {
      "required": {
        "image": ["IMAGE"]
      },
      "optional": {
        "environment": [
          ["indoor", "urban", "natrual"],
          {
            "default": "indoor"
          }
        ],
        "patch_batch_size": [
          "INT",
          {
            "default": 4,
            "min": 1,
            "max": 16
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": ["IMAGE"],
    "output_is_list": [false],
    "output_name": ["IMAGE"],
    "name": "DiffusionEdge_Preprocessor",
    "display_name": "Diffusion Edge (batch size ↑ =\u003E speed ↑, VRAM ↑)",
    "description": "",
    "category": "ControlNet Preprocessors/Line Extractors",
    "output_node": false
  },
  "SavePoseKpsAsJsonFile": {
    "input": {
      "required": {
        "pose_kps": ["POSE_KEYPOINT"],
        "filename_prefix": [
          "STRING",
          {
            "default": "PoseKeypoint"
          }
        ]
      }
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "name": "SavePoseKpsAsJsonFile",
    "display_name": "Save Pose Keypoints",
    "description": "",
    "category": "ControlNet Preprocessors/Pose Keypoint Postprocess",
    "output_node": true
  },
  "FacialPartColoringFromPoseKps": {
    "input": {
      "required": {
        "pose_kps": ["POSE_KEYPOINT"],
        "mode": [
          ["point", "polygon"],
          {
            "default": "polygon"
          }
        ],
        "skin": [
          "STRING",
          {
            "default": "rgb(0, 153, 255)",
            "multiline": false
          }
        ],
        "left_eye": [
          "STRING",
          {
            "default": "rgb(0, 204, 153)",
            "multiline": false
          }
        ],
        "right_eye": [
          "STRING",
          {
            "default": "rgb(255, 153, 0)",
            "multiline": false
          }
        ],
        "nose": [
          "STRING",
          {
            "default": "rgb(255, 102, 255)",
            "multiline": false
          }
        ],
        "upper_lip": [
          "STRING",
          {
            "default": "rgb(102, 0, 51)",
            "multiline": false
          }
        ],
        "inner_mouth": [
          "STRING",
          {
            "default": "rgb(255, 204, 255)",
            "multiline": false
          }
        ],
        "lower_lip": [
          "STRING",
          {
            "default": "rgb(255, 0, 102)",
            "multiline": false
          }
        ]
      }
    },
    "output": ["IMAGE"],
    "output_is_list": [false],
    "output_name": ["IMAGE"],
    "name": "FacialPartColoringFromPoseKps",
    "display_name": "Colorize Facial Parts from PoseKPS",
    "description": "",
    "category": "ControlNet Preprocessors/Pose Keypoint Postprocess",
    "output_node": false
  },
  "PiDiNetPreprocessor": {
    "input": {
      "required": {
        "image": ["IMAGE"]
      },
      "optional": {
        "safe": [
          ["enable", "disable"],
          {
            "default": "enable"
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": ["IMAGE"],
    "output_is_list": [false],
    "output_name": ["IMAGE"],
    "name": "PiDiNetPreprocessor",
    "display_name": "PiDiNet Soft-Edge Lines",
    "description": "",
    "category": "ControlNet Preprocessors/Line Extractors",
    "output_node": false
  },
  "OpenposePreprocessor": {
    "input": {
      "required": {
        "image": ["IMAGE"]
      },
      "optional": {
        "detect_hand": [
          ["enable", "disable"],
          {
            "default": "enable"
          }
        ],
        "detect_body": [
          ["enable", "disable"],
          {
            "default": "enable"
          }
        ],
        "detect_face": [
          ["enable", "disable"],
          {
            "default": "enable"
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": ["IMAGE", "POSE_KEYPOINT"],
    "output_is_list": [false, false],
    "output_name": ["IMAGE", "POSE_KEYPOINT"],
    "name": "OpenposePreprocessor",
    "display_name": "OpenPose Pose",
    "description": "",
    "category": "ControlNet Preprocessors/Faces and Poses Estimators",
    "output_node": false
  },
  "LeReS-DepthMapPreprocessor": {
    "input": {
      "required": {
        "image": ["IMAGE"]
      },
      "optional": {
        "rm_nearest": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 100,
            "step": 0.1
          }
        ],
        "rm_background": [
          "FLOAT",
          {
            "default": 0,
            "min": 0,
            "max": 100,
            "step": 0.1
          }
        ],
        "boost": [
          ["enable", "disable"],
          {
            "default": "disable"
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": ["IMAGE"],
    "output_is_list": [false],
    "output_name": ["IMAGE"],
    "name": "LeReS-DepthMapPreprocessor",
    "display_name": "LeReS Depth Map (enable boost for leres++)",
    "description": "",
    "category": "ControlNet Preprocessors/Normal and Depth Estimators",
    "output_node": false
  },
  "Unimatch_OptFlowPreprocessor": {
    "input": {
      "required": {
        "image": ["IMAGE"],
        "ckpt_name": [
          [
            "gmflow-scale1-mixdata.pth",
            "gmflow-scale2-mixdata.pth",
            "gmflow-scale2-regrefine6-mixdata.pth"
          ],
          {
            "default": "gmflow-scale2-regrefine6-mixdata.pth"
          }
        ],
        "backward_flow": [
          "BOOLEAN",
          {
            "default": false
          }
        ],
        "bidirectional_flow": [
          "BOOLEAN",
          {
            "default": false
          }
        ]
      }
    },
    "output": ["OPTICAL_FLOW", "IMAGE"],
    "output_is_list": [false, false],
    "output_name": ["OPTICAL_FLOW", "PREVIEW_IMAGE"],
    "name": "Unimatch_OptFlowPreprocessor",
    "display_name": "Unimatch Optical Flow",
    "description": "",
    "category": "ControlNet Preprocessors/Optical Flow",
    "output_node": false
  },
  "MaskOptFlow": {
    "input": {
      "required": {
        "optical_flow": ["OPTICAL_FLOW"],
        "mask": ["MASK"]
      }
    },
    "output": ["OPTICAL_FLOW", "IMAGE"],
    "output_is_list": [false, false],
    "output_name": ["OPTICAL_FLOW", "PREVIEW_IMAGE"],
    "name": "MaskOptFlow",
    "display_name": "Mask Optical Flow (DragNUWA)",
    "description": "",
    "category": "ControlNet Preprocessors/Optical Flow",
    "output_node": false
  },
  "ImageLuminanceDetector": {
    "input": {
      "required": {
        "image": ["IMAGE"]
      },
      "optional": {
        "gamma_correction": [
          "FLOAT",
          {
            "default": 1,
            "min": 0.1,
            "max": 2,
            "step": 0.001
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": ["IMAGE"],
    "output_is_list": [false],
    "output_name": ["IMAGE"],
    "name": "ImageLuminanceDetector",
    "display_name": "Image Luminance",
    "description": "",
    "category": "ControlNet Preprocessors/Recolor",
    "output_node": false
  },
  "ImageIntensityDetector": {
    "input": {
      "required": {
        "image": ["IMAGE"]
      },
      "optional": {
        "gamma_correction": [
          "FLOAT",
          {
            "default": 1,
            "min": 0.1,
            "max": 2,
            "step": 0.001
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": ["IMAGE"],
    "output_is_list": [false],
    "output_name": ["IMAGE"],
    "name": "ImageIntensityDetector",
    "display_name": "Image Intensity",
    "description": "",
    "category": "ControlNet Preprocessors/Recolor",
    "output_node": false
  },
  "UniFormer-SemSegPreprocessor": {
    "input": {
      "required": {
        "image": ["IMAGE"]
      },
      "optional": {
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": ["IMAGE"],
    "output_is_list": [false],
    "output_name": ["IMAGE"],
    "name": "UniFormer-SemSegPreprocessor",
    "display_name": "UniFormer Segmentor",
    "description": "",
    "category": "ControlNet Preprocessors/Semantic Segmentation",
    "output_node": false
  },
  "SemSegPreprocessor": {
    "input": {
      "required": {
        "image": ["IMAGE"]
      },
      "optional": {
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": ["IMAGE"],
    "output_is_list": [false],
    "output_name": ["IMAGE"],
    "name": "SemSegPreprocessor",
    "display_name": "Semantic Segmentor (legacy, alias for UniFormer)",
    "description": "",
    "category": "ControlNet Preprocessors/Semantic Segmentation",
    "output_node": false
  },
  "MeshGraphormer-DepthMapPreprocessor": {
    "input": {
      "required": {
        "image": ["IMAGE"]
      },
      "optional": {
        "mask_bbox_padding": [
          "INT",
          {
            "default": 30,
            "min": 0,
            "max": 100
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ],
        "mask_type": [
          ["based_on_depth", "tight_bboxes", "original"],
          {
            "default": "based_on_depth"
          }
        ],
        "mask_expand": [
          "INT",
          {
            "default": 5,
            "min": -2048,
            "max": 2048,
            "step": 1
          }
        ],
        "rand_seed": [
          "INT",
          {
            "default": 88,
            "min": 0,
            "max": 1.8446744073709552e19
          }
        ]
      }
    },
    "output": ["IMAGE", "MASK"],
    "output_is_list": [false, false],
    "output_name": ["IMAGE", "INPAINTING_MASK"],
    "name": "MeshGraphormer-DepthMapPreprocessor",
    "display_name": "MeshGraphormer Hand Refiner",
    "description": "",
    "category": "ControlNet Preprocessors/Normal and Depth Estimators",
    "output_node": false
  },
  "Manga2Anime_LineArt_Preprocessor": {
    "input": {
      "required": {
        "image": ["IMAGE"]
      },
      "optional": {
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": ["IMAGE"],
    "output_is_list": [false],
    "output_name": ["IMAGE"],
    "name": "Manga2Anime_LineArt_Preprocessor",
    "display_name": "Manga Lineart (aka lineart_anime_denoise)",
    "description": "",
    "category": "ControlNet Preprocessors/Line Extractors",
    "output_node": false
  },
  "BAE-NormalMapPreprocessor": {
    "input": {
      "required": {
        "image": ["IMAGE"]
      },
      "optional": {
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": ["IMAGE"],
    "output_is_list": [false],
    "output_name": ["IMAGE"],
    "name": "BAE-NormalMapPreprocessor",
    "display_name": "BAE Normal Map",
    "description": "",
    "category": "ControlNet Preprocessors/Normal and Depth Estimators",
    "output_node": false
  },
  "TEEDPreprocessor": {
    "input": {
      "required": {
        "image": ["IMAGE"]
      },
      "optional": {
        "safe_steps": [
          "INT",
          {
            "default": 2,
            "min": 0,
            "max": 10
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": ["IMAGE"],
    "output_is_list": [false],
    "output_name": ["IMAGE"],
    "name": "TEEDPreprocessor",
    "display_name": "TEEDPreprocessor",
    "description": "",
    "category": "ControlNet Preprocessors/Line Extractors",
    "output_node": false
  },
  "LineartStandardPreprocessor": {
    "input": {
      "required": {
        "image": ["IMAGE"]
      },
      "optional": {
        "guassian_sigma": [
          "FLOAT",
          {
            "default": 6,
            "min": 0,
            "max": 100
          }
        ],
        "intensity_threshold": [
          "INT",
          {
            "default": 8,
            "min": 0,
            "max": 16
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": ["IMAGE"],
    "output_is_list": [false],
    "output_name": ["IMAGE"],
    "name": "LineartStandardPreprocessor",
    "display_name": "Standard Lineart",
    "description": "",
    "category": "ControlNet Preprocessors/Line Extractors",
    "output_node": false
  },
  "AIO_Preprocessor": {
    "input": {
      "required": {
        "image": ["IMAGE"]
      },
      "optional": {
        "preprocessor": [
          [
            "none",
            "TilePreprocessor",
            "AnimeFace_SemSegPreprocessor",
            "BinaryPreprocessor",
            "Zoe-DepthMapPreprocessor",
            "ColorPreprocessor",
            "DepthAnythingPreprocessor",
            "Zoe_DepthAnythingPreprocessor",
            "DensePosePreprocessor",
            "OneFormer-COCO-SemSegPreprocessor",
            "OneFormer-ADE20K-SemSegPreprocessor",
            "M-LSDPreprocessor",
            "DWPreprocessor",
            "AnimalPosePreprocessor",
            "MediaPipe-FaceMeshPreprocessor",
            "LineArtPreprocessor",
            "MiDaS-NormalMapPreprocessor",
            "MiDaS-DepthMapPreprocessor",
            "CannyEdgePreprocessor",
            "ShufflePreprocessor",
            "AnimeLineArtPreprocessor",
            "SAMPreprocessor",
            "HEDPreprocessor",
            "FakeScribblePreprocessor",
            "ScribblePreprocessor",
            "Scribble_XDoG_Preprocessor",
            "DiffusionEdge_Preprocessor",
            "SavePoseKpsAsJsonFile",
            "FacialPartColoringFromPoseKps",
            "PiDiNetPreprocessor",
            "OpenposePreprocessor",
            "LeReS-DepthMapPreprocessor",
            "Unimatch_OptFlowPreprocessor",
            "MaskOptFlow",
            "ImageLuminanceDetector",
            "ImageIntensityDetector",
            "UniFormer-SemSegPreprocessor",
            "SemSegPreprocessor",
            "MeshGraphormer-DepthMapPreprocessor",
            "Manga2Anime_LineArt_Preprocessor",
            "BAE-NormalMapPreprocessor",
            "TEEDPreprocessor",
            "LineartStandardPreprocessor"
          ],
          {
            "default": "none"
          }
        ],
        "resolution": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 2048,
            "step": 64
          }
        ]
      }
    },
    "output": ["IMAGE"],
    "output_is_list": [false],
    "output_name": ["IMAGE"],
    "name": "AIO_Preprocessor",
    "display_name": "AIO Aux Preprocessor",
    "description": "",
    "category": "ControlNet Preprocessors",
    "output_node": false
  },
  "PixelPerfectResolution": {
    "input": {
      "required": {
        "original_image": ["IMAGE"],
        "image_gen_width": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 8192,
            "step": 8
          }
        ],
        "image_gen_height": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 8192,
            "step": 8
          }
        ],
        "resize_mode": [
          ["Just Resize", "Crop and Resize", "Resize and Fill"],
          {
            "default": "Just Resize"
          }
        ]
      }
    },
    "output": ["INT"],
    "output_is_list": [false],
    "output_name": ["RESOLUTION (INT)"],
    "name": "PixelPerfectResolution",
    "display_name": "Pixel Perfect Resolution",
    "description": "",
    "category": "ControlNet Preprocessors",
    "output_node": false
  },
  "ImageGenResolutionFromImage": {
    "input": {
      "required": {
        "image": ["IMAGE"]
      }
    },
    "output": ["INT", "INT"],
    "output_is_list": [false, false],
    "output_name": ["IMAGE_GEN_WIDTH (INT)", "IMAGE_GEN_HEIGHT (INT)"],
    "name": "ImageGenResolutionFromImage",
    "display_name": "Generation Resolution From Image",
    "description": "",
    "category": "ControlNet Preprocessors",
    "output_node": false
  },
  "ImageGenResolutionFromLatent": {
    "input": {
      "required": {
        "latent": ["LATENT"]
      }
    },
    "output": ["INT", "INT"],
    "output_is_list": [false, false],
    "output_name": ["IMAGE_GEN_WIDTH (INT)", "IMAGE_GEN_HEIGHT (INT)"],
    "name": "ImageGenResolutionFromLatent",
    "display_name": "Generation Resolution From Latent",
    "description": "",
    "category": "ControlNet Preprocessors",
    "output_node": false
  },
  "HintImageEnchance": {
    "input": {
      "required": {
        "hint_image": ["IMAGE"],
        "image_gen_width": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 8192,
            "step": 8
          }
        ],
        "image_gen_height": [
          "INT",
          {
            "default": 512,
            "min": 64,
            "max": 8192,
            "step": 8
          }
        ],
        "resize_mode": [
          ["Just Resize", "Crop and Resize", "Resize and Fill"],
          {
            "default": "Just Resize"
          }
        ]
      }
    },
    "output": ["IMAGE"],
    "output_is_list": [false],
    "output_name": ["IMAGE"],
    "name": "HintImageEnchance",
    "display_name": "Enchance And Resize Hint Images",
    "description": "",
    "category": "ControlNet Preprocessors",
    "output_node": false
  }
}
